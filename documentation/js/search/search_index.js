var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/AddContactService.html",[0,0.403,1,1.918]],["body/injectables/AddContactService.html",[0,0.525,1,3.1,2,1.23,3,0.189,4,0.165,5,0.165,6,3.855,7,2.864,8,0.448,9,2.915,10,2.498,11,2.501,12,2.146,13,2.498,14,0.93,15,1.212,16,5.787,17,2.891,18,2.891,19,1.584,20,2.915,21,3.1,22,1.731,23,3.523,24,2.18,25,0.214,26,0.567,27,1.148,28,3.659,29,4.664,30,5.787,31,3.523,32,4.664,33,5.787,34,4.664,35,0.978,36,1.799,37,2.555,38,1.128,39,4.664,40,1.145,41,2.247,42,2.179,43,1.999,44,1.11,45,0.023,46,0.529,47,0.51,48,0.915,49,2.18,50,4.664,51,3.359,52,2.498,53,1.58,54,2.69,55,4.971,56,2.174,57,3.934,58,3.953,59,2.247,60,1.037,61,1.978,62,2.337,63,2.443,64,2.967,65,3.359,66,3.523,67,3.801,68,2.915,69,3.257,70,4.298,71,4.664,72,1.838,73,3.359,74,2.329,75,2.266,76,4.564,77,4.664,78,3.359,79,3.523,80,3.359,81,1.707,82,2.538,83,4.664,84,3.359,85,2.18,86,2.498,87,2.329,88,0.54,89,0.652,90,0.652,91,3.976,92,2.498,93,1.521,94,2.915,95,0.529,96,0.265,97,1.096,98,4.754,99,1.212,100,1.473,101,2.538,102,1.385,103,1.678,104,1.035,105,0.978,106,0.189,107,0.292,108,0.884,109,1.035,110,1.458,111,4.229,112,6.08,113,1.326,114,3.359,115,3.801,116,2.329,117,3.508,118,2.538,119,1.77,120,5.184,121,3.359,122,2.915,123,2.1,124,2.294,125,1.16,126,2.864,127,3.359,128,4.568,129,3.359,130,2.538,131,3.359,132,2.538,133,0.014,134,0.014]],["title/components/AppComponent.html",[135,0.435,136,0.985]],["body/components/AppComponent.html",[3,0.26,4,0.227,5,0.227,8,0.33,15,1.203,19,1.611,22,1.273,25,0.295,26,0.7,38,0.793,45,0.022,46,0.501,47,0.366,88,0.744,89,0.898,90,0.898,95,0.403,96,0.366,105,1.911,106,0.26,107,0.403,133,0.017,134,0.017,135,0.82,136,1.805,137,1.775,138,1.599,139,1.599,140,1.599,141,1.599,142,3.946,143,3.786,144,5.76,145,5.76,146,5.76,147,5.76,148,2.877,149,3.601,150,4.352,151,4.911,152,5.76,153,2.416,154,1.599,155,2.551,156,1.99,157,6.271,158,1.99,159,5.76,160,4.611,161,5.76,162,4.629,163,4.352,164,3.934,165,4.911,166,5.76,167,1.426,168,1.99,169,1.99,170,1.599,171,2.267,172,1.599,173,1.273,174,1.99,175,1.599,176,1.273,177,1.599,178,1.348,179,1.426,180,1.136,181,1.599,182,1.273,183,1.599,184,1.273,185,1.599,186,1.203,187,1.599,188,1.203,189,1.599,190,1.348,191,1.51,192,1.273,193,1.51,194,1.599,195,1.273,196,1.426,197,1.599,198,1.203,199,1.51,200,1.599,201,1.203,202,1.599,203,1.203,204,1.51,205,1.599,206,1.273,207,1.426,208,1.599,209,1.273,210,1.599,211,1.203,212,1.426,213,1.599,214,1.203,215,1.51,216,1.599,217,1.599]],["title/modules/AppModule.html",[218,2.446,219,2.446]],["body/modules/AppModule.html",[3,0.212,4,0.184,5,0.184,15,0.978,22,1.035,45,0.023,95,0.642,96,0.297,97,1.227,106,0.212,107,0.327,133,0.015,134,0.015,136,1.932,153,1.227,164,2.57,167,1.159,173,1.791,176,1.791,178,1.895,179,1.159,180,1.237,182,1.791,184,1.791,186,1.692,188,1.692,190,1.895,191,1.227,192,1.791,193,1.227,195,1.791,196,1.552,198,1.692,201,1.692,203,1.692,206,1.791,207,1.552,209,1.791,211,1.692,212,1.159,214,1.692,218,2.57,219,5.101,220,2.352,221,2.57,222,4.843,223,3.954,224,4.843,225,2.843,226,3.208,227,3.208,228,3.208,229,3.208,230,3.208,231,4.07,232,4.07,233,3.756,234,3.252,235,4.296,236,2.015,237,3.762,238,4.296,239,4.296,240,5.038,241,3.208,242,5.038,243,3.441,244,3.762,245,3.762,246,3.208,247,2.57,248,3.208,249,2.843,250,3.762,251,5.038,252,2.843,253,3.762,254,3.762,255,3.208,256,2.843,257,3.762,258,2.843,259,4.296,260,5.038,261,3.807,262,3.15,263,3.441,264,5.038,265,2.907,266,2.57,267,2.843,268,3.762,269,5.038,270,5.038,271,2.57,272,3.208,273,5.173,274,2.57,275,3.208,276,2.57,277,3.208,278,2.843,279,3.762,280,2.843,281,3.762,282,3.208,283,2.57,284,2.843,285,3.762,286,3.208,287,3.208,288,3.762,289,3.208,290,5.038,291,3.762,292,3.762,293,3.208,294,2.57,295,3.208,296,3.208,297,2.57,298,3.208,299,4.296,300,5.038,301,3.762,302,1.551]],["title/modules/AppRoutingModule.html",[218,2.446,231,2.238]],["body/modules/AppRoutingModule.html",[3,0.271,4,0.236,5,0.236,15,1.252,19,1.449,45,0.023,95,0.633,96,0.381,106,0.271,107,0.419,110,1.116,133,0.018,134,0.018,135,0.87,173,1.624,176,1.624,179,1.484,186,1.534,188,1.534,198,1.534,199,1.571,201,1.534,203,1.534,204,1.571,211,1.534,212,1.484,214,1.534,215,1.571,220,3.01,225,3.638,231,3.69,238,4.106,239,5.033,246,4.106,247,3.289,248,4.106,255,4.106,258,3.638,259,4.106,273,5.033,274,3.289,275,4.106,276,3.289,277,4.106,283,4.921,286,4.106,293,4.106,294,3.289,295,4.106,296,4.106,297,3.289,298,4.106,303,4.816,304,4.816,305,5.903,306,3.683,307,1.663,308,4.746,309,4.816,310,4.816,311,2.949,312,4.816,313,2.579,314,3.638,315,5.822,316,4.106,317,4.816,318,2.778,319,2.778,320,4.816]],["title/guards/AuthGuard.html",[308,2.446,321,2.705]],["body/guards/AuthGuard.html",[0,0.638,3,0.254,4,0.221,5,0.221,8,0.442,14,0.911,21,3.038,25,0.287,35,1.132,38,0.972,44,1.035,45,0.023,46,0.494,47,0.448,48,0.853,60,0.853,61,1.706,69,3.663,95,0.54,96,0.357,99,1.173,104,1.391,105,1.314,106,0.254,107,0.393,108,0.871,109,1.391,110,1.046,113,1.101,123,2.822,124,3.084,133,0.017,134,0.017,302,1.861,306,3.272,307,1.559,308,4.443,311,3.467,315,5.714,322,4.515,323,3.849,324,3.545,325,5.671,326,4.835,327,4.285,328,3.873,329,4.914,330,3.044,331,2.338,332,3.873,333,2.822,334,2.811,335,4.515,336,4.285,337,2.338,338,2.525,339,6.201,340,5.671,341,4.835,342,4.515,343,6.504,344,5.167,345,6.504,346,4.515,347,4.835,348,4.005,349,5.671,350,2.651,351,4.835,352,4.285,353,1.474,354,5.671,355,4.835,356,5.671,357,2.651,358,5.671,359,1.691,360,6.701,361,1.85,362,3.873,363,5.671,364,1.861,365,3.849,366,1.753]],["title/interceptors/AuthInterceptor.html",[232,2.238,367,2.446]],["body/interceptors/AuthInterceptor.html",[0,0.625,3,0.246,4,0.214,5,0.214,8,0.395,14,0.892,21,2.974,22,1.865,23,4.195,24,3.291,25,0.278,35,1.114,38,0.952,42,2.352,43,2.219,44,0.797,45,0.023,46,0.38,47,0.345,48,0.657,52,2.974,60,0.918,61,1.865,67,4.401,69,3.735,81,1.598,82,1.914,93,1.424,94,3.471,95,0.531,96,0.345,97,1.424,99,1.135,106,0.246,107,0.38,108,0.903,110,1.415,113,1.185,123,2.729,124,2.982,133,0.017,134,0.017,232,4.017,284,4.195,306,2.519,311,3.314,314,5.012,328,2.982,332,2.982,352,3.298,364,1.8,368,3.722,369,3.722,370,5.552,371,6.105,372,6.634,373,3.471,374,4.734,375,4.366,376,5.552,377,5.478,378,3.517,379,5.478,380,4.366,381,4.734,382,4.734,383,3.522,384,5.552,385,2.974,386,5.552,387,6.105,388,6.425,389,5.478,390,5.206,391,3.05,392,3.203,393,3.722,394,4.734,395,4.366,396,4.366,397,4.366,398,4.195,399,4.366,400,4.366,401,5.552,402,3.722,403,3.722,404,6.105,405,3.722,406,4.366,407,5.552,408,4.366,409,4.366,410,4.366,411,3.722,412,4.366]],["title/interceptors/AuthInterceptorService.html",[367,2.446,413,2.705]],["body/interceptors/AuthInterceptorService.html",[0,0.624,3,0.245,4,0.213,5,0.213,8,0.434,14,0.891,15,1.668,21,2.969,22,1.525,24,3.098,25,0.277,35,1.113,38,0.95,40,1.361,42,2.273,43,2.217,44,1.012,45,0.023,46,0.482,47,0.438,48,0.834,60,0.834,61,1.824,67,4.304,69,3.798,95,0.559,96,0.344,97,1.42,99,1.132,100,1.909,103,2.769,104,1.341,105,1.268,106,0.245,107,0.379,108,0.856,109,1.341,110,1.009,111,3.465,113,1.076,119,1.614,133,0.017,134,0.017,307,1.504,311,3.206,326,5.777,327,4.188,329,4.188,330,2.431,333,2.722,334,2.771,337,2.285,338,2.152,353,1.441,364,1.795,367,3.786,368,3.712,374,4.726,377,5.473,378,3.385,379,5.473,381,5.473,383,3.703,389,4.726,390,4.726,391,2.769,393,3.712,394,4.726,411,3.712,413,4.85,414,5.199,415,3.712,416,6.629,417,4.354,418,4.188,419,4.726,420,3.786,421,5.543,422,4.354,423,1.914,424,3.438,425,4.726,426,5.543,427,5.543,428,5.543,429,5.543,430,5.543,431,5.543,432,3.786,433,4.354,434,4.354,435,4.354,436,4.354,437,4.726,438,2.722,439,4.354,440,3.712]],["title/interfaces/Category.html",[441,0.879,442,1.918]],["body/interfaces/Category.html",[0,0.661,3,0.269,4,0.234,5,0.234,8,0.341,12,1.56,13,2.561,25,0.304,26,0.714,27,0.873,35,0.873,37,2.577,40,1.174,41,1.856,42,2.076,43,2.03,45,0.023,46,0.618,47,0.503,49,2.235,60,0.719,61,1.826,62,2.03,64,2.578,72,1.751,75,2.263,81,1.75,82,2.578,88,1.141,93,1.56,95,0.578,96,0.378,97,1.56,99,1.243,104,1.473,105,1.392,106,0.331,107,0.416,108,0.672,109,1.473,113,0.928,133,0.018,134,0.018,423,1.652,441,1.174,442,3.891,443,2.235,444,3.613,445,4.441,446,3.555,447,2.187,448,3.148,449,2.423,450,2.282,451,2.235,452,2.561,453,4.014,454,3.613,455,5.426,456,2.151,457,2.989,458,2.989,459,4.077,460,2.759,461,2.389,462,2.561,463,4.077,464,4.077]],["title/injectables/CategoryService.html",[0,0.403,453,2.446]],["body/injectables/CategoryService.html",[0,0.649,2,1.697,3,0.261,4,0.227,5,0.227,8,0.411,12,1.881,13,3.089,14,0.927,25,0.295,26,0.701,27,1.146,35,1.146,36,2.484,37,2.739,38,1.076,40,1.416,41,2.239,42,2.203,43,2.268,44,0.846,45,0.023,46,0.572,47,0.367,48,0.698,49,2.696,60,0.867,61,1.921,62,2.268,64,2.88,72,1.276,75,1.881,81,2.111,82,2.88,88,1.009,89,0.9,90,0.9,93,1.881,95,0.572,96,0.367,97,1.513,99,1.205,104,1.429,105,1.35,106,0.324,107,0.404,108,0.651,109,1.429,113,0.9,133,0.017,134,0.017,423,1.992,441,1.138,442,3.811,444,3.504,445,3.504,446,3.089,447,1.934,448,2.484,449,1.912,450,1.8,451,2.168,452,2.484,453,4.485,454,4.357,455,5.871,456,2.404,457,3.605,458,3.924,459,4.917,460,3.327,461,2.881,462,3.089,463,5.599,464,3.954,465,5.767,466,4.638]],["title/interfaces/Contact.html",[11,1.237,441,0.879]],["body/interfaces/Contact.html",[3,0.281,4,0.245,5,0.245,8,0.356,11,2.545,25,0.318,26,0.734,45,0.023,46,0.623,47,0.554,59,1.942,72,1.899,75,2.199,88,1.189,106,0.281,133,0.018,134,0.018,313,3.236,441,1.483,443,2.338,446,3.236,447,2.161,448,3.236,449,2.491,450,2.345,467,4.265,468,2.194,469,3.417,470,4.265,471,3.78,472,2.891,473,3.503,474,4.383,475,2.087,476,3.236,477,5.151,478,4.126]],["title/interfaces/Contact-1.html",[11,1.035,441,0.736,479,1.236]],["body/interfaces/Contact-1.html",[3,0.281,4,0.245,5,0.245,8,0.356,11,2.545,25,0.318,26,0.734,45,0.023,46,0.623,47,0.554,59,1.942,72,1.899,75,2.199,88,1.189,106,0.281,133,0.018,134,0.018,313,3.236,441,1.483,443,2.338,446,3.236,447,2.161,448,3.236,449,2.491,450,2.345,468,2.194,469,3.417,470,4.265,471,3.78,472,2.891,473,3.503,474,4.383,475,2.087,476,3.236,477,5.151,478,4.126,480,4.265]],["title/injectables/ContactService.html",[0,0.403,481,2.705]],["body/injectables/ContactService.html",[0,0.653,2,1.714,3,0.263,4,0.23,5,0.23,8,0.413,9,3.627,10,3.108,11,2.566,14,1.059,25,0.298,26,0.705,27,1.151,38,1.081,44,0.855,45,0.023,46,0.408,47,0.37,48,0.704,53,1.508,56,2.276,60,0.948,61,1.925,62,2.004,81,2.124,89,0.909,90,0.909,95,0.549,96,0.37,99,1.217,104,1.443,105,1.363,106,0.263,107,0.408,108,0.658,113,0.909,132,4.384,133,0.018,134,0.018,148,2.898,282,3.993,283,3.199,344,4.384,355,5.885,357,3.226,481,4.979,482,3.993,483,5.341,484,2.712,485,4.315,486,2.712,487,4.979,488,6.774,489,6.59,490,5.802,491,4.683,492,2.712,493,5.802,494,4.683,495,2.004,496,4.947,497,4.683,498,4.763,499,4.947,500,3.627,501,3.199,502,2.702,503,4.683,504,4.683]],["title/components/ContactsAddComponent.html",[135,0.435,182,0.985]],["body/components/ContactsAddComponent.html",[1,3.106,3,0.134,4,0.117,5,0.117,6,1.373,8,0.258,11,2.42,12,1.819,14,0.583,15,1.592,19,1.632,22,0.655,25,0.313,26,0.441,27,0.662,35,0.897,38,1.025,40,0.89,44,0.434,45,0.023,46,0.533,47,0.388,48,0.358,53,1.449,54,2.092,55,3.321,56,0.822,59,1.408,60,0.739,62,1.926,63,0.924,72,1.352,88,0.79,89,0.704,90,0.954,95,0.383,96,0.188,106,0.134,107,0.207,108,0.509,110,1.139,113,0.704,118,3.998,119,1.431,125,2.003,133,0.011,134,0.011,135,0.744,136,0.655,137,1.118,138,0.822,139,0.822,140,0.822,141,0.822,153,2.24,154,0.822,155,2.372,156,1.253,158,1.253,167,0.733,168,1.253,169,1.253,170,0.822,171,1.698,172,0.822,173,0.655,174,1.253,175,0.822,176,0.655,177,0.822,178,0.693,179,0.733,180,0.584,181,0.822,182,1.352,183,0.822,184,0.655,185,0.822,186,0.618,187,0.822,188,0.618,189,0.822,190,0.693,191,0.776,192,0.655,193,0.776,194,0.822,195,0.655,196,0.733,197,0.822,198,0.618,199,0.776,200,0.822,201,0.618,202,0.822,203,0.618,204,0.776,205,0.822,206,0.655,207,0.733,208,0.822,209,0.655,210,0.822,211,0.618,212,0.733,213,0.822,214,0.618,215,0.776,216,0.822,217,0.822,278,4.627,302,0.981,307,0.822,331,2.525,334,2.425,337,1.495,338,1.908,359,0.943,361,1.183,366,1.408,378,1.189,391,2.785,392,3.217,447,2.105,472,2.464,474,3.737,475,2.36,476,1.943,479,0.981,495,1.253,505,3.828,506,2.029,507,1.591,508,4.516,509,3.092,510,3.357,511,3.737,512,4.213,513,4.395,514,3.627,515,4.395,516,4.916,517,4.916,518,4.916,519,2.74,520,3.998,521,3.747,522,2.029,523,3.627,524,2.092,525,2.267,526,1.408,527,3.998,528,3.714,529,2.379,530,3.092,531,2.379,532,3.627,533,2.379,534,3.073,535,4.916,536,5.576,537,5.799,538,2.477,539,3.627,540,3.627,541,2.379,542,2.74,543,3.092,544,2.379,545,2.477,546,2.379,547,2.477,548,3.627,549,3.321,550,1.625,551,3.627,552,2.379,553,2.379,554,2.379,555,2.379,556,1.798,557,3.092,558,2.029,559,1.798,560,3.627,561,4.395,562,1.908,563,3.627,564,2.74,565,2.379,566,2.379,567,2.379,568,1.799,569,1.487,570,2.267,571,2.74,572,2.74,573,4.754,574,3.357,575,4.916,576,4.191,577,3.627,578,3.092,579,2.092,580,2.092,581,2.379,582,2.688,583,2.445,584,2.378,585,2.576,586,2.47,587,1.112,588,2.602,589,1.591,590,2.602,591,2.029,592,2.029,593,2.029,594,1.487,595,2.195,596,1.487,597,3.747,598,1.943,599,2.477,600,1.043,601,2.763,602,2.656,603,3.96,604,1.943,605,2.859,606,2.054,607,3.002,608,2.379,609,3.747,610,1.487,611,1.408,612,2.182,613,2.581,614,2.378,615,2.378,616,2.531,617,1.943,618,2.251,619,1.812,620,1.706,621,3.092,622,1.695,623,1.408,624,1.408,625,3.092,626,2.378,627,2.354,628,1.927,629,0.981,630,1.625,631,1.695,632,3.092,633,1.495,634,1.812,635,1.487,636,1.487,637,1.408,638,4.191,639,3.002,640,2.251,641,4.191,642,2.029,643,3.747,644,3.714,645,2.029,646,2.029,647,3.002,648,1.798,649,3.808,650,3.002,651,3.002,652,2.029,653,1.625,654,2.029,655,2.029,656,2.477,657,2.029,658,1.812,659,1.927,660,3.092,661,1.043,662,1.487,663,2.029,664,1.189,665,1.798,666,1.625,667,2.267,668,1.112,669,1.798,670,1.189,671,1.487,672,1.798,673,1.798,674,1.487,675,1.487,676,3.627,677,3.627,678,1.812,679,1.591,680,1.927,681,2.029,682,2.74,683,1.798,684,1.274,685,1.274,686,3.627,687,1.812,688,1.189,689,3.627,690,2.379,691,2.379,692,2.379,693,2.029,694,1.112,695,1.112,696,1.043,697,1.373,698,2.029,699,1.625]],["title/components/ContactsEditComponent.html",[135,0.435,184,0.985]],["body/components/ContactsEditComponent.html",[1,3.151,3,0.127,4,0.111,5,0.111,6,1.306,8,0.341,10,2.565,11,2.496,12,2.046,14,0.561,15,0.588,17,2.129,18,2.392,19,1.54,22,0.623,25,0.271,26,0.424,27,0.778,31,3.619,35,0.874,38,1.075,40,0.857,44,1.04,45,0.023,46,0.59,47,0.45,48,0.641,53,0.907,54,3.154,55,2.638,57,2.183,58,3.734,59,1.859,60,0.857,62,1.888,72,0.96,74,1.744,75,2.077,76,3.891,82,1.531,87,1.744,88,0.832,89,0.678,90,0.929,95,0.45,96,0.179,106,0.127,107,0.197,108,0.727,110,0.525,113,0.678,119,1.659,125,1.968,130,2.638,132,2.638,133,0.011,134,0.011,135,0.763,136,0.623,137,1.076,138,0.782,139,0.782,140,0.782,141,0.782,153,2.224,154,0.782,155,2.355,156,1.206,158,1.206,167,0.698,168,1.206,169,1.206,170,0.782,171,1.654,172,0.782,173,0.623,174,1.206,175,0.782,176,0.623,177,0.782,178,0.659,179,0.698,180,0.556,181,0.782,182,0.623,183,0.782,184,1.318,185,0.782,186,0.588,187,0.782,188,0.588,189,0.782,190,0.659,191,2.046,192,0.623,193,0.738,194,0.782,195,0.623,196,0.698,197,0.782,198,0.588,199,0.738,200,0.782,201,0.588,202,0.782,203,0.588,204,0.738,205,0.782,206,0.623,207,0.698,208,0.782,209,0.623,210,0.782,211,0.588,212,0.698,213,0.782,214,0.588,215,0.738,216,0.782,217,0.782,243,1.546,280,4.811,307,0.782,331,1.975,334,2.393,337,1.439,338,1.859,348,3.287,350,1.632,359,0.907,364,1.439,378,2.129,382,1.93,391,2.939,398,1.711,419,2.977,437,1.93,447,1.933,457,2.183,472,1.975,473,2.846,474,2.994,475,2.294,478,2.385,483,4.131,487,2.638,492,2.419,495,2.085,501,1.546,502,2.014,505,3.981,508,3.619,510,2.385,511,2.994,512,3.619,519,2.638,520,3.909,524,2.014,526,2.284,527,3.909,528,3.619,530,2.977,534,2.183,542,2.638,547,2.385,549,3.22,550,1.546,557,1.93,562,0.879,568,2.001,569,1.415,576,1.93,582,2.659,583,2.398,584,2.284,585,2.349,586,2.387,587,1.058,588,2.504,589,1.531,590,2.532,591,1.93,592,1.93,593,1.93,594,1.415,595,1.744,596,1.415,597,2.977,598,1.87,599,2.385,600,0.993,601,2.625,602,2.426,603,3.534,604,1.87,605,2.888,606,2.239,607,3.271,609,2.977,610,1.415,611,1.355,612,1.975,613,2.504,614,2.284,615,2.284,616,2.472,617,1.87,618,1.654,619,1.439,620,1.654,621,1.93,623,0.879,624,0.879,625,2.977,626,2.284,627,2.282,628,1.869,629,0.933,630,1.546,631,1.632,632,2.977,633,1.757,634,2.129,635,1.415,636,1.415,637,0.879,638,3.633,639,2.385,640,2.212,641,4.084,642,2.977,643,2.977,644,1.711,645,1.93,646,1.93,647,2.911,648,1.711,649,3.734,650,2.911,651,2.911,652,1.93,653,1.546,654,1.93,655,1.93,656,1.546,657,1.93,658,1.439,659,1.531,660,2.977,661,1.531,662,2.183,663,1.93,664,1.131,665,1.711,666,1.546,667,1.415,668,1.058,669,1.711,670,1.131,671,1.415,672,1.711,673,1.711,674,1.415,675,1.415,678,1.439,679,1.531,680,1.869,681,1.93,682,3.22,683,1.711,694,1.058,695,1.058,696,0.993,697,1.306,698,1.93,699,1.546,700,1.93,701,2.239,702,2.385,703,2.282,704,4.261,705,3.491,706,4.79,707,2.638,708,4.79,709,2.565,710,2.977,711,2.977,712,3.633,713,1.93,714,4.661,715,3.491,716,2.264,717,3.619,718,2.264,719,2.264,720,2.977,721,2.264,722,2.385,723,1.632,724,2.638,725,2.911,726,2.264,727,2.264,728,2.638,729,3.491,730,2.638,731,2.264,732,1.744,733,2.385,734,3.491,735,4.79,736,2.264,737,1.744,738,3.491,739,2.264,740,3.491,741,2.264,742,2.264,743,2.264,744,2.977,745,2.264,746,1.93,747,2.977,748,2.264,749,1.93,750,1.93,751,1.93,752,1.93,753,3.633,754,2.264,755,2.264,756,2.264,757,2.264,758,2.264,759,1.93,760,2.264,761,1.711,762,2.264,763,2.264,764,1.415,765,2.264,766,1.93,767,3.491,768,3.491,769,2.264,770,3.491,771,2.264,772,1.711,773,2.264,774,1.711,775,2.264,776,2.264,777,2.264]],["title/injectables/ContactsOverlayService.html",[0,0.403,778,2.238]],["body/injectables/ContactsOverlayService.html",[0,0.644,2,1.678,3,0.258,4,0.225,5,0.225,8,0.408,14,1.051,19,1.685,25,0.292,26,0.696,27,1.14,38,1.121,44,0.837,45,0.023,46,0.399,47,0.362,48,0.69,53,1.488,60,0.939,61,1.575,81,2.096,85,2.676,89,1.111,90,1.111,95,0.498,96,0.362,99,1.191,104,1.412,105,1.335,106,0.258,107,0.399,108,0.644,113,0.89,133,0.017,134,0.017,137,1.764,148,2.86,344,5.32,357,3.209,359,1.846,361,1.867,362,3.911,468,2.511,484,2.676,485,3.579,486,2.676,495,1.978,498,4.718,499,4.882,507,2.511,778,4.088,779,4.598,780,4.264,781,3.908,782,3.211,783,2.86,784,6.244,785,6.244,786,6.54,787,5.726,788,4.584,789,5.726,790,4.584,791,4.326,792,5.726,793,5.726,794,4.584,795,3.911,796,5.726,797,5.726,798,5.726,799,4.584,800,4.584,801,4.584]],["title/components/ContactsOverviewComponent.html",[135,0.435,186,0.931]],["body/components/ContactsOverviewComponent.html",[1,2.79,3,0.101,4,0.088,5,0.088,6,1.036,8,0.399,10,2.477,11,2.515,12,0.948,14,0.467,15,1.202,19,1.766,22,0.494,23,3.739,25,0.114,26,0.512,27,0.669,35,0.768,38,1.139,40,0.714,44,0.99,45,0.023,46,0.578,47,0.501,48,0.816,52,1.557,53,1.094,56,1.709,57,1.818,58,2.875,60,0.98,68,1.818,72,1.703,75,2.107,76,4.168,82,1.846,88,0.925,89,0.96,90,0.96,95,0.431,96,0.142,106,0.101,107,0.156,108,0.827,110,1.257,113,1.011,116,0.897,118,2.197,119,1.066,125,1.265,133,0.009,134,0.009,135,0.633,136,0.494,137,0.896,138,0.62,139,0.62,140,0.62,141,0.62,148,1.452,149,1.818,153,2.14,154,0.62,155,2.266,156,1.004,158,1.004,167,0.553,168,1.004,169,1.004,170,0.62,171,1.454,172,0.62,173,0.494,174,1.004,175,0.62,176,0.494,177,0.62,178,0.523,179,0.553,180,0.441,181,0.62,182,0.494,183,0.62,184,0.494,185,0.62,186,1.094,187,0.62,188,0.467,189,0.62,190,0.523,191,0.586,192,0.494,193,0.586,194,0.62,195,0.494,196,0.553,197,0.62,198,0.467,199,0.586,200,0.62,201,0.467,202,0.62,203,0.467,204,0.586,205,0.62,206,0.494,207,0.553,208,0.62,209,1.008,210,0.62,211,0.467,212,0.553,213,0.62,214,0.467,215,0.586,216,0.62,217,0.62,276,4.564,302,1.51,307,0.62,313,1.557,324,1.818,330,1.275,331,1.906,332,2.502,334,2.235,337,1.199,338,1.129,348,1.677,350,1.968,359,1.629,361,0.948,364,1.199,366,1.634,378,0.897,383,2.429,392,2.429,420,1.986,423,1.004,447,1.953,461,2.71,473,2.941,475,2.331,479,0.741,492,2.619,495,2.266,500,1.818,501,1.227,502,1.677,505,4.177,507,1.275,511,1.818,521,3.123,522,1.532,524,1.677,526,2.286,534,1.818,550,1.227,562,0.697,564,1.357,571,2.197,572,2.197,582,1.199,584,2.106,585,2.148,586,2.051,587,1.359,588,2.176,589,0.788,590,2.023,598,1.557,600,1.606,601,2.236,602,1.736,604,0.962,605,1.275,611,1.129,612,0.741,613,2.106,614,1.634,615,1.634,616,2.023,617,0.962,618,1.634,619,2.474,620,2.106,622,1.712,623,1.422,624,1.422,626,2.235,627,0.962,628,1.275,629,1.199,631,1.968,633,2.04,634,3.131,635,1.123,636,1.123,637,0.697,639,1.227,640,1.422,658,0.741,659,0.788,668,1.359,678,1.199,679,2.582,680,1.275,684,0.962,685,0.962,688,2.472,694,0.84,695,0.84,696,0.788,697,1.036,701,2.805,703,1.962,707,2.197,709,2.255,720,2.479,723,2.313,724,2.197,725,3.828,728,3.181,732,2.103,733,2.502,761,2.767,764,1.123,778,3.681,779,1.227,780,3.875,782,2.676,791,3.181,802,1.532,803,2.197,804,2.632,805,4.949,806,5.757,807,3.663,808,2.908,809,3.123,810,3.663,811,4.624,812,3.942,813,3.663,814,3.663,815,4.21,816,2.908,817,4.21,818,2.908,819,2.908,820,2.908,821,4.21,822,4.21,823,2.908,824,2.908,825,4.21,826,4.21,827,3.705,828,2.908,829,2.908,830,1.199,831,2.908,832,1.796,833,4.61,834,2.908,835,1.796,836,2.479,837,2.875,838,4.21,839,2.908,840,1.986,841,1.796,842,2.908,843,5.117,844,6.19,845,2.908,846,1.796,847,4.21,848,4.21,849,4.949,850,2.908,851,1.796,852,5.604,853,2.479,854,4.219,855,2.908,856,1.796,857,3.589,858,4.949,859,4.21,860,2.875,861,1.677,862,2.908,863,1.796,864,2.908,865,1.796,866,2.197,867,2.197,868,1.796,869,1.796,870,1.677,871,2.908,872,2.908,873,1.796,874,2.479,875,2.908,876,1.796,877,3.589,878,2.908,879,2.908,880,2.908,881,1.796,882,2.908,883,2.908,884,1.796,885,1.796,886,1.796,887,2.197,888,1.532,889,1.796,890,2.479,891,1.796,892,2.908,893,2.479,894,1.796,895,1.986,896,1.796,897,1.357,898,1.796,899,1.532,900,1.357,901,1.796,902,3.663,903,1.796,904,2.908,905,1.796,906,1.796,907,3.663,908,1.796,909,1.796,910,4.21,911,1.796,912,1.796,913,1.796,914,1.796,915,1.796,916,1.796,917,1.796,918,2.908,919,1.796,920,1.796,921,1.796,922,1.796,923,1.796,924,1.796,925,2.908,926,1.796,927,1.796,928,1.796,929,1.796,930,1.796,931,1.532,932,1.796,933,1.796,934,2.908,935,2.908,936,2.908,937,1.796,938,1.796,939,1.796,940,1.796,941,1.796,942,2.908,943,2.908,944,2.908,945,1.796,946,2.29,947,3.663,948,1.357,949,1.123,950,2.852,951,2.908,952,1.557,953,1.532,954,1.796,955,1.818,956,1.796,957,2.908,958,1.796,959,1.796,960,1.796,961,1.796,962,2.908,963,1.796,964,1.796,965,1.532,966,1.796,967,1.532,968,2.908,969,2.908,970,1.796,971,1.357,972,1.532,973,1.532,974,1.796,975,1.796,976,1.557,977,0.84,978,1.123,979,1.796,980,1.796,981,1.796,982,1.357,983,2.29,984,1.532,985,1.532,986,1.036,987,1.532,988,1.532]],["title/components/ContactsViewComponent.html",[135,0.435,188,0.931]],["body/components/ContactsViewComponent.html",[1,2.94,3,0.104,4,0.091,5,0.091,6,1.069,8,0.358,10,2.689,11,2.518,12,1.533,14,0.479,15,0.482,18,2.507,19,1.608,22,0.51,25,0.118,26,0.521,27,0.963,31,3.239,35,0.782,38,1.105,40,0.732,44,1.034,45,0.023,46,0.561,47,0.486,48,0.707,53,0.972,54,2.473,56,1.03,57,2.68,58,2.037,59,1.664,60,0.852,62,1.481,63,1.158,72,1.293,74,1.49,75,1.975,76,3.749,79,2.253,82,2.201,85,1.394,87,1.49,88,0.848,89,0.912,90,0.912,95,0.409,96,0.146,106,0.104,107,0.161,108,0.771,110,0.691,113,0.726,119,1.461,122,1.864,125,1.03,130,2.253,133,0.009,134,0.009,135,0.748,136,0.51,137,0.919,138,0.64,139,0.64,140,0.64,141,0.64,153,2.152,154,0.64,155,2.279,156,1.03,158,1.03,167,0.571,168,1.03,169,1.03,170,0.64,171,1.481,172,0.64,173,0.51,174,1.03,175,0.64,176,0.51,177,0.64,178,0.54,179,0.571,180,0.455,181,0.64,182,0.51,183,0.64,184,0.51,185,0.64,186,0.482,187,0.64,188,1.114,189,0.64,190,0.54,191,1.975,192,0.51,193,0.605,194,0.64,195,0.51,196,0.571,197,0.64,198,0.482,199,0.605,200,0.64,201,0.482,202,0.64,203,0.482,204,0.605,205,0.64,206,0.51,207,0.571,208,0.64,209,1.029,210,0.64,211,0.482,212,0.571,213,0.64,214,0.482,215,0.605,216,0.64,217,0.64,274,4.44,302,0.764,307,0.64,331,2.397,334,2.257,337,1.23,338,1.664,348,3.045,350,2.004,357,2.346,359,1.675,361,0.973,362,2.037,364,1.23,366,2.049,378,1.49,383,2.473,391,3.024,398,1.4,405,2.543,423,1.03,447,1.745,454,2.253,457,1.864,472,1.23,473,2.142,474,1.864,475,2.4,478,2.037,483,2.253,486,1.394,487,2.827,492,2.565,495,2.154,501,1.266,502,1.72,505,4.063,511,1.864,512,2.253,519,2.253,520,2.827,524,1.72,526,1.664,527,3.987,528,3.793,534,1.864,547,2.037,549,3.239,550,1.266,562,1.453,568,1.092,569,1.159,571,2.253,572,2.253,582,2.07,583,1.641,584,2.131,585,2.263,586,2.252,587,1.394,588,2.257,589,0.813,590,1.453,598,0.993,600,1.308,601,2.397,602,1.543,604,1.597,605,1.641,606,0.866,611,0.72,612,1.23,613,2.478,614,1.949,615,1.949,616,2.131,617,0.993,618,2.199,619,1.937,620,2.478,622,2.565,623,1.664,624,1.664,626,2.524,627,2.517,628,1.641,629,1.768,630,1.266,631,2.83,633,2.572,634,2.904,635,1.864,636,2.339,637,1.824,640,1.158,658,1.937,659,1.88,664,1.869,678,1.23,679,1.641,680,1.308,682,2.253,684,0.993,685,0.993,687,1.869,688,2.142,694,0.866,695,0.866,696,0.813,697,1.069,701,2.951,702,2.037,703,2.004,707,2.253,709,2.296,711,2.543,712,3.19,713,1.58,714,4.28,717,4.147,723,2.346,724,2.253,725,2.556,730,1.4,732,1.49,733,2.037,737,2.347,744,1.58,746,1.58,747,4.006,749,1.58,750,1.58,751,1.58,752,1.58,753,3.19,759,2.543,761,1.4,764,2.68,766,1.58,772,1.4,778,3.431,779,1.266,780,3.643,782,2.55,791,2.827,795,3.429,803,2.253,809,3.19,833,4.713,837,2.037,861,1.72,874,2.543,887,3.239,899,1.58,931,1.58,946,1.159,948,2.253,949,1.159,950,3.195,952,2.004,953,2.543,965,1.58,967,1.58,971,2.253,973,1.58,977,1.749,982,1.4,983,2.339,984,3.19,985,3.19,986,1.069,987,2.543,988,1.58,989,1.58,990,2.982,991,2.982,992,2.982,993,2.543,994,3.742,995,3.742,996,2.982,997,3.742,998,2.982,999,4.287,1000,2.982,1001,2.982,1002,4.287,1003,3.742,1004,4.699,1005,4.699,1006,2.982,1007,1.854,1008,1.854,1009,2.982,1010,1.854,1011,1.854,1012,1.854,1013,1.72,1014,1.854,1015,1.854,1016,2.982,1017,5.02,1018,2.982,1019,1.854,1020,2.253,1021,1.854,1022,2.982,1023,1.854,1024,2.982,1025,4.287,1026,1.854,1027,1.854,1028,2.982,1029,1.854,1030,1.854,1031,1.854,1032,2.543,1033,2.982,1034,1.854,1035,1.854,1036,1.854,1037,1.854,1038,1.854,1039,1.854,1040,1.854,1041,2.982,1042,1.854,1043,1.854,1044,1.854,1045,1.854,1046,1.58,1047,1.854,1048,2.982,1049,2.982,1050,2.982,1051,2.982,1052,2.982,1053,2.982,1054,2.982,1055,3.742,1056,3.742,1057,1.854,1058,2.982,1059,3.742,1060,2.543,1061,2.982,1062,3.742,1063,3.742,1064,1.854,1065,2.982,1066,3.19,1067,1.854,1068,1.854,1069,2.982,1070,2.982,1071,2.982,1072,3.742,1073,1.854,1074,2.982,1075,0.993,1076,0.993,1077,1.159,1078,1.854,1079,1.854,1080,3.742,1081,1.854,1082,1.4,1083,1.58,1084,1.854,1085,1.854,1086,2.253,1087,1.854,1088,1.854,1089,1.854,1090,1.597,1091,1.58,1092,1.854,1093,1.854,1094,0.993]],["title/injectables/CustomDateParserFormatter.html",[0,0.403,265,2.066]],["body/injectables/CustomDateParserFormatter.html",[0,0.638,2,1.654,3,0.254,4,0.222,5,0.222,8,0.442,14,0.912,25,0.288,38,0.973,44,1.036,45,0.023,46,0.494,47,0.448,48,0.854,60,0.979,88,1.172,90,1.204,95,0.494,96,0.357,106,0.254,107,0.393,108,0.797,110,1.315,113,1.204,133,0.017,134,0.017,223,2.825,261,4.687,262,2.825,263,3.086,265,3.754,266,3.876,484,2.652,492,3.335,526,2.203,538,4.873,596,3.878,670,2.257,722,3.876,737,2.834,840,3.876,866,4.287,1095,4.687,1096,3.893,1097,5.289,1098,3.853,1099,5.548,1100,4.838,1101,4.838,1102,6.841,1103,6.841,1104,6.841,1105,4.838,1106,5.548,1107,4.838,1108,6.197,1109,4.519,1110,4.838,1111,4.838,1112,4.838,1113,4.519,1114,4.838,1115,3.853,1116,3.853,1117,3.853,1118,3.853,1119,3.853,1120,4.838,1121,3.853,1122,3.414,1123,3.853,1124,4.519]],["title/injectables/CustomDateParserFormatter-1.html",[0,0.337,265,1.729,479,1.236]],["body/injectables/CustomDateParserFormatter-1.html",[0,0.617,2,1.566,3,0.241,4,0.21,5,0.21,8,0.454,14,0.881,25,0.272,27,1.104,38,1.037,44,1.104,45,0.023,46,0.526,47,0.478,48,0.91,52,2.936,60,1.015,72,1.958,88,1.174,90,1.174,95,0.477,96,0.338,106,0.241,107,0.372,108,0.85,110,0.992,113,1.238,133,0.017,134,0.017,223,2.675,261,4.57,262,2.675,263,2.923,265,3.68,266,3.744,267,4.819,284,4.142,324,3.427,484,2.562,492,3.305,538,4.83,578,4.674,596,4.122,670,2.138,737,2.738,840,3.744,866,4.142,1095,4.819,1096,3.813,1099,5.438,1100,5.438,1101,4.674,1105,4.674,1106,5.438,1107,4.674,1108,6.157,1110,4.674,1111,4.674,1112,4.674,1114,4.674,1115,3.649,1116,3.649,1117,3.649,1118,3.649,1119,3.649,1120,3.649,1121,3.649,1122,3.233,1123,3.649,1125,3.649,1126,5.482,1127,6.746,1128,6.378,1129,4.279,1130,5.482,1131,4.279,1132,5.482,1133,5.482,1134,5.482,1135,5.482,1136,5.482,1137,6.378,1138,5.482,1139,5.482,1140,4.279,1141,5.482,1142,4.279]],["title/components/FooterBarComponent.html",[135,0.435,192,0.985]],["body/components/FooterBarComponent.html",[3,0.173,4,0.151,5,0.151,8,0.364,9,2.743,13,2.351,14,0.705,15,1.53,19,1.58,22,0.848,25,0.196,26,0.533,27,1.117,35,0.933,38,1.164,40,1.077,44,0.801,45,0.023,46,0.485,47,0.484,48,0.66,60,0.947,88,0.822,89,1.081,90,1.081,93,2.1,95,0.382,96,0.243,106,0.173,107,0.268,108,0.616,109,0.949,125,1.064,133,0.013,134,0.013,135,0.765,136,0.848,137,1.352,138,1.064,139,1.064,140,1.064,141,1.064,148,2.783,150,3.316,153,2.316,154,1.064,155,2.453,156,1.516,158,1.516,167,0.949,168,1.516,169,1.516,170,1.064,171,1.924,172,1.064,173,0.848,174,1.516,175,1.064,176,0.848,177,1.064,178,0.897,179,1.814,180,1.445,181,1.064,182,0.848,183,1.064,184,0.848,185,1.064,186,0.801,187,1.064,188,0.801,189,1.064,190,0.897,191,1.005,192,1.684,193,2.167,194,1.064,195,0.848,196,1.814,197,1.064,198,0.801,199,1.005,200,1.064,201,0.801,202,1.064,203,0.801,204,1.005,205,1.064,206,0.848,207,0.949,208,1.064,209,0.848,210,1.064,211,0.801,212,0.949,213,1.064,214,0.801,215,1.92,216,1.064,217,1.064,252,5.174,302,1.809,307,1.064,330,3.187,333,1.926,334,2.658,337,1.809,338,2.376,348,3.214,350,2.604,357,2.861,359,1.814,361,2.1,364,1.809,366,2.678,391,2.192,438,1.926,447,1.575,475,1.516,485,2.743,495,2.175,510,3.805,545,4.18,562,1.704,568,1.128,582,1.27,583,1.351,584,1.196,586,1.606,588,2.286,590,1.985,600,1.351,601,1.27,602,1.27,611,1.196,613,1.704,614,1.704,615,1.704,616,1.704,618,1.196,619,1.809,620,1.196,623,1.196,624,1.196,626,1.196,631,2.051,637,1.196,640,1.196,661,1.351,662,1.926,678,1.27,679,1.351,680,1.925,683,2.328,694,1.44,695,1.44,696,1.351,697,1.777,703,2.738,709,2.984,723,3.009,730,3.316,732,2.192,764,1.926,837,2.998,867,3.316,870,2.532,900,3.316,983,1.926,1143,5.839,1144,2.627,1145,4.389,1146,5.952,1147,4.389,1148,3.742,1149,5.112,1150,4.389,1151,4.358,1152,4.358,1153,4.358,1154,4.358,1155,4.75,1156,4.75,1157,4.75,1158,4.209,1159,4.75,1160,3.742,1161,4.389,1162,3.316,1163,4.389,1164,3.081,1165,3.081,1166,3.081,1167,3.081,1168,3.081,1169,3.742,1170,3.081,1171,3.316,1172,3.742,1173,3.742,1174,3.742,1175,3.081,1176,3.742,1177,3.742,1178,3.081,1179,3.081,1180,3.081,1181,3.316,1182,2.328,1183,2.627,1184,2.627,1185,2.627,1186,2.627,1187,3.742,1188,3.742,1189,3.742,1190,3.742,1191,2.627,1192,2.627,1193,2.627,1194,2.627,1195,1.926,1196,2.627,1197,2.627,1198,4.389,1199,3.081,1200,3.081,1201,2.743,1202,3.081,1203,2.627]],["title/components/HeaderBarMobileComponent.html",[135,0.435,195,0.985]],["body/components/HeaderBarMobileComponent.html",[3,0.173,4,0.151,5,0.151,8,0.312,9,2.737,10,2.345,12,1.814,14,0.704,15,0.798,19,1.366,22,1.827,25,0.279,26,0.532,27,0.799,35,1.015,38,1.078,40,1.075,44,0.561,45,0.023,46,0.585,47,0.403,48,0.462,59,1.7,60,0.837,88,0.704,89,0.85,90,0.85,95,0.512,96,0.243,106,0.173,107,0.267,108,0.615,122,3.477,125,1.512,133,0.013,134,0.013,135,0.715,136,0.845,137,1.349,138,1.061,139,1.061,140,1.061,141,1.061,150,4.203,153,2.315,154,1.061,155,2.452,156,1.512,158,1.512,167,0.946,168,1.512,169,1.512,170,1.061,171,1.921,172,1.061,173,0.845,174,1.512,175,1.061,176,0.845,177,1.061,178,0.894,179,0.946,180,0.754,181,1.061,182,0.845,183,1.061,184,0.845,185,1.061,186,0.798,187,1.061,188,0.798,189,1.061,190,0.894,191,1.002,192,0.845,193,1.002,194,1.061,195,1.682,196,2.223,197,1.061,198,0.798,199,1.664,200,1.061,201,0.798,202,1.061,203,0.798,204,1.664,205,1.061,206,0.845,207,0.946,208,1.061,209,0.845,210,1.061,211,0.798,212,0.946,213,1.061,214,0.798,215,1.664,216,1.061,217,1.061,234,3.317,236,2.979,256,4.86,271,2.098,307,1.512,311,2.187,313,2.733,318,2.526,319,2.526,330,2.439,331,2.293,333,1.92,334,2.635,337,1.805,338,2.374,353,1.803,357,2.047,359,1.138,364,1.805,366,1.7,440,2.618,445,3.308,447,1.812,473,2.549,475,2.222,495,1.921,525,2.737,526,1.7,547,3.485,562,1.192,568,2.036,582,1.266,583,1.347,584,2.16,585,1.805,586,2.152,588,2.16,590,1.981,594,1.92,595,1.534,600,1.347,601,2.521,602,2.425,605,1.347,606,1.435,611,1.7,612,1.805,613,1.981,614,1.7,615,1.7,616,1.981,618,1.981,620,1.7,622,2.047,623,1.192,624,1.192,626,1.7,628,1.347,629,1.266,633,1.805,637,1.7,640,1.7,658,1.266,661,1.347,664,2.549,670,1.534,678,1.805,679,1.347,680,1.92,684,1.645,685,1.645,687,1.534,694,1.435,695,1.435,696,1.347,697,1.772,703,2.733,709,2.979,723,2.047,732,2.187,782,2.439,803,3.308,830,1.805,853,4.743,860,2.991,870,2.526,895,2.991,949,2.737,950,2.385,952,1.645,955,1.92,976,1.645,977,2.047,978,1.92,983,1.92,986,1.772,1075,1.645,1076,1.645,1077,1.92,1090,2.345,1094,1.645,1158,4.203,1195,1.92,1201,1.92,1204,5.484,1205,2.618,1206,5.213,1207,5.103,1208,4.379,1209,5.103,1210,5.881,1211,5.563,1212,4.379,1213,3.071,1214,3.071,1215,2.991,1216,4.379,1217,4.379,1218,3.308,1219,4.379,1220,3.308,1221,4.379,1222,3.071,1223,4.743,1224,4.379,1225,5.103,1226,3.071,1227,3.308,1228,3.799,1229,5.563,1230,3.071,1231,2.32,1232,2.618,1233,3.071,1234,3.071,1235,2.618,1236,3.071,1237,3.071,1238,4.379,1239,2.618,1240,3.071,1241,2.618,1242,2.618,1243,3.308,1244,2.991,1245,3.308,1246,3.733,1247,3.855,1248,3.308,1249,1.772,1250,3.308,1251,2.32,1252,2.32,1253,1.772,1254,1.435,1255,2.32,1256,1.92,1257,2.32,1258,1.92,1259,2.32,1260,3.308,1261,2.32,1262,1.92]],["title/components/LegalNoticeComponent.html",[135,0.435,198,0.931]],["body/components/LegalNoticeComponent.html",[3,0.193,4,0.168,5,0.168,8,0.244,15,0.892,19,1.434,22,0.944,25,0.218,45,0.023,46,0.412,59,2.267,95,0.299,96,0.271,106,0.193,107,0.299,125,2.116,133,0.014,134,0.014,135,0.745,136,0.944,137,1.458,138,1.185,139,1.185,140,1.185,141,1.185,143,2.731,153,2.344,154,1.185,155,2.482,156,1.635,158,1.635,167,1.057,168,1.635,169,1.635,170,1.185,171,2.017,172,1.185,173,0.944,174,1.635,175,1.185,176,0.944,177,1.185,178,0.999,179,1.057,180,0.842,181,1.185,182,0.944,183,1.185,184,0.944,185,1.185,186,0.892,187,1.185,188,0.892,189,1.185,190,0.999,191,1.119,192,0.944,193,1.119,194,1.185,195,0.944,196,1.057,197,1.185,198,1.646,199,2.257,200,1.185,201,0.892,202,1.185,203,0.892,204,1.119,205,1.185,206,0.944,207,1.057,208,1.185,209,0.944,210,1.185,211,0.892,212,1.057,213,1.185,214,0.892,215,1.119,216,1.185,217,1.185,297,2.344,318,3.369,331,2.526,353,1.23,447,2.132,473,1.714,475,2.407,484,2.212,525,2.959,562,1.332,568,2.319,573,4.036,582,1.415,583,1.505,584,2.379,585,2.526,586,2.487,587,2.212,588,2.52,589,2.076,590,2.52,594,2.145,595,1.714,600,2.376,601,2.612,602,2.526,605,1.505,606,1.604,610,2.145,611,2.103,612,2.234,613,2.687,614,2.379,615,2.379,616,2.568,618,2.267,619,2.408,620,2.103,622,2.212,623,1.838,624,1.838,626,2.103,628,1.505,629,1.951,631,2.212,633,2.408,637,2.103,640,2.379,658,2.408,659,2.376,661,2.076,664,2.706,668,1.604,670,1.714,678,1.415,684,1.838,685,1.838,687,1.714,688,1.714,861,2.731,946,2.145,949,2.959,950,2.961,952,1.838,955,2.145,976,2.535,977,2.73,978,2.959,986,1.98,1075,1.838,1076,1.838,1077,2.145,1090,2.902,1094,1.838,1201,3.387,1243,3.576,1244,3.233,1245,3.576,1247,3.576,1248,3.576,1249,1.98,1250,3.576,1252,2.593,1253,1.98,1254,1.604,1255,2.593,1256,2.145,1257,2.593,1258,2.145,1259,2.593,1260,3.576,1261,3.576,1262,2.959,1263,2.926,1264,2.926,1265,4.036,1266,4.733,1267,4.733,1268,4.733,1269,4.733,1270,5.418,1271,4.733,1272,4.733,1273,4.036,1274,4.733,1275,4.036,1276,4.733,1277,4.036,1278,4.036,1279,4.036,1280,4.036,1281,4.036,1282,4.036,1283,4.733,1284,4.036,1285,4.036,1286,4.036,1287,4.036,1288,4.036,1289,2.926,1290,4.036,1291,4.036,1292,4.036,1293,3.432,1294,3.576,1295,4.733,1296,4.093,1297,2.593,1298,2.593,1299,2.593,1300,2.593,1301,2.593,1302,2.145,1303,2.593,1304,2.593,1305,2.593,1306,2.344,1307,2.593,1308,2.593,1309,2.926]],["title/components/LoginComponent.html",[135,0.435,201,0.931]],["body/components/LoginComponent.html",[3,0.129,4,0.112,5,0.112,8,0.306,10,2.584,12,1.151,14,0.567,15,0.596,19,1.184,21,3.165,22,0.631,25,0.224,26,0.429,27,1.129,35,0.88,37,2.134,38,1.132,40,0.866,41,1.369,42,1.793,43,1.666,44,0.644,45,0.023,46,0.42,47,0.467,48,0.531,54,2.035,60,0.889,63,2.021,68,2.205,69,3.422,88,0.92,89,1.067,90,1.067,95,0.453,96,0.181,97,0.748,106,0.129,107,0.2,108,0.731,119,1.833,125,2.041,133,0.011,134,0.011,135,0.522,136,0.631,137,1.087,138,0.793,139,0.793,140,0.793,141,0.793,149,3.015,151,1.956,153,2.228,154,0.793,155,2.359,156,1.218,158,1.218,163,3.644,167,0.707,168,1.218,169,1.218,170,0.793,171,1.666,172,0.793,173,0.631,174,1.218,175,0.793,176,0.631,177,0.793,178,0.668,179,0.707,180,0.563,181,0.793,182,0.631,183,0.793,184,0.631,185,0.793,186,0.596,187,0.793,188,0.596,189,0.793,190,0.668,191,0.748,192,0.631,193,0.748,194,0.793,195,0.631,196,0.707,197,0.793,198,0.596,199,1.402,200,0.793,201,1.429,202,0.793,203,0.596,204,1.402,205,0.793,206,0.631,207,0.707,208,0.793,209,0.631,210,0.793,211,0.596,212,1.604,213,0.793,214,0.596,215,1.698,216,0.793,217,0.793,234,2.952,236,1.889,271,1.567,302,1.454,307,0.793,311,3.445,318,2.035,319,2.035,329,2.665,330,2.41,331,2.146,334,2.402,338,1.873,347,3.008,350,1.649,353,1.681,359,1.536,361,1.151,366,2.402,378,1.146,402,3.008,403,3.008,418,3.644,423,1.218,447,1.486,472,2.499,475,2.259,476,2.584,479,1.454,495,2.3,502,2.035,524,2.035,525,2.205,526,1.873,562,2.021,568,2.095,569,2.205,582,2.436,583,1.884,584,1.873,585,2.146,586,2.394,587,1.649,588,2.353,589,1.884,590,2.294,595,1.146,598,1.229,599,2.935,601,2.36,602,0.946,603,1.567,604,1.229,605,2.41,606,2.255,607,2.409,611,0.891,612,0.946,613,2.622,614,2.353,615,2.353,616,2.539,617,1.889,618,1.668,619,0.946,620,2.223,622,1.073,623,1.369,624,1.369,626,1.369,627,1.229,628,1.006,629,0.946,633,1.454,634,1.146,637,0.891,640,2.294,647,1.567,649,3.295,650,2.409,651,1.567,653,1.567,656,1.567,658,2.36,659,2.283,661,2.41,662,3.254,666,1.567,667,2.205,668,1.073,671,2.205,674,2.205,675,2.205,678,0.946,679,1.006,680,1.006,687,1.146,688,1.146,694,1.073,695,1.073,696,1.006,699,2.409,701,1.073,702,2.409,717,2.665,722,2.409,723,2.569,737,2.409,774,2.665,780,1.324,782,2.591,830,1.454,860,4.036,861,2.035,870,2.035,890,3.008,895,2.409,950,1.649,952,1.229,976,1.229,977,1.073,1075,1.229,1076,1.229,1082,1.734,1086,1.734,1090,1.229,1094,1.889,1171,2.665,1195,2.205,1215,2.409,1227,2.665,1246,5.038,1249,1.324,1251,1.734,1253,1.324,1256,1.434,1258,1.434,1302,2.205,1310,1.956,1311,5.497,1312,4.292,1313,3.528,1314,5.497,1315,4.297,1316,3.528,1317,4.297,1318,4.297,1319,3.664,1320,4.297,1321,4.824,1322,4.113,1323,4.824,1324,4.824,1325,4.824,1326,3.528,1327,4.113,1328,2.295,1329,3.91,1330,3.528,1331,2.295,1332,1.762,1333,5.497,1334,5.497,1335,4.113,1336,3.528,1337,2.295,1338,3.528,1339,2.035,1340,2.295,1341,2.295,1342,3.528,1343,2.295,1344,3.528,1345,2.295,1346,3.008,1347,3.528,1348,2.295,1349,4.824,1350,3.528,1351,2.295,1352,4.113,1353,2.295,1354,4.824,1355,2.295,1356,4.824,1357,2.295,1358,2.295,1359,2.295,1360,3.528,1361,2.295,1362,3.008,1363,2.295,1364,2.295,1365,1.956,1366,2.295,1367,2.295,1368,2.295,1369,2.295,1370,3.528,1371,3.528,1372,2.295,1373,3.528,1374,1.956,1375,2.295,1376,2.295,1377,3.528,1378,2.295,1379,3.528,1380,2.295,1381,2.295,1382,2.295,1383,2.295,1384,1.956,1385,2.295,1386,3.008,1387,2.205,1388,2.205,1389,1.956,1390,1.956,1391,1.956,1392,1.956,1393,1.956,1394,1.956,1395,1.956,1396,1.956,1397,1.956,1398,1.956,1399,3.008,1400,3.008,1401,1.956,1402,1.956,1403,1.956,1404,1.434,1405,1.956,1406,1.956,1407,1.956,1408,1.956,1409,1.956,1410,1.956,1411,1.956,1412,3.008,1413,3.008,1414,3.528,1415,3.528,1416,2.295,1417,2.665,1418,3.644,1419,2.295,1420,2.295]],["title/injectables/LoginService.html",[0,0.403,1329,2.446]],["body/injectables/LoginService.html",[0,0.572,2,1.397,3,0.215,4,0.187,5,0.187,8,0.408,9,3.18,12,2.177,14,0.818,21,3.269,24,2.378,25,0.243,26,0.618,27,1.193,35,1.044,36,2.044,37,2.632,38,1.144,41,1.975,42,2.177,43,1.757,44,0.928,45,0.023,46,0.443,47,0.482,48,0.765,53,0.992,54,2.935,60,1.004,61,1.948,63,1.975,67,3.577,69,3.676,70,3.474,81,1.862,88,1.09,89,0.987,90,0.987,93,1.99,95,0.531,96,0.302,97,1.245,98,3.843,99,0.992,100,1.674,101,2.884,102,1.574,104,1.176,105,1.111,106,0.215,107,0.332,108,0.804,109,1.176,110,0.884,111,3.815,113,1.233,115,3.18,116,1.906,119,1.943,122,2.386,123,3.18,133,0.015,134,0.015,236,2.725,302,2.359,311,3.386,327,3.843,328,3.474,336,3.843,351,4.337,352,3.843,353,1.802,359,1.586,366,1.975,418,3.843,456,2.234,457,3.18,471,3.843,472,2.751,476,2.725,492,2.852,495,1.757,500,3.18,526,1.975,737,2.541,830,2.097,840,3.474,860,3.474,1206,5.574,1215,4.168,1218,4.611,1220,4.611,1223,5.203,1239,3.254,1242,3.254,1312,4.291,1329,3.474,1365,3.254,1374,3.254,1384,3.254,1421,3.254,1422,6.864,1423,5.722,1424,5.722,1425,6.102,1426,6.102,1427,5.087,1428,5.087,1429,3.817,1430,3.474,1431,4.337,1432,6.102,1433,3.817,1434,5.203,1435,5.087,1436,5.087,1437,3.817,1438,3.817,1439,5.087,1440,5.087,1441,3.817,1442,3.843,1443,5.087,1444,5.087,1445,3.817,1446,3.817,1447,3.254,1448,4.337,1449,3.817]],["title/components/PrivacyPolicyComponent.html",[135,0.435,203,0.931]],["body/components/PrivacyPolicyComponent.html",[3,0.055,4,0.048,5,0.048,8,0.069,12,0.564,15,0.253,19,0.692,22,0.268,25,0.062,42,0.318,45,0.021,46,0.15,59,0.671,95,0.085,96,0.077,106,0.055,107,0.085,125,1.113,133,0.005,134,0.005,135,0.392,136,0.268,137,0.532,138,0.337,139,0.337,140,0.337,141,0.337,143,0.997,153,1.854,154,0.337,155,1.963,156,0.597,158,0.597,167,0.3,168,0.597,169,0.597,170,0.337,171,0.973,172,0.337,173,0.268,174,0.597,175,0.337,176,0.268,177,0.337,178,0.284,179,0.3,180,0.239,181,0.337,182,0.268,183,0.337,184,0.268,185,0.337,186,0.253,187,0.337,188,0.253,189,0.337,190,0.284,191,0.318,192,0.268,193,0.318,194,0.337,195,0.268,196,0.3,197,0.337,198,0.253,199,0.318,200,0.337,201,0.253,202,0.337,203,0.927,204,1.585,205,0.337,206,0.268,207,0.3,208,0.337,209,0.268,210,0.337,211,0.253,212,0.3,213,0.337,214,0.253,215,0.318,216,0.337,217,0.337,294,0.665,319,1.625,331,1.329,353,0.449,447,1.497,473,0.487,475,1.727,479,2.642,484,0.808,525,1.08,538,1.18,562,0.671,564,3.777,568,1.305,582,0.402,583,0.427,584,1.251,585,1.329,586,1.659,587,0.808,588,1.499,589,0.427,590,1.499,594,0.609,595,2.263,600,1.021,601,1.471,602,1.329,605,0.427,606,0.455,610,0.609,611,0.904,612,0.96,613,1.887,614,1.251,615,1.251,616,1.597,618,1.094,619,1.161,620,0.904,622,0.808,623,0.671,624,0.671,626,0.904,628,0.427,629,0.712,631,0.808,633,1.161,637,0.904,640,1.251,658,1.161,659,1.021,661,0.758,664,1.163,668,0.455,670,1.163,678,0.402,684,0.522,685,0.522,687,0.487,688,0.487,701,0.808,830,0.712,861,0.997,893,2.402,946,0.609,948,0.736,949,1.455,950,1.667,952,0.522,955,0.609,976,0.925,977,1.317,978,1.08,986,0.562,1075,0.522,1076,0.522,1077,0.609,1090,1.247,1094,0.522,1201,1.455,1243,1.305,1244,1.18,1245,1.305,1247,1.305,1248,1.305,1249,0.562,1250,1.305,1252,0.736,1253,0.562,1254,1.088,1255,0.736,1256,0.609,1257,0.736,1258,0.609,1259,0.736,1260,1.305,1261,1.305,1262,1.08,1265,1.473,1273,1.473,1277,1.473,1278,1.473,1279,1.473,1280,1.473,1281,1.473,1282,1.473,1284,1.473,1285,2.402,1286,1.473,1287,3.508,1288,3.041,1289,0.831,1290,1.473,1291,1.473,1292,1.473,1294,1.305,1296,1.759,1297,0.736,1298,0.736,1299,0.736,1300,0.736,1301,0.736,1302,0.609,1303,0.736,1304,0.736,1305,0.736,1306,0.665,1307,0.736,1308,0.736,1309,0.831,1450,0.831,1451,0.831,1452,1.18,1453,1.728,1454,2.328,1455,1.728,1456,0.974,1457,4.114,1458,6.868,1459,4.86,1460,1.728,1461,3.567,1462,4.114,1463,7.255,1464,3.567,1465,4.114,1466,1.728,1467,0.974,1468,0.974,1469,5.528,1470,2.817,1471,6.639,1472,7.214,1473,1.728,1474,6.409,1475,7.128,1476,5.936,1477,6.039,1478,1.728,1479,4.86,1480,5.126,1481,1.728,1482,3.567,1483,1.728,1484,2.817,1485,6.211,1486,4.86,1487,0.974,1488,3.567,1489,5.684,1490,3.567,1491,4.114,1492,4.531,1493,2.817,1494,1.728,1495,0.974,1496,4.114,1497,3.567,1498,6.35,1499,1.728,1500,6.039,1501,1.728,1502,4.705,1503,6.211,1504,5.684,1505,3.567,1506,5.684,1507,1.728,1508,1.728,1509,2.817,1510,4.531,1511,1.728,1512,0.974,1513,6.13,1514,3.567,1515,0.974,1516,3.567,1517,1.728,1518,6.639,1519,6.513,1520,1.728,1521,3.567,1522,3.567,1523,6.039,1524,1.728,1525,1.728,1526,3.567,1527,4.114,1528,4.86,1529,4.336,1530,4.114,1531,1.728,1532,5.936,1533,4.114,1534,1.728,1535,2.817,1536,2.817,1537,6.846,1538,5.528,1539,6.639,1540,6.409,1541,2.817,1542,1.728,1543,7.011,1544,1.728,1545,1.728,1546,1.728,1547,6.211,1548,2.817,1549,1.728,1550,1.728,1551,1.728,1552,1.728,1553,1.728,1554,5.528,1555,1.728,1556,1.728,1557,1.728,1558,1.728,1559,1.728,1560,2.817,1561,1.728,1562,3.567,1563,5.819,1564,1.728,1565,1.728,1566,6.35,1567,0.974,1568,1.728,1569,3.567,1570,1.728,1571,2.817,1572,2.817,1573,3.567,1574,6.513,1575,0.974,1576,5.936,1577,6.211,1578,1.728,1579,3.567,1580,3.567,1581,2.817,1582,1.728,1583,6.284,1584,4.531,1585,3.567,1586,1.728,1587,2.328,1588,3.567,1589,3.86,1590,5.344,1591,1.728,1592,1.728,1593,4.114,1594,1.728,1595,0.974,1596,4.114,1597,6.513,1598,4.114,1599,3.567,1600,3.567,1601,3.567,1602,5.528,1603,1.728,1604,1.728,1605,4.114,1606,4.114,1607,2.817,1608,3.567,1609,3.041,1610,1.728,1611,1.728,1612,2.817,1613,1.728,1614,2.817,1615,4.114,1616,1.728,1617,1.728,1618,1.728,1619,1.728,1620,1.728,1621,0.974,1622,0.974,1623,1.728,1624,1.728,1625,1.728,1626,1.728,1627,6.769,1628,1.728,1629,1.728,1630,1.728,1631,5.936,1632,6.409,1633,5.819,1634,6.464,1635,6.039,1636,4.531,1637,6.464,1638,3.567,1639,3.567,1640,5.126,1641,0.974,1642,0.974,1643,1.728,1644,5.528,1645,1.728,1646,2.817,1647,3.567,1648,0.974,1649,1.728,1650,2.817,1651,3.567,1652,4.114,1653,4.531,1654,2.817,1655,3.567,1656,5.936,1657,1.728,1658,1.728,1659,2.817,1660,1.728,1661,1.728,1662,3.567,1663,0.974,1664,1.728,1665,1.728,1666,1.728,1667,4.114,1668,0.974,1669,1.728,1670,1.728,1671,1.728,1672,1.728,1673,1.728,1674,2.817,1675,1.728,1676,1.728,1677,1.728,1678,1.728,1679,1.728,1680,1.728,1681,4.114,1682,1.728,1683,1.728,1684,1.728,1685,1.728,1686,1.728,1687,0.974,1688,1.728,1689,1.728,1690,2.817,1691,0.974,1692,1.728,1693,0.974,1694,1.728,1695,5.126,1696,1.728,1697,2.328,1698,3.86,1699,2.817,1700,0.974,1701,1.728,1702,2.817,1703,1.728,1704,1.728,1705,4.114,1706,3.567,1707,1.728,1708,1.728,1709,1.728,1710,1.728,1711,0.974,1712,1.728,1713,2.817,1714,1.728,1715,2.817,1716,1.728,1717,1.728,1718,2.817,1719,3.567,1720,1.728,1721,0.974,1722,1.728,1723,1.728,1724,0.974,1725,1.728,1726,0.974,1727,2.328,1728,1.728,1729,1.728,1730,2.817,1731,1.728,1732,2.817,1733,1.728,1734,2.817,1735,2.817,1736,4.531,1737,4.114,1738,2.817,1739,1.728,1740,1.728,1741,3.567,1742,3.567,1743,1.728,1744,2.328,1745,2.817,1746,1.728,1747,1.728,1748,1.473,1749,0.974,1750,1.728,1751,1.728,1752,2.817,1753,1.728,1754,4.531,1755,2.328,1756,1.728,1757,1.728,1758,1.728,1759,1.728,1760,1.728,1761,2.817,1762,2.817,1763,1.728,1764,1.728,1765,1.728,1766,0.974,1767,0.974,1768,1.728,1769,2.817,1770,3.567,1771,0.974,1772,1.728,1773,1.728,1774,2.817,1775,3.567,1776,1.728,1777,1.728,1778,1.728,1779,0.974,1780,4.531,1781,1.728,1782,1.728,1783,3.567,1784,4.531,1785,1.728,1786,1.728,1787,2.817,1788,0.974,1789,1.728,1790,2.817,1791,1.728,1792,1.728,1793,1.728,1794,1.728,1795,1.728,1796,4.531,1797,0.974,1798,3.567,1799,1.728,1800,1.728,1801,1.728,1802,1.728,1803,1.728,1804,3.567,1805,1.728,1806,0.974,1807,1.728,1808,1.728,1809,0.974,1810,1.728,1811,1.728,1812,1.728,1813,1.728,1814,1.728,1815,4.531,1816,1.728,1817,2.817,1818,2.328,1819,4.114,1820,4.114,1821,4.531,1822,1.728,1823,1.728,1824,1.728,1825,4.86,1826,2.817,1827,2.817,1828,3.567,1829,0.974,1830,2.817,1831,1.728,1832,2.817,1833,1.728,1834,2.817,1835,3.567,1836,1.728,1837,1.728,1838,2.817,1839,0.974,1840,1.728,1841,3.567,1842,1.728,1843,1.728,1844,1.728,1845,3.567,1846,2.328,1847,3.567,1848,2.328,1849,1.728,1850,1.728,1851,1.728,1852,1.728,1853,1.728,1854,2.817,1855,1.728,1856,1.728,1857,0.974,1858,0.974,1859,0.974,1860,2.817,1861,1.728,1862,0.974,1863,1.728,1864,1.728,1865,1.728,1866,0.974,1867,0.974,1868,2.817,1869,1.728,1870,1.728,1871,1.728,1872,1.728,1873,1.728,1874,0.974,1875,1.728,1876,2.817,1877,1.728,1878,0.974,1879,1.728,1880,0.974,1881,2.817,1882,1.728,1883,1.728,1884,1.728,1885,1.728,1886,1.728,1887,1.728,1888,1.728,1889,1.728,1890,1.728,1891,2.328,1892,1.728,1893,1.728,1894,0.974,1895,1.728,1896,0.974,1897,0.974,1898,1.728,1899,2.817,1900,1.728,1901,1.728,1902,1.728,1903,0.974,1904,1.728,1905,1.728,1906,1.728,1907,1.728,1908,1.728,1909,1.728,1910,1.728,1911,0.974,1912,0.974,1913,2.817,1914,1.728,1915,0.974,1916,1.728,1917,1.728,1918,0.974,1919,0.974,1920,1.728,1921,1.728,1922,3.567,1923,3.567,1924,2.328,1925,1.728,1926,1.728,1927,0.974,1928,1.728,1929,1.728,1930,1.728,1931,3.567,1932,1.728,1933,1.728,1934,1.728,1935,0.974,1936,1.728,1937,1.728,1938,1.728,1939,1.728,1940,0.974,1941,0.974,1942,1.728,1943,1.728,1944,1.728,1945,1.728,1946,1.728,1947,0.974,1948,1.728,1949,1.728,1950,1.728,1951,1.728,1952,1.728,1953,1.728,1954,1.728,1955,1.728,1956,3.567,1957,3.567,1958,1.728,1959,1.728,1960,1.728,1961,0.974,1962,1.728,1963,0.974,1964,1.728,1965,1.728,1966,1.728,1967,1.728,1968,1.728,1969,1.728,1970,1.728,1971,1.728,1972,1.728,1973,0.974,1974,1.728,1975,0.974,1976,0.974,1977,0.974,1978,0.974,1979,1.728,1980,4.86,1981,0.974,1982,0.974,1983,4.114,1984,4.705,1985,1.728,1986,0.974,1987,0.974,1988,3.567,1989,2.328,1990,3.86,1991,0.974,1992,4.114,1993,1.728,1994,1.728,1995,1.728,1996,0.974,1997,0.974,1998,0.974,1999,0.974,2000,0.974,2001,1.728,2002,0.974,2003,0.974,2004,1.728,2005,0.974,2006,0.974,2007,0.974,2008,1.728,2009,0.974,2010,1.728,2011,0.974,2012,0.974,2013,0.974,2014,2.328,2015,1.728,2016,2.328,2017,0.974,2018,1.728,2019,1.728,2020,1.728,2021,2.328,2022,0.974,2023,0.974,2024,0.974,2025,0.974,2026,0.974,2027,0.974,2028,0.974,2029,0.974,2030,1.728,2031,2.328,2032,1.728,2033,0.974,2034,0.974,2035,1.728,2036,2.328,2037,2.328,2038,0.974,2039,0.974,2040,0.974,2041,0.974,2042,0.974,2043,0.974,2044,0.974,2045,0.974,2046,0.974,2047,2.328,2048,0.974,2049,0.974,2050,0.974,2051,0.974,2052,0.974,2053,0.974,2054,0.974,2055,0.974,2056,0.974,2057,2.328,2058,0.974,2059,0.974,2060,0.974,2061,0.974,2062,0.974,2063,0.974]],["title/components/ResetPasswordComponent.html",[135,0.435,206,0.985]],["body/components/ResetPasswordComponent.html",[3,0.264,4,0.23,5,0.23,8,0.335,15,1.222,19,1.62,22,1.293,24,2.719,45,0.022,46,0.506,95,0.409,96,0.372,106,0.264,107,0.409,133,0.018,134,0.018,135,0.824,136,1.293,137,1.792,138,1.624,139,1.624,140,1.624,141,1.624,143,3.356,153,2.412,154,1.624,155,2.554,156,2.009,158,2.009,167,1.449,168,2.009,169,2.009,170,1.624,171,2.279,172,1.624,173,1.293,174,2.009,175,1.624,176,1.293,177,1.624,178,1.369,179,1.449,180,1.154,181,1.624,182,1.293,183,1.624,184,1.293,185,1.624,186,1.222,187,1.624,188,1.222,189,1.624,190,1.369,191,1.533,192,1.293,193,1.533,194,1.624,195,1.293,196,1.449,197,1.624,198,1.222,199,1.533,200,1.624,201,1.222,202,1.624,203,1.222,204,1.533,205,1.624,206,1.901,207,2.234,208,1.624,209,1.293,210,1.624,211,1.222,212,1.449,213,1.624,214,1.222,215,1.533,216,1.624,217,1.624,249,3.552,341,4.959,423,2.009,702,3.973,1312,4.423,2064,4.009,2065,4.009,2066,5.817,2067,5.817,2068,4.959,2069,5.817,2070,6.316,2071,5.817,2072,5.817]],["title/injectables/ScreenSizeService.html",[0,0.403,827,2.446]],["body/injectables/ScreenSizeService.html",[0,0.645,2,1.679,3,0.258,4,0.225,5,0.225,8,0.408,25,0.292,26,0.696,27,1.14,35,1.14,38,1.071,40,1.406,44,0.837,45,0.023,46,0.399,47,0.494,48,0.69,61,1.916,62,1.979,89,1.112,90,1.112,95,0.569,96,0.363,99,1.193,102,1.892,104,1.414,105,1.336,106,0.258,107,0.399,108,0.645,109,1.414,133,0.017,134,0.017,266,4.468,337,2.362,350,2.678,359,1.489,361,1.869,425,4.885,484,2.678,586,2.097,634,3.518,679,3.136,680,2.512,696,2.512,795,4.468,812,5.326,827,4.468,854,5.855,877,5.855,897,4.943,1162,4.329,2073,3.912,2074,5.729,2075,4.329,2076,5.729,2077,6.966,2078,6.247,2079,4.589,2080,7.192,2081,4.589,2082,5.729,2083,5.729,2084,5.729,2085,4.589,2086,5.729,2087,5.729,2088,5.729,2089,5.729,2090,5.729,2091,6.247,2092,5.729,2093,4.589,2094,5.729,2095,4.589,2096,3.912]],["title/components/SidebarComponent.html",[135,0.435,209,0.985]],["body/components/SidebarComponent.html",[3,0.165,4,0.144,5,0.144,8,0.354,14,0.876,15,1.614,17,2.118,19,1.614,20,2.651,22,0.808,25,0.187,26,0.515,27,1.099,35,0.908,38,1.173,44,0.774,45,0.023,46,0.474,47,0.476,48,0.638,53,1.416,60,0.974,88,0.8,89,1.058,90,1.058,93,1.964,95,0.369,96,0.232,106,0.165,107,0.256,108,0.596,109,0.905,125,1.719,133,0.013,134,0.013,135,0.702,136,0.808,137,1.306,138,1.014,139,1.014,140,1.014,141,1.014,148,2.118,153,2.303,154,1.014,155,2.439,156,1.465,158,1.465,165,4.647,167,0.905,168,1.465,169,1.465,170,1.014,171,1.882,172,1.014,173,0.808,174,1.465,175,1.014,176,0.808,177,1.014,178,0.855,179,1.913,180,1.524,181,1.014,182,0.808,183,1.014,184,0.808,185,1.014,186,0.763,187,1.014,188,0.763,189,1.014,190,0.855,191,0.958,192,0.808,193,0.958,194,1.014,195,0.808,196,0.905,197,1.014,198,0.763,199,1.885,200,1.014,201,0.763,202,1.014,203,0.763,204,1.885,205,1.014,206,0.808,207,0.905,208,1.014,209,1.657,210,1.014,211,0.763,212,0.905,213,1.014,214,0.763,215,2.025,216,1.014,217,1.014,302,1.748,307,1.014,318,3.334,319,3.334,330,3.194,333,1.836,334,2.636,336,3.204,337,1.748,338,2.468,348,2.446,350,1.982,357,2.547,359,1.652,364,1.748,366,2.657,391,2.118,438,1.836,447,1.856,475,1.996,485,2.651,495,2.237,500,3.973,507,1.859,510,2.896,545,3.722,584,1.14,585,1.748,586,1.822,588,2.116,589,1.288,590,1.932,600,1.288,610,1.836,611,1.14,612,1.211,613,2.468,614,1.932,615,1.932,616,2.244,618,1.14,619,2.052,620,1.14,623,1.932,624,1.932,626,1.14,629,1.211,631,1.982,633,1.211,637,1.14,640,1.932,658,2.052,659,2.182,661,1.288,668,1.373,703,2.666,709,2.919,723,2.971,732,2.118,764,1.836,795,2.896,857,4.647,867,3.204,870,2.446,950,1.982,976,1.573,977,1.373,1090,1.573,1146,5.911,1148,3.615,1151,4.243,1152,4.243,1153,4.243,1154,4.243,1155,4.647,1156,4.647,1157,4.647,1158,4.117,1159,4.647,1160,3.615,1162,3.204,1169,3.615,1171,3.204,1172,4.647,1173,3.615,1174,3.615,1176,3.615,1177,3.615,1181,3.204,1182,2.219,1183,2.504,1184,2.504,1185,2.504,1186,2.504,1187,3.615,1188,3.615,1189,3.615,1190,3.615,1191,2.504,1192,2.504,1193,2.504,1194,2.504,1195,1.836,1196,2.504,1197,2.504,1201,2.651,1251,2.219,1262,1.836,1294,2.219,1296,3.76,1297,2.219,1298,2.219,1299,2.219,1300,2.219,1301,2.219,1302,1.836,1303,2.219,1304,2.219,1305,2.219,1306,2.006,1307,2.219,1308,2.219,2097,2.504,2098,5.45,2099,4.24,2100,4.24,2101,4.24,2102,4.24,2103,4.977,2104,4.24,2105,5.45,2106,5.45,2107,4.24,2108,2.937,2109,2.937,2110,2.937,2111,2.937,2112,2.937,2113,2.937,2114,2.937,2115,2.937,2116,2.937,2117,2.937,2118,4.802,2119,2.937,2120,2.937,2121,2.937,2122,4.24,2123,2.937]],["title/components/SignUpComponent.html",[135,0.435,211,0.931]],["body/components/SignUpComponent.html",[3,0.147,4,0.128,5,0.128,8,0.277,12,1.27,14,0.626,15,0.68,19,1.265,22,0.719,25,0.248,26,0.473,27,0.711,35,0.941,38,1.054,40,0.956,44,0.477,45,0.023,46,0.535,47,0.368,48,0.393,56,1.607,60,0.829,63,1.512,89,0.903,90,0.903,95,0.449,96,0.207,106,0.147,107,0.228,108,0.547,110,0.606,113,0.507,116,1.306,119,1.501,125,2.125,128,2.229,133,0.012,134,0.012,135,0.565,136,0.719,137,1.2,138,0.903,139,0.903,140,0.903,141,0.903,149,3.845,153,2.269,154,0.903,155,2.403,156,1.345,158,1.345,167,0.806,168,1.345,169,1.345,170,0.903,171,1.781,172,0.903,173,0.719,174,1.345,175,0.903,176,0.719,177,0.903,178,0.761,179,0.806,180,0.642,181,0.903,182,0.719,183,0.903,184,0.719,185,0.903,186,0.68,187,0.903,188,0.68,189,0.903,190,0.761,191,0.853,192,0.719,193,0.853,194,0.903,195,0.719,196,0.806,197,0.903,198,0.68,199,1.517,200,0.903,201,0.68,202,0.903,203,0.68,204,2.05,205,0.903,206,0.719,207,0.806,208,0.903,209,0.719,210,0.903,211,1.502,212,2.026,213,0.903,214,0.68,215,1.517,216,0.903,217,0.903,233,3.627,243,1.786,247,4.293,272,2.229,302,1.078,307,0.903,311,1.945,314,3.895,318,2.246,319,3.627,324,2.434,328,2.659,330,2.261,331,2.273,334,2.552,338,1.512,353,1.634,359,1.502,361,1.27,365,2.229,366,2.243,378,1.306,420,2.659,423,1.345,447,1.781,456,1.425,472,2.273,475,2.316,479,1.078,495,1.996,508,3.895,509,3.32,511,2.434,526,1.512,542,2.942,543,3.32,556,1.975,558,2.229,559,1.975,562,2.001,568,1.425,582,2.536,583,1.708,584,1.015,585,1.918,586,2.455,587,1.222,588,2.44,589,1.708,590,2.521,595,1.306,598,1.4,599,3.178,601,2.536,602,1.605,603,1.786,604,1.4,605,2.04,606,2.175,607,1.786,611,1.512,612,1.078,613,2.675,614,2.44,615,2.44,616,2.552,617,2.086,618,1.806,619,1.078,620,2.14,622,1.222,623,1.806,624,1.806,626,1.512,627,1.4,628,1.147,629,1.605,633,1.918,634,1.945,637,1.015,640,2.388,647,2.659,648,1.975,649,3.947,650,3.178,651,2.659,653,1.786,656,1.786,658,2.468,659,2.417,661,2.534,662,3.446,664,1.306,665,1.975,666,2.659,667,2.434,668,1.222,669,1.975,670,1.306,671,1.634,672,2.942,673,1.975,674,1.634,675,1.634,678,1.078,679,1.147,680,1.147,687,1.306,688,1.306,694,1.222,695,1.222,696,1.147,699,2.659,710,4.395,723,2.409,737,2.575,774,3.515,782,2.625,783,1.306,895,2.659,950,1.82,952,1.4,976,1.4,977,1.222,1075,1.4,1076,1.4,1086,1.975,1090,1.4,1094,2.086,1195,1.634,1227,2.942,1249,1.508,1253,1.508,1256,1.634,1258,1.634,1302,2.434,1312,4.33,1319,3.967,1322,4.395,1327,4.395,1332,2.324,1335,3.32,1352,4.395,1362,3.32,1386,3.32,1387,2.434,1388,2.434,1389,2.229,1390,2.229,1391,2.229,1392,2.229,1393,2.229,1394,2.229,1395,2.229,1396,2.229,1397,2.229,1398,2.229,1399,3.32,1400,3.32,1401,2.229,1402,2.229,1403,2.229,1404,1.634,1405,2.229,1406,2.229,1407,2.229,1408,2.229,1409,2.229,1410,2.229,1417,1.975,1418,2.942,1430,2.659,2118,2.942,2124,5.36,2125,2.229,2126,5.455,2127,3.894,2128,3.894,2129,4.653,2130,3.894,2131,4.653,2132,5.155,2133,2.614,2134,3.894,2135,3.894,2136,2.614,2137,2.614,2138,4.653,2139,2.614,2140,5.155,2141,5.155,2142,3.894,2143,2.614,2144,2.614,2145,3.894,2146,3.967,2147,3.894,2148,2.614,2149,3.32,2150,2.614,2151,2.614,2152,2.614,2153,2.614,2154,2.614,2155,2.614,2156,2.614,2157,3.894,2158,3.894,2159,2.614,2160,2.614,2161,1.786,2162,1.508,2163,1.786,2164,1.975,2165,2.614,2166,5.155,2167,3.894,2168,3.894,2169,2.614,2170,2.614,2171,2.614,2172,2.614,2173,2.614]],["title/interfaces/Subtask.html",[441,0.879,2174,1.789]],["body/interfaces/Subtask.html",[0,0.586,3,0.222,4,0.194,5,0.194,8,0.415,14,0.635,17,2.599,18,2.599,25,0.251,26,0.632,27,0.95,35,0.721,37,2.401,40,0.97,41,1.533,42,2.153,43,2.136,45,0.023,47,0.46,48,0.93,49,1.846,53,1.352,56,1.797,60,0.993,61,1.947,62,2.22,63,1.533,64,2.282,66,2.984,72,1.816,74,1.973,75,2.35,81,1.905,82,1.732,85,1.846,86,2.115,87,2.599,88,0.935,92,2.115,93,1.697,95,0.56,96,0.312,97,1.288,99,1.027,100,1.732,102,1.628,103,2.599,104,1.217,105,1.15,106,0.293,107,0.344,108,0.945,109,1.217,110,0.915,113,1.306,115,2.469,116,1.973,117,2.278,119,1.989,133,0.016,134,0.016,359,1.671,361,1.697,385,2.115,423,1.797,424,2.787,438,2.469,441,1.429,443,1.846,449,2.145,450,2.02,451,1.846,452,2.115,456,2.13,458,2.469,461,1.973,462,2.115,468,2.282,484,1.846,486,2.432,579,3.002,580,2.278,701,1.846,783,2.599,830,1.628,1013,2.278,1254,3.192,1332,1.973,1339,2.278,2162,2.278,2164,2.984,2174,3.698,2175,2.984,2176,3.253,2177,4.126,2178,3.554,2179,3.638,2180,3.367,2181,3.931,2182,3.931,2183,3.367,2184,3.367,2185,3.367,2186,2.469,2187,3.367,2188,3.367,2189,3.367,2190,3.367,2191,3.367,2192,4.437,2193,3.367,2194,3.367,2195,3.367,2196,3.367,2197,3.367,2198,3.367,2199,3.367,2200,3.367,2201,2.469,2202,3.367,2203,3.367,2204,2.984,2205,3.367,2206,2.278,2207,4.962,2208,3.367,2209,3.367,2210,3.367,2211,2.278,2212,3.367,2213,3.367,2214,3.367]],["title/interfaces/Subtask-1.html",[441,0.736,479,1.236,2174,1.497]],["body/interfaces/Subtask-1.html",[0,0.54,3,0.197,4,0.171,5,0.171,8,0.465,11,1.208,13,2.568,14,0.562,17,2.395,18,2.395,19,1.177,20,2.997,24,1.635,25,0.348,26,0.583,27,0.875,28,2.389,35,0.638,37,2.286,40,0.859,41,1.358,42,2.078,43,2.034,45,0.023,47,0.432,48,1.036,49,1.635,52,1.873,53,0.909,56,2.131,60,0.958,61,1.91,62,2.131,63,1.358,64,1.534,72,1.894,74,1.747,75,2.341,81,1.755,85,1.635,86,1.873,87,2.395,88,1.083,89,0.679,92,1.873,93,1.141,94,2.186,95,0.537,96,0.276,97,1.141,99,0.909,100,1.534,102,1.442,103,1.747,104,1.078,105,1.018,106,0.308,107,0.304,108,0.916,109,1.078,110,1.111,113,1.236,117,2.018,119,1.9,133,0.014,134,0.014,160,3.737,180,1.811,353,1.246,359,1.696,361,1.564,373,2.997,385,1.873,392,2.018,423,1.208,424,1.873,432,3.275,441,1.514,442,2.931,443,1.635,446,3.153,448,1.873,449,2.427,450,2.124,451,1.635,452,1.873,456,1.755,460,2.018,461,2.941,462,1.873,468,2.4,486,2.241,507,1.534,568,1.28,570,3.421,574,2.389,579,2.018,580,2.766,782,1.534,783,3.183,830,1.442,1013,2.018,1096,2.568,1228,2.389,1254,3.106,1332,2.395,1339,2.018,1387,2.186,1388,2.186,1404,2.186,1452,2.389,2161,2.389,2162,2.766,2163,3.275,2174,3.467,2176,2.997,2177,3.983,2179,3.856,2186,2.186,2201,2.186,2206,2.018,2211,2.018,2215,2.389,2216,2.642,2217,3.737,2218,3.275,2219,2.389,2220,2.389,2221,2.389,2222,2.389,2223,2.642,2224,2.642,2225,3.623,2226,2.642,2227,2.642,2228,3.737,2229,2.389,2230,2.389,2231,2.642,2232,2.642,2233,2.766,2234,2.642,2235,2.642,2236,2.642,2237,2.642,2238,2.642,2239,2.642,2240,2.642,2241,2.642,2242,2.642,2243,2.642,2244,2.642,2245,2.642,2246,2.642,2247,2.642,2248,2.642,2249,2.642,2250,2.389,2251,2.642,2252,2.642,2253,2.642,2254,2.642,2255,3.623,2256,2.642,2257,2.642,2258,2.642,2259,2.642,2260,2.642,2261,2.642,2262,2.642,2263,3.623,2264,2.389,2265,2.642,2266,2.389,2267,2.642,2268,2.642]],["title/injectables/SubtaskService.html",[0,0.403,2178,2.446]],["body/injectables/SubtaskService.html",[0,0.532,2,1.254,3,0.193,4,0.168,5,0.168,8,0.471,14,0.938,17,2.916,18,2.916,25,0.218,26,0.575,27,1.156,35,0.988,36,1.835,37,2.567,38,1.133,40,1.161,41,1.836,42,2.238,43,2.284,44,1.156,45,0.023,46,0.551,47,0.5,48,0.976,49,2.21,53,1.407,56,2.016,60,1.041,61,1.991,62,2.346,63,1.836,64,2.56,66,3.572,72,1.869,74,2.362,75,2.35,81,2.136,82,2.074,85,2.21,86,2.533,87,2.916,88,0.551,89,0.665,90,0.665,92,2.533,93,1.766,95,0.533,96,0.271,97,1.118,99,0.891,100,1.503,102,1.413,103,2.362,104,1.056,105,0.998,106,0.266,107,0.298,108,0.911,109,1.056,110,0.794,113,1.259,115,2.142,116,1.712,117,1.977,119,2.014,133,0.014,134,0.014,359,1.229,361,1.118,385,2.533,423,2.016,424,3.126,438,2.142,441,1.161,449,1.413,450,1.33,451,1.602,452,1.835,456,2.318,458,3.384,461,2.362,462,2.533,468,1.503,484,2.21,486,2.728,579,3.367,580,2.728,701,2.21,783,1.712,830,1.949,1013,2.728,1254,2.531,1332,2.362,1339,2.728,2162,1.977,2164,2.589,2174,3.712,2175,2.589,2176,2.142,2177,2.956,2178,3.987,2179,3.958,2180,4.032,2181,4.41,2182,4.41,2183,4.032,2184,4.977,2185,2.922,2186,2.956,2187,4.032,2188,2.922,2189,4.032,2190,2.922,2191,2.922,2192,4.032,2193,2.922,2194,4.032,2195,2.922,2196,2.922,2197,2.922,2198,2.922,2199,2.922,2200,2.922,2201,2.956,2202,4.032,2203,2.922,2204,3.572,2205,4.032,2206,2.728,2207,4.616,2208,2.922,2209,2.922,2210,2.922,2211,1.977,2212,2.922,2213,2.922,2214,2.922,2269,4.728,2270,4.728,2271,4.728,2272,3.572,2273,4.728,2274,4.728,2275,3.427,2276,3.427,2277,3.427,2278,3.427,2279,3.427,2280,3.427]],["title/components/SummaryComponent.html",[135,0.435,214,0.931]],["body/components/SummaryComponent.html",[3,0.107,4,0.094,5,0.094,8,0.34,12,1.422,14,0.491,15,0.496,19,1.07,22,0.525,25,0.194,26,0.371,27,0.928,35,0.796,38,1.077,40,0.749,44,0.796,45,0.023,46,0.443,47,0.452,48,0.656,53,1.133,60,0.882,61,1.312,72,1.199,82,1.338,88,0.943,89,0.925,90,0.925,95,0.465,96,0.151,99,0.496,102,0.787,106,0.107,107,0.166,108,0.714,110,1.237,113,0.74,116,0.953,119,0.889,125,2.026,133,0.009,134,0.009,135,0.579,136,0.525,137,0.94,138,0.659,139,0.659,140,0.659,141,0.659,148,2.54,149,1.908,153,2.189,154,0.659,155,2.29,156,1.054,158,1.054,163,2.306,167,0.588,168,1.054,169,1.054,170,0.659,171,1.506,172,0.659,173,0.525,174,1.054,175,0.659,176,0.525,177,0.659,178,0.555,179,1.343,180,1.362,181,0.659,182,0.525,183,0.659,184,0.525,185,0.659,186,0.496,187,0.659,188,0.496,189,0.659,190,0.555,191,0.622,192,0.525,193,0.622,194,0.659,195,0.525,196,0.588,197,0.659,198,0.496,199,0.622,200,0.659,201,0.496,202,0.659,203,0.496,204,0.622,205,0.659,206,0.525,207,0.588,208,0.659,209,0.525,210,0.659,211,0.496,212,0.588,213,0.659,214,1.322,215,1.913,216,0.659,217,0.659,234,2.993,236,2.724,271,1.303,283,2.085,302,1.797,307,0.659,330,0.837,331,1.258,334,2.369,338,1.185,350,2.037,353,1.685,357,2.377,359,1.133,364,1.258,366,1.481,373,3.179,383,1.761,391,0.953,447,2.014,456,0.698,475,2.37,479,1.258,492,2.935,495,1.756,500,1.908,502,1.761,507,1.338,524,1.761,526,1.692,534,1.908,556,1.441,562,1.185,568,2.193,569,1.908,570,4.418,582,1.573,583,0.837,584,1.974,585,1.797,586,2.373,587,2.037,588,2.493,589,1.338,590,2.073,595,0.953,598,1.022,600,1.338,601,2.419,602,0.787,604,1.022,605,0.837,606,2.593,611,1.974,612,0.787,613,2.664,614,2.406,615,2.369,616,2.493,617,1.022,618,1.692,619,1.258,620,1.851,622,1.783,623,1.692,624,1.692,626,1.692,627,2.043,628,1.912,629,1.966,630,1.303,631,1.427,633,2.515,634,2.54,635,1.193,636,1.908,637,0.741,639,1.303,640,2.278,644,1.441,658,2.358,659,2.23,661,2.341,664,0.953,668,2.593,671,2.725,674,3.179,675,1.908,678,1.258,679,0.837,680,0.837,684,1.022,685,1.022,687,1.905,688,0.953,694,0.892,695,0.892,696,0.837,703,2.043,709,2.335,723,0.892,725,2.085,728,2.882,732,1.524,733,2.605,772,2.306,780,2.515,782,1.338,783,2.857,804,1.908,833,3.293,836,2.602,837,2.085,861,1.761,887,2.306,900,2.306,946,1.193,950,2.496,955,1.193,971,1.441,972,1.627,977,2.377,978,1.908,982,1.441,983,2.725,986,2.515,1032,3.717,1060,1.627,1066,2.602,1075,1.022,1076,1.022,1077,1.193,1082,2.306,1083,1.627,1091,1.627,1094,2.043,1096,3.44,1122,3.293,1181,1.441,1182,1.441,1231,1.441,1232,1.627,1249,2.201,1253,1.761,1254,0.892,1262,1.908,1275,1.627,1306,2.977,1332,1.524,1411,1.627,1412,2.602,1413,1.627,1417,2.306,1418,3.293,1430,2.977,1434,2.602,1447,1.627,2096,1.627,2217,3.907,2218,3.647,2220,2.977,2221,2.085,2222,2.085,2228,2.085,2229,2.085,2230,2.977,2233,3.52,2250,1.303,2281,1.627,2282,6.631,2283,5.339,2284,3.814,2285,3.052,2286,3.814,2287,3.814,2288,5.72,2289,3.814,2290,3.052,2291,3.052,2292,4.359,2293,3.052,2294,3.814,2295,3.814,2296,1.908,2297,3.052,2298,3.052,2299,1.908,2300,4.359,2301,4.359,2302,4.359,2303,4.359,2304,3.052,2305,1.908,2306,1.908,2307,3.052,2308,1.908,2309,4.359,2310,3.052,2311,3.052,2312,3.052,2313,1.908,2314,1.908,2315,1.908,2316,1.908,2317,1.908,2318,1.908,2319,1.908,2320,1.908,2321,4.359,2322,1.908,2323,3.052,2324,1.908,2325,3.052,2326,3.052,2327,1.908,2328,1.908,2329,3.052,2330,1.908,2331,1.908,2332,1.908,2333,1.908,2334,1.908,2335,1.627,2336,1.908,2337,1.908,2338,1.908,2339,3.814,2340,1.908,2341,4.359,2342,4.359,2343,1.908,2344,1.908,2345,1.627,2346,1.908,2347,1.908,2348,3.052,2349,3.052,2350,3.052,2351,1.908,2352,1.908,2353,1.908,2354,1.908,2355,1.908,2356,1.908,2357,1.908,2358,3.052,2359,1.908,2360,1.908,2361,3.052,2362,1.908,2363,4.359,2364,4.359,2365,3.052,2366,3.052,2367,1.908,2368,1.908,2369,1.908,2370,3.052,2371,3.052,2372,3.052,2373,3.052,2374,3.052,2375,1.908,2376,1.908,2377,3.052,2378,3.052,2379,1.908,2380,3.814,2381,3.814,2382,3.052,2383,3.814,2384,3.814,2385,1.908,2386,1.908,2387,3.052,2388,3.052,2389,1.908,2390,1.908,2391,1.908,2392,1.908,2393,1.908,2394,3.814,2395,3.814,2396,1.908,2397,1.908,2398,1.908,2399,1.908,2400,1.908,2401,3.052,2402,3.052,2403,1.908,2404,4.359,2405,4.359,2406,1.908,2407,1.908,2408,3.814,2409,3.052,2410,3.052,2411,3.814,2412,1.908,2413,1.908,2414,1.908,2415,3.052,2416,1.908,2417,1.908,2418,1.908,2419,3.814,2420,1.908,2421,1.908,2422,1.908,2423,1.908,2424,1.908,2425,3.052,2426,1.908,2427,1.908,2428,1.908,2429,1.908,2430,1.908,2431,1.908,2432,1.908,2433,1.908,2434,1.908,2435,1.908,2436,1.908,2437,3.052,2438,1.908,2439,1.908,2440,1.908,2441,3.052,2442,1.908,2443,1.908,2444,1.908,2445,1.908,2446,1.908,2447,1.908,2448,1.908]],["title/interfaces/Task.html",[180,0.879,441,0.879]],["body/interfaces/Task.html",[0,0.506,3,0.18,4,0.157,5,0.157,8,0.471,11,1.555,13,2.411,14,0.513,17,2.248,18,2.248,19,1.52,20,3.258,24,1.492,25,0.332,26,0.547,27,0.821,28,2.181,35,0.583,37,2.197,40,0.784,41,1.239,42,2.02,43,1.955,45,0.023,47,0.54,48,1.094,49,1.492,52,1.71,53,0.83,56,2.061,60,0.931,61,1.88,62,2.061,63,1.239,64,1.4,72,1.955,74,1.595,75,2.333,81,1.647,85,1.492,86,1.71,87,2.248,88,1.138,89,0.62,92,1.71,93,1.041,94,1.996,95,0.519,96,0.252,97,1.041,99,0.83,100,1.4,102,1.316,103,1.595,104,0.984,105,0.929,106,0.293,107,0.278,108,0.894,109,0.984,110,1.043,113,1.202,117,1.842,119,1.852,133,0.014,134,0.014,160,4.438,180,1.82,353,1.471,359,1.654,361,1.041,373,3.538,385,1.71,392,1.842,423,1.103,424,1.71,432,3.074,441,1.465,442,3.48,443,1.492,446,3.48,448,2.411,449,2.334,450,2.024,451,1.492,452,1.71,456,1.647,460,1.842,461,3.178,462,1.71,468,2.286,486,2.104,507,1.4,568,1.169,570,3.258,574,2.181,579,1.842,580,3.007,782,1.974,783,3.344,830,1.316,1013,1.842,1096,3.032,1228,3.074,1254,2.436,1332,2.248,1339,1.842,1387,1.996,1388,1.996,1404,2.813,1452,2.181,2161,2.181,2162,2.596,2163,3.074,2174,3.3,2176,1.996,2177,2.813,2179,4.185,2186,1.996,2201,1.996,2206,1.842,2211,1.842,2215,2.181,2216,2.412,2217,4.438,2218,3.866,2219,3.074,2220,3.074,2221,3.074,2222,3.074,2223,3.4,2224,4.276,2225,4.276,2226,3.4,2227,4.276,2228,3.866,2229,3.074,2230,3.074,2231,4.276,2232,4.276,2233,2.596,2234,2.412,2235,2.412,2236,2.412,2237,2.412,2238,2.412,2239,2.412,2240,2.412,2241,2.412,2242,2.412,2243,2.412,2244,2.412,2245,2.412,2246,2.412,2247,2.412,2248,2.412,2249,2.412,2250,2.181,2251,2.412,2252,2.412,2253,2.412,2254,2.412,2255,3.4,2256,2.412,2257,2.412,2258,2.412,2259,2.412,2260,2.412,2261,2.412,2262,2.412,2263,3.4,2264,2.181,2265,2.412,2266,2.181,2267,2.412,2268,2.412]],["title/injectables/TaskService.html",[0,0.403,2233,2.066]],["body/injectables/TaskService.html",[0,0.492,2,1.121,3,0.172,4,0.15,5,0.15,8,0.478,11,1.058,13,2.976,14,0.893,17,2.775,18,2.775,19,1.073,20,3.185,24,2.043,25,0.324,26,0.531,27,1.115,28,3.48,35,0.93,36,1.641,37,2.496,38,1.102,40,1.073,41,1.697,42,2.19,43,2.22,44,1.115,45,0.023,46,0.532,47,0.483,48,1.037,49,2.043,52,2.341,53,1.136,56,2.292,60,1.02,61,1.97,62,2.292,63,1.697,64,1.917,72,1.908,74,2.183,75,2.342,81,2.034,85,2.043,86,2.341,87,2.775,88,1.01,89,0.989,90,0.594,92,2.341,93,1.425,94,2.732,95,0.511,96,0.242,97,0.999,99,0.796,100,1.343,102,1.263,103,1.53,104,0.944,105,0.892,106,0.287,107,0.267,108,0.883,109,0.944,110,1.013,113,1.185,117,1.767,119,1.992,133,0.013,134,0.013,160,3.48,180,1.824,316,3.726,353,1.136,359,1.444,361,0.999,373,2.732,385,2.341,392,2.521,423,1.51,424,2.341,432,3.795,441,1.364,442,2.729,446,2.976,448,1.641,449,2.291,450,1.697,451,1.432,452,1.641,456,2.034,460,2.521,461,2.935,462,2.341,468,1.917,486,2.597,507,1.917,568,1.121,570,3.819,574,2.092,579,2.521,580,2.94,782,1.343,783,3.051,830,1.802,1013,2.521,1096,2.341,1228,2.092,1254,2.382,1332,2.775,1339,2.521,1387,1.915,1388,1.915,1404,1.915,1452,2.985,2161,2.092,2162,2.521,2163,2.985,2174,3.14,2176,1.915,2177,2.732,2179,3.819,2186,2.732,2201,2.732,2206,2.521,2211,1.767,2215,2.092,2216,2.314,2217,3.48,2218,2.985,2219,2.092,2220,2.092,2221,2.092,2222,2.092,2223,2.314,2224,2.314,2225,3.302,2226,2.314,2227,2.314,2228,3.795,2229,2.092,2230,2.092,2231,2.314,2232,2.314,2233,3.205,2234,3.302,2235,3.302,2236,2.314,2237,2.314,2238,2.314,2239,2.314,2240,2.314,2241,2.314,2242,2.314,2243,4.198,2244,2.314,2245,2.314,2246,2.314,2247,3.302,2248,2.314,2249,3.302,2250,2.092,2251,2.314,2252,2.314,2253,3.302,2254,3.302,2255,3.302,2256,2.314,2257,2.314,2258,2.314,2259,2.314,2260,2.314,2261,2.314,2262,2.314,2263,3.302,2264,2.092,2265,2.314,2266,2.092,2267,3.302,2268,2.314,2272,3.302,2449,4.371,2450,4.371,2451,4.371,2452,4.371,2453,3.063,2454,3.063,2455,3.063,2456,3.063,2457,3.063,2458,3.063]],["title/interfaces/User.html",[353,0.931,441,0.879]],["body/interfaces/User.html",[3,0.301,4,0.262,5,0.262,8,0.381,25,0.341,26,0.764,45,0.022,46,0.62,47,0.528,59,2.077,72,1.837,75,2.248,88,1.144,106,0.301,133,0.019,134,0.019,313,3.368,353,1.892,441,1.544,443,2.501,449,2.593,450,2.441,468,2.347,469,3.655,472,2.936,476,3.368,2075,4.043,2459,4.563]],["title/interfaces/User-1.html",[353,0.779,441,0.736,479,1.236]],["body/interfaces/User-1.html",[3,0.301,4,0.262,5,0.262,8,0.381,25,0.341,26,0.764,45,0.022,46,0.62,47,0.528,59,2.077,72,1.837,75,2.248,88,1.144,106,0.301,133,0.019,134,0.019,313,3.368,353,1.892,441,1.544,443,2.501,449,2.593,450,2.441,468,2.347,469,3.655,472,2.936,476,3.368,2075,4.043,2460,4.563]],["title/injectables/UserRegistrationService.html",[0,0.403,233,2.066]],["body/injectables/UserRegistrationService.html",[0,0.605,2,1.52,3,0.234,4,0.204,5,0.204,8,0.449,12,2.183,14,0.864,25,0.264,26,0.653,27,1.221,35,1.088,36,2.224,37,2.68,38,1.081,40,1.32,41,2.087,42,2.131,43,2.178,44,1.088,45,0.023,46,0.582,47,0.538,48,0.897,49,2.513,53,1.55,56,2.178,57,3.361,60,0.949,61,1.874,62,2.178,63,2.448,64,2.766,70,3.672,88,1.05,89,0.806,90,0.806,93,1.754,95,0.549,96,0.328,97,1.354,99,1.079,100,1.821,102,1.712,103,2.074,104,1.279,105,1.209,106,0.234,107,0.361,108,0.838,109,1.279,110,0.962,111,3.727,113,1.043,119,2.095,120,3.541,125,1.434,126,3.541,133,0.016,134,0.016,233,3.638,353,1.853,423,2.178,424,2.88,456,1.968,460,3.638,472,2.458,507,2.358,526,1.612,559,3.137,701,2.513,830,2.6,888,4.584,1020,4.062,1215,3.672,1312,3.727,1431,4.584,1442,4.062,2068,5.377,2126,6.134,2146,5.084,2181,4.062,2182,4.765,2204,4.062,2206,3.102,2264,2.836,2266,2.836,2272,4.062,2461,3.541,2462,5.377,2463,5.963,2464,5.377,2465,5.377,2466,4.153,2467,5.377,2468,4.584,2469,5.377,2470,5.377,2471,4.153,2472,5.377,2473,5.963,2474,5.377,2475,4.153]],["title/injectables/UserService.html",[0,0.403,234,1.789]],["body/injectables/UserService.html",[0,0.565,2,1.368,3,0.21,4,0.183,5,0.183,8,0.403,12,1.636,14,0.806,21,2.687,24,2.345,25,0.238,26,0.61,27,1.186,35,0.682,36,2.003,37,2.523,38,1.114,41,1.948,42,2.059,43,1.733,44,0.916,45,0.023,46,0.437,47,0.448,48,0.755,53,1.573,56,2.245,59,1.948,60,0.949,61,1.942,67,2.337,68,3.136,69,3.556,70,3.427,79,3.791,81,1.836,85,2.345,86,2.687,88,0.601,89,0.974,90,0.974,93,1.636,95,0.549,96,0.295,97,1.219,98,2.825,99,0.972,100,1.64,101,2.825,102,1.541,104,1.152,105,1.088,106,0.21,107,0.325,108,0.705,109,1.152,110,1.312,111,3.54,113,1.174,115,2.337,116,1.868,119,1.088,122,3.54,123,2.337,124,2.554,133,0.015,134,0.015,148,3.023,234,3.023,299,4.278,332,3.868,353,1.938,357,3.388,456,2.215,485,3.783,486,2.345,492,3.28,495,1.733,496,4.278,498,5.016,507,2.2,526,2.35,701,3.256,722,3.427,732,2.506,737,2.506,870,2.894,1020,3.791,1046,3.188,1218,5.098,1220,5.098,1231,2.825,1241,3.188,1346,4.278,1430,3.427,1448,4.278,2149,4.278,2335,5.16,2476,3.188,2477,5.017,2478,5.017,2479,5.663,2480,5.663,2481,6.052,2482,5.017,2483,5.017,2484,5.017,2485,3.739,2486,6.052,2487,3.739,2488,5.017,2489,3.739,2490,5.017,2491,5.017,2492,5.017,2493,3.739,2494,3.739,2495,3.739,2496,3.739,2497,3.739,2498,3.739,2499,3.739,2500,3.739,2501,3.739,2502,3.739,2503,3.739,2504,3.739,2505,3.739]],["title/coverage.html",[2506,4.155]],["body/coverage.html",[0,0.804,1,2.268,5,0.208,6,2.442,7,3.61,11,1.88,45,0.023,47,0.335,53,1.1,133,0.016,134,0.016,135,0.887,136,1.165,142,3.61,173,1.165,176,1.165,178,1.233,180,1.477,182,1.165,184,1.165,186,1.1,188,1.1,190,1.233,192,1.165,195,1.165,196,1.677,198,1.1,201,1.1,203,1.1,206,1.165,209,1.165,211,1.1,214,1.1,232,2.647,233,2.442,234,2.115,247,2.892,249,3.199,252,3.199,256,3.199,258,3.199,265,3.141,267,3.199,274,2.892,276,2.892,278,3.199,280,3.199,287,3.61,289,3.61,294,2.892,297,2.892,308,2.892,321,3.199,323,3.61,353,1.415,367,3.719,369,3.61,413,3.199,414,3.61,415,3.61,441,1.701,442,2.268,444,4.113,450,1.644,451,2.545,453,2.892,467,3.61,480,3.61,481,3.199,482,3.61,505,3.971,506,3.61,562,2.9,667,2.647,700,3.61,778,2.647,779,2.892,780,2.442,781,3.61,802,3.61,827,2.892,897,3.199,989,3.61,1095,4.113,1096,2.268,1097,3.61,1098,3.61,1125,3.61,1143,3.61,1144,3.61,1204,3.61,1205,3.61,1263,3.61,1264,3.61,1310,3.61,1329,2.892,1421,3.61,1450,3.61,1451,3.61,2064,3.61,2065,3.61,2073,3.61,2097,3.61,2124,3.61,2125,3.61,2174,2.719,2175,4.113,2178,2.892,2215,4.11,2233,2.442,2281,3.61,2459,3.61,2460,3.61,2461,3.61,2476,3.61,2506,3.61,2507,4.234,2508,4.234,2509,6.018,2510,7.002,2511,4.234,2512,5.444,2513,4.234,2514,4.234,2515,4.234,2516,6.018,2517,4.234,2518,4.234,2519,5.444,2520,4.234,2521,4.234,2522,4.234,2523,4.234,2524,4.234,2525,6.572,2526,4.234,2527,4.234,2528,4.234,2529,4.234,2530,4.234,2531,4.234,2532,5.444,2533,6.572,2534,4.234,2535,5.444,2536,5.444,2537,3.61,2538,5.444,2539,3.61,2540,4.234,2541,4.234]],["title/dependencies.html",[221,2.939,2542,2.264]],["body/dependencies.html",[45,0.023,96,0.431,99,1.418,133,0.019,134,0.019,164,4.344,221,3.726,223,3.976,241,5.423,243,3.726,262,3.41,263,3.726,307,1.884,2543,5.455,2544,7.264,2545,5.455,2546,5.455,2547,5.455,2548,5.455,2549,5.455,2550,5.455,2551,5.455,2552,5.455,2553,5.455,2554,5.455,2555,5.455,2556,5.455,2557,5.455,2558,5.455,2559,5.455,2560,5.455,2561,5.455]],["title/index.html",[25,0.191,2562,2.997,2563,2.997]],["body/index.html",[4,0.254,15,1.346,45,0.019,46,0.451,53,1.346,68,3.236,133,0.019,134,0.019,135,0.801,143,2.987,236,2.773,262,4.465,330,2.27,337,2.715,364,2.134,420,3.536,456,2.257,693,6.026,804,3.236,843,4.414,1244,4.212,1748,5.258,2211,2.987,2219,3.536,2468,4.414,2542,3.911,2564,5.177,2565,5.177,2566,6.587,2567,4.414,2568,5.177,2569,4.414,2570,6.966,2571,5.177,2572,5.177,2573,5.177,2574,5.177,2575,5.177,2576,5.177,2577,5.177,2578,5.177,2579,6.587,2580,6.587,2581,5.177,2582,5.814,2583,5.177,2584,5.177,2585,5.177,2586,5.258,2587,6.167,2588,6.819,2589,5.177,2590,6.167,2591,5.177,2592,5.177,2593,5.177,2594,5.177,2595,6.167,2596,5.177,2597,5.177,2598,5.177,2599,6.587,2600,5.177,2601,5.177,2602,5.177]],["title/modules.html",[220,3.046]],["body/modules.html",[45,0.02,133,0.02,134,0.02,164,3.929,219,3.929,220,3.595,231,3.595,383,3.318,1203,4.904,2603,5.752,2604,6.557,2605,5.752]],["title/overview.html",[804,3.046]],["body/overview.html",[2,1.766,45,0.023,133,0.018,134,0.018,136,1.937,137,1.487,167,1.487,173,1.758,176,1.758,178,1.86,182,1.758,184,1.758,186,1.661,188,1.661,190,1.86,192,1.758,195,1.758,198,1.661,201,1.661,203,1.661,206,1.758,207,1.487,209,1.758,211,1.661,214,1.661,218,3.296,219,5.144,220,3.016,221,3.296,222,4.114,223,3.016,224,4.114,225,3.646,226,4.114,227,4.114,228,4.114,229,4.114,230,4.114,231,3.994,232,3.994,233,3.686,234,3.191,235,5.039,236,2.585,306,2.784,321,3.646,443,2.255,479,1.989,596,3.016,804,3.016,1609,4.114,2345,4.114,2606,4.826,2607,4.826]],["title/properties.html",[26,0.523,2542,2.264]],["body/properties.html",[26,0.704,45,0.021,133,0.02,134,0.02,2567,4.94,2608,5.794]],["title/routes.html",[306,2.811]],["body/routes.html",[45,0.02,133,0.02,134,0.02,306,3.355]],["title/miscellaneous/variables.html",[2609,2.555,2610,3.669]],["body/miscellaneous/variables.html",[25,0.335,45,0.022,47,0.492,56,2.151,64,2.731,89,1.208,90,1.208,91,5.309,92,3.335,93,2.031,133,0.019,134,0.019,143,4.036,324,3.893,361,1.716,362,4.253,366,2.418,385,3.335,451,3.374,458,3.893,545,3.594,993,5.309,1235,5.309,1442,3.976,2118,3.976,2537,4.487,2539,4.487,2569,6.048,2582,5.655,2586,4.487,2609,4.487,2610,4.487,2611,5.263,2612,5.263,2613,6.855,2614,5.263,2615,6.227]]],"invertedIndex":[["",{"_index":45,"title":{},"body":{"injectables/AddContactService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"injectables/ContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScreenSizeService.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":568,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask-1.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["0.0.0",{"_index":2608,"title":{},"body":{"properties.html":{}}}],["0.1",{"_index":594,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["0.13.0",{"_index":2561,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":2389,"title":{},"body":{"components/SummaryComponent.html":{}}}],["0.25",{"_index":1078,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["0.2s",{"_index":2405,"title":{},"body":{"components/SummaryComponent.html":{}}}],["0.5s",{"_index":673,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/SignUpComponent.html":{}}}],["0.5vw",{"_index":636,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/SummaryComponent.html":{}}}],["0.75rem",{"_index":962,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["000000",{"_index":592,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{}}}],["007cee",{"_index":967,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{}}}],["02742",{"_index":1624,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["091931",{"_index":1201,"title":{},"body":{"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{}}}],["0px",{"_index":687,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsViewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["0vh",{"_index":973,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{}}}],["1",{"_index":479,"title":{"interfaces/Contact-1.html":{},"injectables/CustomDateParserFormatter-1.html":{},"interfaces/Subtask-1.html":{},"interfaces/User-1.html":{}},"body":{"components/ContactsAddComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{},"overview.html":{}}}],["1).touppercase",{"_index":925,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["1.25rem",{"_index":669,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/SignUpComponent.html":{}}}],["1.3rem",{"_index":957,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["1.5rem",{"_index":1410,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["1.5s",{"_index":2442,"title":{},"body":{"components/SummaryComponent.html":{}}}],["1.5vw",{"_index":1065,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["1/1",{"_index":2533,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":596,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"overview.html":{}}}],["100",{"_index":562,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{},"coverage.html":{}}}],["100px",{"_index":682,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{}}}],["100vh",{"_index":589,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["100vw",{"_index":587,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["1024px",{"_index":696,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"injectables/ScreenSizeService.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["1025px",{"_index":685,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SummaryComponent.html":{}}}],["10px",{"_index":976,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{}}}],["10vh",{"_index":600,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SummaryComponent.html":{}}}],["11",{"_index":608,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["110px",{"_index":2388,"title":{},"body":{"components/SummaryComponent.html":{}}}],["12",{"_index":2345,"title":{},"body":{"components/SummaryComponent.html":{},"overview.html":{}}}],["12/12",{"_index":2526,"title":{},"body":{"coverage.html":{}}}],["120px",{"_index":641,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{}}}],["12vh",{"_index":2426,"title":{},"body":{"components/SummaryComponent.html":{}}}],["13",{"_index":1280,"title":{},"body":{"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["13/13",{"_index":2532,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":577,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["15.1.2",{"_index":2553,"title":{},"body":{"dependencies.html":{}}}],["15/15",{"_index":2536,"title":{},"body":{"coverage.html":{}}}],["150px",{"_index":2423,"title":{},"body":{"components/SummaryComponent.html":{}}}],["15172536808",{"_index":1286,"title":{},"body":{"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["15px",{"_index":1089,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["15vh",{"_index":983,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/SummaryComponent.html":{}}}],["15vw",{"_index":1296,"title":{},"body":{"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{}}}],["16.1.0",{"_index":2544,"title":{},"body":{"dependencies.html":{}}}],["16.1.2",{"_index":2568,"title":{},"body":{"index.html":{}}}],["16.2.0",{"_index":2546,"title":{},"body":{"dependencies.html":{}}}],["16/16",{"_index":2534,"title":{},"body":{"coverage.html":{}}}],["16px",{"_index":620,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["17px",{"_index":1093,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["17vw",{"_index":690,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["18",{"_index":2606,"title":{},"body":{"overview.html":{}}}],["18/18",{"_index":2529,"title":{},"body":{"coverage.html":{}}}],["18px",{"_index":651,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["1].substring(0",{"_index":928,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["1px",{"_index":960,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["1rem",{"_index":1091,"title":{},"body":{"components/ContactsViewComponent.html":{},"components/SummaryComponent.html":{}}}],["1s",{"_index":2443,"title":{},"body":{"components/SummaryComponent.html":{}}}],["2",{"_index":1609,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"overview.html":{}}}],["2.11.6",{"_index":2555,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":2559,"title":{},"body":{"dependencies.html":{}}}],["2.5rem",{"_index":1083,"title":{},"body":{"components/ContactsViewComponent.html":{},"components/SummaryComponent.html":{}}}],["2/2",{"_index":2515,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":2518,"title":{},"body":{"coverage.html":{}}}],["20px",{"_index":664,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["20vh",{"_index":699,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["21",{"_index":1820,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["22/23",{"_index":2528,"title":{},"body":{"coverage.html":{}}}],["24px",{"_index":958,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["25",{"_index":1650,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["29abe2",{"_index":629,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["2a3647",{"_index":611,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["2px",{"_index":1253,"title":{},"body":{"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["2rem",{"_index":772,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{},"components/SummaryComponent.html":{}}}],["2s",{"_index":1413,"title":{},"body":{"components/LoginComponent.html":{},"components/SummaryComponent.html":{}}}],["3",{"_index":670,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SignUpComponent.html":{}}}],["3/3",{"_index":2516,"title":{},"body":{"coverage.html":{}}}],["30/33",{"_index":2522,"title":{},"body":{"coverage.html":{}}}],["3000",{"_index":558,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/SignUpComponent.html":{}}}],["30px",{"_index":603,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["30vh",{"_index":610,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{}}}],["30vw",{"_index":975,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["31vw",{"_index":2399,"title":{},"body":{"components/SummaryComponent.html":{}}}],["32px",{"_index":688,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["35vw",{"_index":686,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["38vw",{"_index":692,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["3px",{"_index":627,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["3s",{"_index":2436,"title":{},"body":{"components/SummaryComponent.html":{}}}],["3vw",{"_index":689,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["4",{"_index":1949,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["4/4",{"_index":2510,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":1409,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["401",{"_index":416,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["40px",{"_index":1090,"title":{},"body":{"components/ContactsViewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{}}}],["43/44",{"_index":2514,"title":{},"body":{"coverage.html":{}}}],["47/47",{"_index":2524,"title":{},"body":{"coverage.html":{}}}],["47vw",{"_index":2392,"title":{},"body":{"components/SummaryComponent.html":{}}}],["48px",{"_index":986,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SummaryComponent.html":{}}}],["49",{"_index":1285,"title":{},"body":{"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["4px",{"_index":955,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SummaryComponent.html":{}}}],["5",{"_index":1275,"title":{},"body":{"components/LegalNoticeComponent.html":{},"components/SummaryComponent.html":{}}}],["5.3.3",{"_index":2556,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":2535,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":605,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["500",{"_index":1262,"title":{},"body":{"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SummaryComponent.html":{}}}],["5000",{"_index":2340,"title":{},"body":{"components/SummaryComponent.html":{}}}],["50px",{"_index":683,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/FooterBarComponent.html":{}}}],["50vh",{"_index":644,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/SummaryComponent.html":{}}}],["512px",{"_index":697,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{}}}],["53/53",{"_index":2531,"title":{},"body":{"coverage.html":{}}}],["55vh",{"_index":1304,"title":{},"body":{"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{}}}],["55vw",{"_index":982,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/SummaryComponent.html":{}}}],["560px",{"_index":2429,"title":{},"body":{"components/SummaryComponent.html":{}}}],["56px",{"_index":952,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SignUpComponent.html":{}}}],["5px",{"_index":1248,"title":{},"body":{"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["5vh",{"_index":974,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["6",{"_index":1633,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["6.5.1",{"_index":2552,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":1391,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["60px",{"_index":642,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{}}}],["65vh",{"_index":2385,"title":{},"body":{"components/SummaryComponent.html":{}}}],["66",{"_index":2517,"title":{},"body":{"coverage.html":{}}}],["68",{"_index":1623,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["7.8.0",{"_index":2557,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":2509,"title":{},"body":{"coverage.html":{}}}],["700",{"_index":1066,"title":{},"body":{"components/ContactsViewComponent.html":{},"components/SummaryComponent.html":{}}}],["70vh",{"_index":988,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{}}}],["72px",{"_index":665,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/SignUpComponent.html":{}}}],["740px",{"_index":681,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{}}}],["8",{"_index":2607,"title":{},"body":{"overview.html":{}}}],["8/8",{"_index":2519,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":774,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["80px",{"_index":1060,"title":{},"body":{"components/ContactsViewComponent.html":{},"components/SummaryComponent.html":{}}}],["80vh",{"_index":598,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["80vw",{"_index":657,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{}}}],["82px",{"_index":776,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["85vw",{"_index":1261,"title":{},"body":{"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["87435",{"_index":1281,"title":{},"body":{"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["8px",{"_index":631,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SummaryComponent.html":{}}}],["9",{"_index":1738,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["9/9",{"_index":2525,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":667,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"coverage.html":{}}}],["90vh",{"_index":972,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/SummaryComponent.html":{}}}],["90vw",{"_index":599,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["95",{"_index":2527,"title":{},"body":{"coverage.html":{}}}],["96vw",{"_index":2395,"title":{},"body":{"components/SummaryComponent.html":{}}}],["97",{"_index":2513,"title":{},"body":{"coverage.html":{}}}],["9999",{"_index":1411,"title":{},"body":{"components/LoginComponent.html":{},"components/SummaryComponent.html":{}}}],["_blank",{"_index":2122,"title":{},"body":{"components/SidebarComponent.html":{}}}],["a.name.localecompare(b.name",{"_index":921,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["abgefragt",{"_index":1646,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["abgeschlossener",{"_index":1970,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["abgesehen",{"_index":1914,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["abs",{"_index":1634,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["abs&auml;tzen",{"_index":1767,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["abschnitt",{"_index":1511,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["absolute",{"_index":583,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["absätzen",{"_index":2023,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["abw&auml;gung",{"_index":1903,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["abwägung",{"_index":2051,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["accept",{"_index":2166,"title":{},"body":{"components/SignUpComponent.html":{}}}],["accepted",{"_index":2138,"title":{},"body":{"components/SignUpComponent.html":{}}}],["acceptsprivacypolicy",{"_index":2147,"title":{},"body":{"components/SignUpComponent.html":{}}}],["access",{"_index":327,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/LoginService.html":{}}}],["accessed",{"_index":356,"title":{},"body":{"guards/AuthGuard.html":{}}}],["accessing",{"_index":457,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{},"injectables/LoginService.html":{}}}],["activated",{"_index":349,"title":{},"body":{"guards/AuthGuard.html":{}}}],["activatedroute",{"_index":714,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{}}}],["activatedroutesnapshot",{"_index":343,"title":{},"body":{"guards/AuthGuard.html":{}}}],["active",{"_index":1146,"title":{},"body":{"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["activerouteicon",{"_index":1202,"title":{},"body":{"components/FooterBarComponent.html":{}}}],["activerouteiconsidebar",{"_index":1301,"title":{},"body":{"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{}}}],["actual_component",{"_index":217,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["add",{"_index":15,"title":{},"body":{"injectables/AddContactService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptorService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{},"index.html":{}}}],["add'},{'name",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["add.component",{"_index":279,"title":{},"body":{"modules/AppModule.html":{}}}],["add.component.html",{"_index":514,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["add.component.scss",{"_index":513,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["add.component.ts",{"_index":506,"title":{},"body":{"components/ContactsAddComponent.html":{},"coverage.html":{}}}],["add.component.ts:18",{"_index":544,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["add.component.ts:21",{"_index":546,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["add.component.ts:29",{"_index":529,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["add.component.ts:32",{"_index":523,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["add.component.ts:50",{"_index":541,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["add.component.ts:74",{"_index":533,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["add.component.ts:93",{"_index":531,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["add/contacts",{"_index":278,"title":{},"body":{"modules/AppModule.html":{},"components/ContactsAddComponent.html":{},"coverage.html":{}}}],["addcontact",{"_index":29,"title":{},"body":{"injectables/AddContactService.html":{}}}],["addcontact(contactdata",{"_index":50,"title":{},"body":{"injectables/AddContactService.html":{}}}],["addcontactsbackground",{"_index":581,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["addcontactscontentconatiner",{"_index":597,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{}}}],["addcontactservice",{"_index":1,"title":{"injectables/AddContactService.html":{}},"body":{"injectables/AddContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"coverage.html":{}}}],["addcontactsuccess",{"_index":515,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["addcontactsunderline",{"_index":625,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{}}}],["added",{"_index":392,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/ContactsAddComponent.html":{},"components/ContactsOverviewComponent.html":{},"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["addedcontactsuccesscontainer",{"_index":663,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{}}}],["addiconcontainer",{"_index":951,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["addicondesktop",{"_index":980,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["adding",{"_index":118,"title":{},"body":{"injectables/AddContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsOverviewComponent.html":{}}}],["address",{"_index":476,"title":{},"body":{"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"components/ContactsAddComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{}}}],["adds",{"_index":52,"title":{},"body":{"injectables/AddContactService.html":{},"interceptors/AuthInterceptor.html":{},"components/ContactsOverviewComponent.html":{},"injectables/CustomDateParserFormatter-1.html":{},"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["addtask",{"_index":316,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TaskService.html":{}}}],["addtask(task",{"_index":2249,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["addtaskcomponent",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adjust",{"_index":282,"title":{},"body":{"modules/AppModule.html":{},"injectables/ContactService.html":{}}}],["adressen",{"_index":1709,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["adresszeile",{"_index":1938,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["again",{"_index":1388,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["aktiviert",{"_index":1946,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["align",{"_index":614,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["alle",{"_index":1481,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["allein",{"_index":1703,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["allem",{"_index":1549,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["allen",{"_index":1962,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["allgemeine",{"_index":1461,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["alliconscontainer",{"_index":1303,"title":{},"body":{"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{}}}],["allowed",{"_index":363,"title":{},"body":{"guards/AuthGuard.html":{}}}],["allowing",{"_index":796,"title":{},"body":{"injectables/ContactsOverlayService.html":{}}}],["allows",{"_index":702,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["alpha",{"_index":593,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{}}}],["alphabetically",{"_index":806,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["als",{"_index":1932,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["analyse",{"_index":1568,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["anbieter",{"_index":1614,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["andere",{"_index":1535,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["anderen",{"_index":1705,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["anderweitiger",{"_index":1870,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["anfrage",{"_index":1957,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["anfrageformular",{"_index":1951,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["anfragen",{"_index":1931,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["angaben",{"_index":1273,"title":{},"body":{"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["angegebenen",{"_index":1954,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["angular",{"_index":337,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"injectables/ScreenSizeService.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["angular's",{"_index":1428,"title":{},"body":{"injectables/LoginService.html":{}}}],["angular/animations",{"_index":2543,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2545,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/drag",{"_index":291,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/cdk/layout",{"_index":2095,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["angular/common",{"_index":2547,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":97,"title":{},"body":{"injectables/AddContactService.html":{},"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":2548,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":96,"title":{},"body":{"injectables/AddContactService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/ContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScreenSizeService.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":243,"title":{},"body":{"modules/AppModule.html":{},"components/ContactsEditComponent.html":{},"components/SignUpComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":307,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{},"dependencies.html":{}}}],["animation",{"_index":671,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["anschliessend",{"_index":1856,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["anschlussfragen",{"_index":1958,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["api",{"_index":64,"title":{},"body":{"injectables/AddContactService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"miscellaneous/variables.html":{}}}],["apiurl",{"_index":458,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["app.component",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":157,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":136,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["application/json",{"_index":126,"title":{},"body":{"injectables/AddContactService.html":{},"injectables/UserRegistrationService.html":{}}}],["applied",{"_index":431,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["appmodule",{"_index":219,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appropriate",{"_index":1176,"title":{},"body":{"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["approutingmodule",{"_index":231,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["arbeiten",{"_index":1772,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["arbeitsplatzes",{"_index":1864,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["around",{"_index":662,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/FooterBarComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["array",{"_index":461,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/ContactsOverviewComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["art",{"_index":1632,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["artifacts",{"_index":2583,"title":{},"body":{"index.html":{}}}],["assigned",{"_index":2226,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["assigned_to",{"_index":2227,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["associated",{"_index":446,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["assumes",{"_index":1224,"title":{},"body":{"components/HeaderBarMobileComponent.html":{}}}],["assuming",{"_index":1234,"title":{},"body":{"components/HeaderBarMobileComponent.html":{}}}],["async",{"_index":2363,"title":{},"body":{"components/SummaryComponent.html":{}}}],["attempts",{"_index":1344,"title":{},"body":{"components/LoginComponent.html":{}}}],["au&szlig;erdem",{"_index":1587,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["auch",{"_index":1681,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["auf",{"_index":1458,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["aufbewahrungsfristen",{"_index":1730,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["aufenthalts",{"_index":1863,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["auffordern",{"_index":1968,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["aufgef&uuml;hrten",{"_index":1495,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["aufgeführten",{"_index":1982,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["aufsichts&shy;beh&ouml;rde",{"_index":1858,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["aufsichtsbeh&ouml;rde",{"_index":1604,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["aufsichtsbehörde",{"_index":1994,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["aufsichts­behörde",{"_index":2039,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["auftragsverarbeitern",{"_index":1794,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["auftragsverarbeitung",{"_index":1799,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["aufweisen",{"_index":1692,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["auml",{"_index":1711,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["aus",{"_index":1821,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["aus&uuml;bung",{"_index":1846,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ausdr&uuml;cklichen",{"_index":1743,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ausdrücklichen",{"_index":2015,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ausf&uuml;hrliche",{"_index":1487,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ausführliche",{"_index":1981,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["aush&auml;ndigen",{"_index":1880,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["aushändigen",{"_index":2046,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["auskunft",{"_index":1579,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ausschlie&szlig;lich",{"_index":1648,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ausschließlich",{"_index":2000,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ausübung",{"_index":2036,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["auth",{"_index":352,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/LoginService.html":{}}}],["auth.guard",{"_index":309,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["authenticated",{"_index":354,"title":{},"body":{"guards/AuthGuard.html":{}}}],["authentication",{"_index":21,"title":{},"body":{"injectables/AddContactService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/UserService.html":{}}}],["authguard",{"_index":308,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["authinterceptor",{"_index":232,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["authinterceptorservice",{"_index":413,"title":{"interceptors/AuthInterceptorService.html":{}},"body":{"interceptors/AuthInterceptorService.html":{},"coverage.html":{}}}],["authorization",{"_index":67,"title":{},"body":{"injectables/AddContactService.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/LoginService.html":{},"injectables/UserService.html":{}}}],["authreq",{"_index":409,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["authtoken",{"_index":404,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["auto",{"_index":949,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["automatically",{"_index":2574,"title":{},"body":{"index.html":{}}}],["automatisch",{"_index":1536,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["automatisiert",{"_index":1875,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["außerdem",{"_index":1989,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["available",{"_index":383,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/SummaryComponent.html":{},"modules.html":{}}}],["awaiting",{"_index":2377,"title":{},"body":{"components/SummaryComponent.html":{}}}],["b",{"_index":564,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["back",{"_index":1017,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["backend",{"_index":430,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["background",{"_index":590,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["bad",{"_index":2240,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["bar",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{},"coverage.html":{}}}],["bar'},{'name",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["bar.component",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["bar.component.html",{"_index":1150,"title":{},"body":{"components/FooterBarComponent.html":{}}}],["bar.component.scss",{"_index":1149,"title":{},"body":{"components/FooterBarComponent.html":{}}}],["bar.component.ts",{"_index":1144,"title":{},"body":{"components/FooterBarComponent.html":{},"coverage.html":{}}}],["bar.component.ts:17",{"_index":1180,"title":{},"body":{"components/FooterBarComponent.html":{}}}],["bar.component.ts:20",{"_index":1179,"title":{},"body":{"components/FooterBarComponent.html":{}}}],["bar.component.ts:23",{"_index":1178,"title":{},"body":{"components/FooterBarComponent.html":{}}}],["bar.component.ts:26",{"_index":1161,"title":{},"body":{"components/FooterBarComponent.html":{}}}],["bar.component.ts:40",{"_index":1168,"title":{},"body":{"components/FooterBarComponent.html":{}}}],["bar.component.ts:54",{"_index":1170,"title":{},"body":{"components/FooterBarComponent.html":{}}}],["bar.component.ts:66",{"_index":1175,"title":{},"body":{"components/FooterBarComponent.html":{}}}],["bar.component.ts:75",{"_index":1166,"title":{},"body":{"components/FooterBarComponent.html":{}}}],["bar.component.ts:81",{"_index":1167,"title":{},"body":{"components/FooterBarComponent.html":{}}}],["bar.component.ts:87",{"_index":1164,"title":{},"body":{"components/FooterBarComponent.html":{}}}],["bar.component.ts:93",{"_index":1165,"title":{},"body":{"components/FooterBarComponent.html":{}}}],["bar/footer",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"components/FooterBarComponent.html":{},"coverage.html":{}}}],["base",{"_index":92,"title":{},"body":{"injectables/AddContactService.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"miscellaneous/variables.html":{}}}],["based",{"_index":350,"title":{},"body":{"guards/AuthGuard.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/LoginComponent.html":{},"injectables/ScreenSizeService.html":{},"components/SidebarComponent.html":{},"components/SummaryComponent.html":{}}}],["baseurl",{"_index":28,"title":{},"body":{"injectables/AddContactService.html":{},"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["bdquo;hinweis",{"_index":1512,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["bdquo;http://&ldquo",{"_index":1940,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["bdquo;https://&ldquo",{"_index":1941,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["bearbeitung",{"_index":1956,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["before",{"_index":867,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["behandeln",{"_index":1671,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["behaviorsubject",{"_index":498,"title":{},"body":{"injectables/ContactService.html":{},"injectables/ContactsOverlayService.html":{},"injectables/UserService.html":{}}}],["behaviorsubject(false",{"_index":798,"title":{},"body":{"injectables/ContactsOverlayService.html":{}}}],["behaviorsubject(null",{"_index":496,"title":{},"body":{"injectables/ContactService.html":{},"injectables/UserService.html":{}}}],["behaviorsubject(storeduser",{"_index":2498,"title":{},"body":{"injectables/UserService.html":{}}}],["bei",{"_index":1602,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["beim",{"_index":1541,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["being",{"_index":355,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ContactService.html":{}}}],["beispiel",{"_index":1929,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ben&ouml;tigen",{"_index":1891,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["benutzen",{"_index":1676,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["benötigen",{"_index":2047,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ber",{"_index":1988,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["berblick",{"_index":1977,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["berechtigten",{"_index":1761,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["berechtigtes",{"_index":1638,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["bereits",{"_index":1807,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["bereitstellung",{"_index":1565,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["berichtigung",{"_index":1588,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["bermitteln",{"_index":2061,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["bermittlung",{"_index":2025,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["berprüfen",{"_index":2048,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["bertragung",{"_index":2016,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["beruht",{"_index":1832,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["berwiegen",{"_index":2035,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["beschwerde&shy;recht",{"_index":1857,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["beschwerderecht",{"_index":1601,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["beschwerde­recht",{"_index":2038,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["besondere",{"_index":1739,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["besonderen",{"_index":1817,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["besteht",{"_index":1868,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["bestellungen",{"_index":1930,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["bestimmten",{"_index":1594,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["bestimmungen",{"_index":1828,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["bestreiten",{"_index":1890,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["besuch",{"_index":1542,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["besuchen",{"_index":1478,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["betreffender",{"_index":1850,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["betreiben",{"_index":1849,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["betreiber",{"_index":1664,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["betreten",{"_index":1558,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["betriebssystem",{"_index":1552,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["betroffenen",{"_index":1834,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["better",{"_index":571,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{}}}],["between",{"_index":1249,"title":{},"body":{"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["bez&uuml;glich",{"_index":1575,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["bezüglich",{"_index":1987,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["bis",{"_index":1719,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["blank",{"_index":1336,"title":{},"body":{"components/LoginComponent.html":{}}}],["bleiben",{"_index":1972,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["bleibt",{"_index":1811,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["blick",{"_index":1460,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["block",{"_index":622,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["board",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["board'},{'name",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["board/board.component",{"_index":286,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["boardcomponent",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["boardicon",{"_index":1298,"title":{},"body":{"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{}}}],["boardtaskoverlaycomponent",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["body",{"_index":2161,"title":{},"body":{"components/SignUpComponent.html":{},"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["bold",{"_index":978,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SummaryComponent.html":{}}}],["boolean",{"_index":359,"title":{},"body":{"guards/AuthGuard.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/ScreenSizeService.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["bootstrap",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":263,"title":{},"body":{"modules/AppModule.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"dependencies.html":{}}}],["border",{"_index":601,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["bordernone",{"_index":1394,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["both",{"_index":2490,"title":{},"body":{"injectables/UserService.html":{}}}],["bottom",{"_index":626,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["bottomcontainercontacts",{"_index":643,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{}}}],["box",{"_index":1075,"title":{},"body":{"components/ContactsViewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["breakpointobserver",{"_index":2080,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["breakpoints",{"_index":2077,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["breakpoints.handset",{"_index":2084,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["breakpointstate",{"_index":2091,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["brigen",{"_index":2063,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["browse",{"_index":2604,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["browsers",{"_index":1939,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["browserzeile",{"_index":1945,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["btn",{"_index":1403,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["build",{"_index":2582,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["button",{"_index":2314,"title":{},"body":{"components/SummaryComponent.html":{}}}],["bypassing",{"_index":396,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["bzw",{"_index":1737,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["c",{"_index":1758,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["calc(1.175rem",{"_index":635,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/SummaryComponent.html":{}}}],["calc(1.375rem",{"_index":1087,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["calc(1.475rem",{"_index":2431,"title":{},"body":{"components/SummaryComponent.html":{}}}],["calc(1.4rem",{"_index":1064,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["calc(100",{"_index":650,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["calc(10vh",{"_index":953,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{}}}],["calc(12vh",{"_index":1092,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["calc(1rem",{"_index":1088,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["calculated",{"_index":2325,"title":{},"body":{"components/SummaryComponent.html":{}}}],["calculates",{"_index":2317,"title":{},"body":{"components/SummaryComponent.html":{}}}],["called",{"_index":1173,"title":{},"body":{"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["canactivate",{"_index":315,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["canactivate(route",{"_index":342,"title":{},"body":{"guards/AuthGuard.html":{}}}],["capabilities",{"_index":2598,"title":{},"body":{"index.html":{}}}],["cardcontainer",{"_index":2384,"title":{},"body":{"components/SummaryComponent.html":{}}}],["cardsfirstrow",{"_index":2396,"title":{},"body":{"components/SummaryComponent.html":{}}}],["cardsstyle",{"_index":2387,"title":{},"body":{"components/SummaryComponent.html":{}}}],["cardsthirdrow",{"_index":2400,"title":{},"body":{"components/SummaryComponent.html":{}}}],["case",{"_index":1432,"title":{},"body":{"injectables/LoginService.html":{}}}],["catcherror",{"_index":100,"title":{},"body":{"injectables/AddContactService.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/LoginService.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["catcherror(err",{"_index":436,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["catcherror(error",{"_index":115,"title":{},"body":{"injectables/AddContactService.html":{},"injectables/LoginService.html":{},"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{},"injectables/UserService.html":{}}}],["catcherror(this.handleerror",{"_index":2246,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["categories",{"_index":455,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["category",{"_index":442,"title":{"interfaces/Category.html":{}},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["categoryservice",{"_index":453,"title":{"injectables/CategoryService.html":{}},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"coverage.html":{}}}],["cdk",{"_index":2083,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["center",{"_index":616,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["chain",{"_index":390,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{}}}],["change",{"_index":2576,"title":{},"body":{"index.html":{}}}],["changes",{"_index":795,"title":{},"body":{"injectables/ContactsOverlayService.html":{},"components/ContactsViewComponent.html":{},"injectables/ScreenSizeService.html":{},"components/SidebarComponent.html":{}}}],["changes['contactid",{"_index":1038,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["changes['contactid'].currentvalue",{"_index":1039,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["check",{"_index":2601,"title":{},"body":{"index.html":{}}}],["checkboxcontainer",{"_index":1406,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["checkboxinput",{"_index":1407,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["checking",{"_index":2484,"title":{},"body":{"injectables/UserService.html":{}}}],["checks",{"_index":328,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/LoginService.html":{},"components/SignUpComponent.html":{}}}],["choice",{"_index":2594,"title":{},"body":{"index.html":{}}}],["circle",{"_index":2410,"title":{},"body":{"components/SummaryComponent.html":{}}}],["class",{"_index":107,"title":{},"body":{"injectables/AddContactService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/ContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScreenSizeService.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["clear",{"_index":2491,"title":{},"body":{"injectables/UserService.html":{}}}],["clearing",{"_index":1216,"title":{},"body":{"components/HeaderBarMobileComponent.html":{}}}],["clears",{"_index":1346,"title":{},"body":{"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["cli",{"_index":2566,"title":{},"body":{"index.html":{}}}],["clicked",{"_index":2315,"title":{},"body":{"components/SummaryComponent.html":{}}}],["clones",{"_index":406,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["close",{"_index":520,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{}}}],["closecomponent",{"_index":516,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["closecontactsview",{"_index":815,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["closed",{"_index":512,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{}}}],["closeeditcomponent",{"_index":706,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["closeiconcontainer",{"_index":621,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{}}}],["closeiconcontainerdesktop",{"_index":676,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["closes",{"_index":720,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{}}}],["cluster_appmodule",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":2211,"title":{},"body":{"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"index.html":{}}}],["color",{"_index":447,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["colorfont",{"_index":645,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{}}}],["column",{"_index":659,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["command",{"_index":2595,"title":{},"body":{"index.html":{}}}],["communicates",{"_index":2180,"title":{},"body":{"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{}}}],["communication",{"_index":471,"title":{},"body":{"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"injectables/LoginService.html":{}}}],["complete",{"_index":2067,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["completed",{"_index":2177,"title":{},"body":{"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["completes",{"_index":2201,"title":{},"body":{"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["completion",{"_index":2176,"title":{},"body":{"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["component",{"_index":135,"title":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["components",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{},"overview.html":{}}}],["configuration",{"_index":2615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["confirm",{"_index":2140,"title":{},"body":{"components/SignUpComponent.html":{}}}],["confirmpassword",{"_index":2146,"title":{},"body":{"components/SignUpComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["consistent",{"_index":1136,"title":{},"body":{"injectables/CustomDateParserFormatter-1.html":{}}}],["console",{"_index":2204,"title":{},"body":{"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{},"injectables/UserRegistrationService.html":{}}}],["console.error('an",{"_index":2236,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["console.error('attempted",{"_index":766,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{}}}],["console.error('contact",{"_index":761,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{}}}],["console.error('error",{"_index":116,"title":{},"body":{"injectables/AddContactService.html":{},"components/ContactsOverviewComponent.html":{},"injectables/LoginService.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"injectables/UserService.html":{}}}],["console.error('failed",{"_index":759,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{}}}],["console.error('invalid",{"_index":1372,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.error('login",{"_index":1374,"title":{},"body":{"components/LoginComponent.html":{},"injectables/LoginService.html":{}}}],["console.error('no",{"_index":1046,"title":{},"body":{"components/ContactsViewComponent.html":{},"injectables/UserService.html":{}}}],["console.error('privacy",{"_index":2165,"title":{},"body":{"components/SignUpComponent.html":{}}}],["console.error('there",{"_index":559,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/SignUpComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["console.error(`backend",{"_index":2237,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["console.error(`error",{"_index":128,"title":{},"body":{"injectables/AddContactService.html":{},"components/SignUpComponent.html":{}}}],["console.error(`failed",{"_index":765,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["console.error(err",{"_index":748,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["console.error(errormessage",{"_index":2213,"title":{},"body":{"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{}}}],["console.log('closing",{"_index":930,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["console.log('contact",{"_index":1047,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["console.log('no",{"_index":1369,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log(this.showoverlaysummary",{"_index":2331,"title":{},"body":{"components/SummaryComponent.html":{}}}],["const",{"_index":110,"title":{},"body":{"injectables/AddContactService.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"injectables/LoginService.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":35,"title":{},"body":{"injectables/AddContactService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/ScreenSizeService.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["constructor(addcontactservice",{"_index":522,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsOverviewComponent.html":{}}}],["constructor(breakpointobserver",{"_index":2079,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["constructor(http",{"_index":36,"title":{},"body":{"injectables/AddContactService.html":{},"injectables/CategoryService.html":{},"injectables/LoginService.html":{},"injectables/SubtaskService.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["constructor(loginservice",{"_index":1328,"title":{},"body":{"components/LoginComponent.html":{}}}],["constructor(private",{"_index":109,"title":{},"body":{"injectables/AddContactService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/FooterBarComponent.html":{},"injectables/LoginService.html":{},"injectables/ScreenSizeService.html":{},"components/SidebarComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["constructor(route",{"_index":713,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{}}}],["constructor(router",{"_index":333,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/SidebarComponent.html":{}}}],["constructor(userregistrationservice",{"_index":2133,"title":{},"body":{"components/SignUpComponent.html":{}}}],["constructor(userservice",{"_index":2296,"title":{},"body":{"components/SummaryComponent.html":{}}}],["contact",{"_index":11,"title":{"interfaces/Contact.html":{},"interfaces/Contact-1.html":{}},"body":{"injectables/AddContactService.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"injectables/ContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["contact's",{"_index":58,"title":{},"body":{"injectables/AddContactService.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{}}}],["contact.color",{"_index":917,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["contact.email",{"_index":944,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["contact.id",{"_index":941,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["contact.initials",{"_index":942,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["contact.name",{"_index":943,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["contact.name[0].touppercase",{"_index":915,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["contact.service",{"_index":550,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{}}}],["contact.service.ts",{"_index":7,"title":{},"body":{"injectables/AddContactService.html":{},"coverage.html":{}}}],["contact.service.ts:111",{"_index":84,"title":{},"body":{"injectables/AddContactService.html":{}}}],["contact.service.ts:19",{"_index":39,"title":{},"body":{"injectables/AddContactService.html":{}}}],["contact.service.ts:34",{"_index":51,"title":{},"body":{"injectables/AddContactService.html":{}}}],["contact.service.ts:49",{"_index":80,"title":{},"body":{"injectables/AddContactService.html":{}}}],["contact.service.ts:64",{"_index":65,"title":{},"body":{"injectables/AddContactService.html":{}}}],["contact.service.ts:78",{"_index":78,"title":{},"body":{"injectables/AddContactService.html":{}}}],["contact.service.ts:94",{"_index":73,"title":{},"body":{"injectables/AddContactService.html":{}}}],["contact?.email",{"_index":1050,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["contact?.name",{"_index":1049,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["contact?.phone",{"_index":1051,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["contactadded",{"_index":521,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsOverviewComponent.html":{}}}],["contactdata",{"_index":55,"title":{},"body":{"injectables/AddContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{}}}],["contactdeleted",{"_index":1004,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["contactedited",{"_index":712,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{}}}],["contactemail",{"_index":966,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["contactform",{"_index":738,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["contactid",{"_index":76,"title":{},"body":{"injectables/AddContactService.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{}}}],["contactitem",{"_index":963,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["contactitem:hover",{"_index":981,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["contactname",{"_index":965,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{}}}],["contactnameemailcontainer",{"_index":964,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["contacts",{"_index":19,"title":{},"body":{"injectables/AddContactService.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask-1.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["contacts.foreach(contact",{"_index":913,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["contacts/contacts",{"_index":273,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["contactsaddcomponent",{"_index":182,"title":{"components/ContactsAddComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contactsadddesktop",{"_index":969,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["contactsadddesktop:hover",{"_index":979,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["contactsbackarrow",{"_index":1054,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["contactscontainer",{"_index":945,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["contactscontent",{"_index":947,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["contactsdesktopcontainer",{"_index":970,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["contactsdesktopscreen",{"_index":968,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["contactsdividingline",{"_index":985,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{}}}],["contactseditcomponent",{"_index":184,"title":{"components/ContactsEditComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contactseditdeletedesktop",{"_index":1061,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["contactseditlink",{"_index":1084,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["contactseditlink:hover",{"_index":1085,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["contactsemail",{"_index":1069,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["contactsemailheadline",{"_index":1068,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["contactservice",{"_index":481,"title":{"injectables/ContactService.html":{}},"body":{"injectables/ContactService.html":{},"coverage.html":{}}}],["contactsinformation",{"_index":1067,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["contactsinformationcontainer",{"_index":1057,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["contactsinformationcontainersmall",{"_index":1080,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["contactsoverlayservice",{"_index":778,"title":{"injectables/ContactsOverlayService.html":{}},"body":{"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"coverage.html":{}}}],["contactsoverviewcomponent",{"_index":186,"title":{"components/ContactsOverviewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contactsphone",{"_index":1071,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["contactsphoneheadline",{"_index":1070,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["contactssmallheadline",{"_index":984,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{}}}],["contactsubject",{"_index":488,"title":{},"body":{"injectables/ContactService.html":{}}}],["contactsunderline",{"_index":1056,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["contactsviewcomponent",{"_index":188,"title":{"components/ContactsViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contactsviewcontainer",{"_index":1053,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["contactsviewcontent",{"_index":1055,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["contactsviewnotvisible",{"_index":810,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["contactsviewpage",{"_index":1052,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["contactupdated",{"_index":1005,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["containing",{"_index":57,"title":{},"body":{"injectables/AddContactService.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["contains",{"_index":1235,"title":{},"body":{"components/HeaderBarMobileComponent.html":{},"miscellaneous/variables.html":{}}}],["content",{"_index":125,"title":{},"body":{"injectables/AddContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["control",{"_index":887,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/SummaryComponent.html":{}}}],["controls",{"_index":895,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["converts",{"_index":1141,"title":{},"body":{"injectables/CustomDateParserFormatter-1.html":{}}}],["cookies",{"_index":1654,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["count",{"_index":2302,"title":{},"body":{"components/SummaryComponent.html":{}}}],["counts",{"_index":2300,"title":{},"body":{"components/SummaryComponent.html":{}}}],["counttasksbypriority",{"_index":2290,"title":{},"body":{"components/SummaryComponent.html":{}}}],["counttasksbypriority('urgent",{"_index":2369,"title":{},"body":{"components/SummaryComponent.html":{}}}],["counttasksbypriority(\\'urgent",{"_index":2446,"title":{},"body":{"components/SummaryComponent.html":{}}}],["counttasksbypriority(priority",{"_index":2298,"title":{},"body":{"components/SummaryComponent.html":{}}}],["counttasksbystatus",{"_index":2291,"title":{},"body":{"components/SummaryComponent.html":{}}}],["counttasksbystatus('awaitfeedback",{"_index":2376,"title":{},"body":{"components/SummaryComponent.html":{}}}],["counttasksbystatus('done",{"_index":2368,"title":{},"body":{"components/SummaryComponent.html":{}}}],["counttasksbystatus('inprogress",{"_index":2375,"title":{},"body":{"components/SummaryComponent.html":{}}}],["counttasksbystatus('todo",{"_index":2367,"title":{},"body":{"components/SummaryComponent.html":{}}}],["counttasksbystatus(\\'awaitfeedback",{"_index":2448,"title":{},"body":{"components/SummaryComponent.html":{}}}],["counttasksbystatus(\\'done",{"_index":2445,"title":{},"body":{"components/SummaryComponent.html":{}}}],["counttasksbystatus(\\'inprogress",{"_index":2447,"title":{},"body":{"components/SummaryComponent.html":{}}}],["counttasksbystatus(\\'todo",{"_index":2444,"title":{},"body":{"components/SummaryComponent.html":{}}}],["counttasksbystatus(status",{"_index":2304,"title":{},"body":{"components/SummaryComponent.html":{}}}],["coverage",{"_index":2506,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":579,"title":{},"body":{"components/ContactsAddComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["createauthorizationheader",{"_index":30,"title":{},"body":{"injectables/AddContactService.html":{}}}],["created",{"_index":580,"title":{},"body":{"components/ContactsAddComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["creates",{"_index":66,"title":{},"body":{"injectables/AddContactService.html":{},"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{}}}],["createsubtask",{"_index":2269,"title":{},"body":{"injectables/SubtaskService.html":{}}}],["createsubtask(subtask",{"_index":2189,"title":{},"body":{"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{}}}],["creating",{"_index":2192,"title":{},"body":{"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{}}}],["creator",{"_index":2231,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["credentials",{"_index":1311,"title":{},"body":{"components/LoginComponent.html":{}}}],["current",{"_index":357,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ContactService.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/SidebarComponent.html":{},"components/SummaryComponent.html":{},"injectables/UserService.html":{}}}],["currentdate",{"_index":2286,"title":{},"body":{"components/SummaryComponent.html":{}}}],["currently",{"_index":500,"title":{},"body":{"injectables/ContactService.html":{},"components/ContactsOverviewComponent.html":{},"injectables/LoginService.html":{},"components/SidebarComponent.html":{},"components/SummaryComponent.html":{}}}],["currentuser",{"_index":2287,"title":{},"body":{"components/SummaryComponent.html":{}}}],["currentuser?.name",{"_index":2364,"title":{},"body":{"components/SummaryComponent.html":{}}}],["currentusersubject",{"_index":2479,"title":{},"body":{"injectables/UserService.html":{}}}],["cursor",{"_index":623,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["custom",{"_index":266,"title":{},"body":{"modules/AppModule.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"injectables/ScreenSizeService.html":{}}}],["customdateparserformatter",{"_index":265,"title":{"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{}},"body":{"modules/AppModule.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"coverage.html":{}}}],["d&uuml;rfen",{"_index":1912,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["d1d1d1",{"_index":639,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/SummaryComponent.html":{}}}],["dabei",{"_index":1777,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["dadurch",{"_index":1520,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["dann",{"_index":1781,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["dar&uuml;ber",{"_index":1468,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["daran",{"_index":1937,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["darauf",{"_index":1685,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["dark",{"_index":536,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["darstellung",{"_index":1643,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["darüber",{"_index":1978,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["das",{"_index":1547,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["dass",{"_index":1522,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["data",{"_index":12,"title":{},"body":{"injectables/AddContactService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/PrivacyPolicyComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["date",{"_index":1096,"title":{},"body":{"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"interfaces/Subtask-1.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["date().gettime",{"_index":2354,"title":{},"body":{"components/SummaryComponent.html":{}}}],["date(nearesttask.due_date!).gettime",{"_index":2359,"title":{},"body":{"components/SummaryComponent.html":{}}}],["date(task.due_date!).gettime",{"_index":2362,"title":{},"body":{"components/SummaryComponent.html":{}}}],["date.month",{"_index":1124,"title":{},"body":{"injectables/CustomDateParserFormatter.html":{}}}],["daten",{"_index":1472,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["daten&shy;&uuml;bertrag&shy;barkeit",{"_index":1874,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["daten&uuml;bertragung",{"_index":1687,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["datenerfassung",{"_index":1497,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["datenerhebung",{"_index":1816,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["datenkategorien",{"_index":1740,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["datenschutz",{"_index":1457,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["datenschutz&shy;erkl&auml;rung",{"_index":1456,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["datenschutzerkl&auml;rung",{"_index":1496,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["datenschutzerklärung",{"_index":1983,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["datenschutzvorschriften",{"_index":1675,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["datenschutz­erklärung",{"_index":1976,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["datenspeicherung",{"_index":1969,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["datenverarbeitung",{"_index":1503,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["datenverarbeitungsvorg&auml;nge",{"_index":1806,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["datenverarbeitungsvorgänge",{"_index":2028,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["datenweitergabe",{"_index":1791,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["daten­übertrag­barkeit",{"_index":2044,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["datenübertragung",{"_index":2005,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["dateparser",{"_index":267,"title":{},"body":{"modules/AppModule.html":{},"injectables/CustomDateParserFormatter-1.html":{},"coverage.html":{}}}],["dateparts",{"_index":1115,"title":{},"body":{"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{}}}],["dateparts.length",{"_index":1117,"title":{},"body":{"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{}}}],["dates",{"_index":1126,"title":{},"body":{"injectables/CustomDateParserFormatter-1.html":{}}}],["dauer",{"_index":1895,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["day",{"_index":1122,"title":{},"body":{"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"components/SummaryComponent.html":{}}}],["dd",{"_index":1104,"title":{},"body":{"injectables/CustomDateParserFormatter.html":{}}}],["dd/mm/yyyy",{"_index":1127,"title":{},"body":{"injectables/CustomDateParserFormatter-1.html":{}}}],["deadline",{"_index":2373,"title":{},"body":{"components/SummaryComponent.html":{}}}],["declarations",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decoration",{"_index":1255,"title":{},"body":{"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["default",{"_index":89,"title":{},"body":{"injectables/AddContactService.html":{},"components/AppComponent.html":{},"injectables/CategoryService.html":{},"injectables/ContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/ScreenSizeService.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":2086,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["defined",{"_index":38,"title":{},"body":{"injectables/AddContactService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/CategoryService.html":{},"injectables/ContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/ScreenSizeService.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["delay",{"_index":2437,"title":{},"body":{"components/SummaryComponent.html":{}}}],["delete",{"_index":18,"title":{},"body":{"injectables/AddContactService.html":{},"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["deletebutton",{"_index":775,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["deletecontact",{"_index":31,"title":{},"body":{"injectables/AddContactService.html":{},"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{}}}],["deletecontact(contactid",{"_index":71,"title":{},"body":{"injectables/AddContactService.html":{}}}],["deleted",{"_index":1013,"title":{},"body":{"components/ContactsViewComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["deletes",{"_index":74,"title":{},"body":{"injectables/AddContactService.html":{},"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["deletesavecontainer",{"_index":773,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["deletesubtask",{"_index":2270,"title":{},"body":{"injectables/SubtaskService.html":{}}}],["deletesubtask(id",{"_index":2202,"title":{},"body":{"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{}}}],["deletetask",{"_index":2449,"title":{},"body":{"injectables/TaskService.html":{}}}],["deletetask(id",{"_index":2267,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["deleting",{"_index":130,"title":{},"body":{"injectables/AddContactService.html":{},"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{}}}],["deletion",{"_index":1016,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["dem",{"_index":1510,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["den",{"_index":1506,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["denen",{"_index":1482,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["denn",{"_index":1837,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["dependencies",{"_index":221,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["der",{"_index":1543,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["derartiger",{"_index":1851,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["deren",{"_index":1887,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["derived",{"_index":478,"title":{},"body":{"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{}}}],["des",{"_index":1554,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["description",{"_index":8,"title":{},"body":{"injectables/AddContactService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"injectables/ContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScreenSizeService.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["desktop",{"_index":858,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["dessen",{"_index":1508,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["detail",{"_index":852,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["detail/:id",{"_index":317,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["detailed",{"_index":990,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["details",{"_index":701,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["detect",{"_index":2074,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["detecting",{"_index":831,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["determine",{"_index":1177,"title":{},"body":{"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["determines",{"_index":347,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["dev",{"_index":2572,"title":{},"body":{"index.html":{}}}],["development",{"_index":2569,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["device",{"_index":893,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["devices",{"_index":2076,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["die",{"_index":1463,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["dient",{"_index":1844,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["dies",{"_index":1784,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["diese",{"_index":1476,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["diesem",{"_index":1494,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["dieser",{"_index":1498,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["difference",{"_index":2361,"title":{},"body":{"components/SummaryComponent.html":{}}}],["digit",{"_index":1138,"title":{},"body":{"injectables/CustomDateParserFormatter-1.html":{}}}],["digits",{"_index":578,"title":{},"body":{"components/ContactsAddComponent.html":{},"injectables/CustomDateParserFormatter-1.html":{}}}],["direction",{"_index":658,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["directive",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["directives",{"_index":216,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":2581,"title":{},"body":{"index.html":{}}}],["directly",{"_index":1338,"title":{},"body":{"components/LoginComponent.html":{}}}],["directory",{"_index":2585,"title":{},"body":{"index.html":{}}}],["direkte",{"_index":1882,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["direktwerbung",{"_index":1819,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["disclosures",{"_index":1266,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["display",{"_index":475,"title":{},"body":{"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["displayed",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/SummaryComponent.html":{}}}],["displayerrormessage",{"_index":1321,"title":{},"body":{"components/LoginComponent.html":{}}}],["displaying",{"_index":803,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/HeaderBarMobileComponent.html":{}}}],["displays",{"_index":861,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SummaryComponent.html":{}}}],["dist",{"_index":2584,"title":{},"body":{"index.html":{}}}],["dist/join2.0_angular/assets/models/contact.model.ts",{"_index":480,"title":{},"body":{"interfaces/Contact-1.html":{},"coverage.html":{}}}],["dist/join2.0_angular/assets/models/user.model.ts",{"_index":2460,"title":{},"body":{"interfaces/User-1.html":{},"coverage.html":{}}}],["documentation",{"_index":2507,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["done",{"_index":2230,"title":{},"body":{"interfaces/Subtask-1.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["dort",{"_index":1953,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["dragdropmodule",{"_index":290,"title":{},"body":{"modules/AppModule.html":{}}}],["dritte",{"_index":1694,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["dritten",{"_index":1876,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["drittstaaten",{"_index":1746,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["drop",{"_index":292,"title":{},"body":{"modules/AppModule.html":{}}}],["dropdown",{"_index":1228,"title":{},"body":{"components/HeaderBarMobileComponent.html":{},"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["dropup",{"_index":1073,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["dsgvo",{"_index":1637,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["due",{"_index":2218,"title":{},"body":{"interfaces/Subtask-1.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["due_date",{"_index":2224,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["durch",{"_index":1505,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["durchf&uuml;hrung",{"_index":1751,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["durchführung",{"_index":2019,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["during",{"_index":2182,"title":{},"body":{"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{},"injectables/UserRegistrationService.html":{}}}],["dynamic",{"_index":2549,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":2323,"title":{},"body":{"components/SummaryComponent.html":{}}}],["dürfen",{"_index":2053,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["dürr",{"_index":1278,"title":{},"body":{"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["e",{"_index":1287,"title":{},"body":{"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["e.g",{"_index":373,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interfaces/Subtask-1.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["e2e",{"_index":2592,"title":{},"body":{"index.html":{}}}],["each",{"_index":23,"title":{},"body":{"injectables/AddContactService.html":{},"interceptors/AuthInterceptor.html":{},"components/ContactsOverviewComponent.html":{}}}],["ease",{"_index":674,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["edit",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["edit'},{'name",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["edit.component",{"_index":281,"title":{},"body":{"modules/AppModule.html":{}}}],["edit.component.html",{"_index":705,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["edit.component.scss",{"_index":704,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["edit.component.ts",{"_index":700,"title":{},"body":{"components/ContactsEditComponent.html":{},"coverage.html":{}}}],["edit.component.ts:111",{"_index":721,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["edit.component.ts:130",{"_index":719,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["edit.component.ts:20",{"_index":716,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["edit.component.ts:23",{"_index":739,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["edit.component.ts:26",{"_index":718,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["edit.component.ts:29",{"_index":715,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["edit.component.ts:48",{"_index":731,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["edit.component.ts:57",{"_index":727,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["edit.component.ts:75",{"_index":726,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["edit.component.ts:90",{"_index":736,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["edit/contacts",{"_index":280,"title":{},"body":{"modules/AppModule.html":{},"components/ContactsEditComponent.html":{},"coverage.html":{}}}],["editcontactsbackground",{"_index":769,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["edited",{"_index":483,"title":{},"body":{"injectables/ContactService.html":{},"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{}}}],["editing",{"_index":487,"title":{},"body":{"injectables/ContactService.html":{},"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{}}}],["edittaskcomponent",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["effektiven",{"_index":1965,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ein",{"_index":1532,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["eine",{"_index":1563,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["einem",{"_index":1877,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["einen",{"_index":1459,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["einer",{"_index":1640,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["eines",{"_index":1796,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["einfachen",{"_index":1466,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["eingeben",{"_index":1534,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["eingegebenen",{"_index":1967,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["eingelegt",{"_index":1901,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["eingeschr&auml;nkt",{"_index":1911,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["eingeschränkt",{"_index":2052,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["eingewilligt",{"_index":1735,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["einlegen",{"_index":1833,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["einsatz",{"_index":1793,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["einschl&auml;gigen",{"_index":1766,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["einschlägigen",{"_index":2022,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["einschr&auml;nkung",{"_index":1596,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["einschränkung",{"_index":1992,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["einwilligung",{"_index":1540,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["einzelfall",{"_index":1765,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["einzulegen",{"_index":1826,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["element",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["email",{"_index":472,"title":{},"body":{"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/SignUpComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"injectables/UserRegistrationService.html":{}}}],["emits",{"_index":62,"title":{},"body":{"injectables/AddContactService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/ContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{},"injectables/ScreenSizeService.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{}}}],["emitted",{"_index":528,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{}}}],["emitting",{"_index":2486,"title":{},"body":{"injectables/UserService.html":{}}}],["empf&auml;nger",{"_index":1582,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["empfänger",{"_index":1769,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["empty",{"_index":866,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{}}}],["end",{"_index":693,"title":{},"body":{"components/ContactsAddComponent.html":{},"index.html":{}}}],["endger&auml;t",{"_index":1657,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["endgerät",{"_index":2001,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["endpoint",{"_index":1442,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UserRegistrationService.html":{},"miscellaneous/variables.html":{}}}],["endpoints",{"_index":94,"title":{},"body":{"injectables/AddContactService.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["ensure",{"_index":2196,"title":{},"body":{"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{}}}],["ensuring",{"_index":2253,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["enter",{"_index":575,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["entered",{"_index":1354,"title":{},"body":{"components/LoginComponent.html":{}}}],["entf&auml;llt",{"_index":1720,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["entfällt",{"_index":2010,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["entnehmen",{"_index":1491,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["entry",{"_index":146,"title":{},"body":{"components/AppComponent.html":{}}}],["entscheidet",{"_index":1712,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["entsprechend",{"_index":1673,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["entsprechende",{"_index":1645,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["environment",{"_index":451,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl",{"_index":2234,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["environment.apiurl}/categories",{"_index":459,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["environment.apiurl}/subtasks",{"_index":2183,"title":{},"body":{"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{}}}],["erf&uuml;llung",{"_index":1755,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["erfassen",{"_index":1517,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["erfasst",{"_index":1546,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["erfassung",{"_index":1556,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["erfolgen",{"_index":1763,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["erfolgt",{"_index":1504,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["erfolgten",{"_index":1810,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["erforderlich",{"_index":1754,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["erfüllung",{"_index":2021,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ergeben",{"_index":1824,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["erhalten",{"_index":1586,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["erheben",{"_index":1680,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["erhoben",{"_index":1521,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["erkennen",{"_index":1936,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["erl&auml;utert",{"_index":1679,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["erlaubt",{"_index":1792,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["erläutert",{"_index":2004,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ernst",{"_index":1670,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["err",{"_index":437,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"components/ContactsEditComponent.html":{}}}],["err.status",{"_index":439,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["error",{"_index":119,"title":{},"body":{"injectables/AddContactService.html":{},"interceptors/AuthInterceptorService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["error('error",{"_index":2193,"title":{},"body":{"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{}}}],["error.error",{"_index":2162,"title":{},"body":{"components/SignUpComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["error.error.message",{"_index":2210,"title":{},"body":{"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{}}}],["error.message",{"_index":2164,"title":{},"body":{"components/SignUpComponent.html":{},"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{}}}],["error.status",{"_index":2163,"title":{},"body":{"components/SignUpComponent.html":{},"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["error.status}\\nmessage",{"_index":2212,"title":{},"body":{"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{}}}],["errorevent",{"_index":2209,"title":{},"body":{"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{}}}],["errormessage",{"_index":2207,"title":{},"body":{"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{}}}],["errors",{"_index":424,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{}}}],["erteilt",{"_index":1591,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["erteilte",{"_index":1808,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["es",{"_index":1527,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["essential",{"_index":469,"title":{},"body":{"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{}}}],["europ&auml;ischen",{"_index":1919,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["europäischen",{"_index":2056,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["evenly",{"_index":1306,"title":{},"body":{"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SummaryComponent.html":{}}}],["event",{"_index":391,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{},"components/SummaryComponent.html":{}}}],["eventemitter",{"_index":527,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{}}}],["events",{"_index":510,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["except",{"_index":370,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["excluded",{"_index":371,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["excludedurls",{"_index":395,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["excludedurls.some(url",{"_index":399,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["excludes",{"_index":384,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["execute",{"_index":2590,"title":{},"body":{"index.html":{}}}],["existing",{"_index":86,"title":{},"body":{"injectables/AddContactService.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{}}}],["export",{"_index":106,"title":{},"body":{"injectables/AddContactService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"injectables/ContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScreenSizeService.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["extends",{"_index":1105,"title":{},"body":{"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{}}}],["external",{"_index":2101,"title":{},"body":{"components/SidebarComponent.html":{}}}],["externe",{"_index":1782,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["externen",{"_index":1774,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["f",{"_index":1636,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["f&auml;llen",{"_index":1818,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["f&uuml;r",{"_index":1502,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["f6f7f8",{"_index":946,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SummaryComponent.html":{}}}],["fabian",{"_index":1277,"title":{},"body":{"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["fabianduerr&#64;web.de",{"_index":1289,"title":{},"body":{"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["fabianduerr@web.de",{"_index":1309,"title":{},"body":{"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["failed",{"_index":1375,"title":{},"body":{"components/LoginComponent.html":{}}}],["fails",{"_index":1020,"title":{},"body":{"components/ContactsViewComponent.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["failure",{"_index":419,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"components/ContactsEditComponent.html":{}}}],["fall",{"_index":1732,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["falle",{"_index":1742,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["false",{"_index":366,"title":{},"body":{"guards/AuthGuard.html":{},"components/ContactsAddComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":1062,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["feedback",{"_index":2378,"title":{},"body":{"components/SummaryComponent.html":{}}}],["fehlerfreie",{"_index":1564,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ferner",{"_index":1759,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["feststeht",{"_index":1909,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["fetch",{"_index":16,"title":{},"body":{"injectables/AddContactService.html":{}}}],["fetchcontactdetails",{"_index":998,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["fetchcontactdetails(contactid",{"_index":1018,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["fetchcurrentuser",{"_index":2481,"title":{},"body":{"injectables/UserService.html":{}}}],["fetches",{"_index":79,"title":{},"body":{"injectables/AddContactService.html":{},"components/ContactsViewComponent.html":{},"injectables/UserService.html":{}}}],["fetching",{"_index":122,"title":{},"body":{"injectables/AddContactService.html":{},"components/ContactsViewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"injectables/LoginService.html":{},"injectables/UserService.html":{}}}],["ffentlichen",{"_index":2055,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ffffff",{"_index":612,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["field",{"_index":1352,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["fields",{"_index":1335,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/AddContactService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"injectables/ContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScreenSizeService.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["files",{"_index":2577,"title":{},"body":{"index.html":{}}}],["fill",{"_index":2411,"title":{},"body":{"components/SummaryComponent.html":{}}}],["filter",{"_index":2301,"title":{},"body":{"components/SummaryComponent.html":{}}}],["filteredtasks",{"_index":2348,"title":{},"body":{"components/SummaryComponent.html":{}}}],["filteredtasks.length",{"_index":2350,"title":{},"body":{"components/SummaryComponent.html":{}}}],["final",{"_index":429,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["find",{"_index":839,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["findcontactbyid",{"_index":816,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["findcontactbyid(contactid",{"_index":834,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["findnearestduedate",{"_index":2292,"title":{},"body":{"components/SummaryComponent.html":{}}}],["finds",{"_index":836,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/SummaryComponent.html":{}}}],["fingerprinting",{"_index":1659,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["first",{"_index":843,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"index.html":{}}}],["firstletter",{"_index":914,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["firstrow",{"_index":2390,"title":{},"body":{"components/SummaryComponent.html":{}}}],["fixed",{"_index":604,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["flag",{"_index":545,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["flags",{"_index":1172,"title":{},"body":{"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["flex",{"_index":613,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["folgendem",{"_index":1613,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["folgenden",{"_index":1464,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["font",{"_index":633,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["footer",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["footerbar",{"_index":1198,"title":{},"body":{"components/FooterBarComponent.html":{}}}],["footerbarcomponent",{"_index":192,"title":{"components/FooterBarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["footercomponent",{"_index":971,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/SummaryComponent.html":{}}}],["footercontainer",{"_index":1401,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["form",{"_index":508,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/SignUpComponent.html":{}}}],["format",{"_index":538,"title":{},"body":{"components/ContactsAddComponent.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"components/PrivacyPolicyComponent.html":{}}}],["format(date",{"_index":1107,"title":{},"body":{"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{}}}],["formats",{"_index":1110,"title":{},"body":{"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{}}}],["formatted",{"_index":1111,"title":{},"body":{"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{}}}],["formatter",{"_index":268,"title":{},"body":{"modules/AppModule.html":{}}}],["formatter.service.ts",{"_index":1098,"title":{},"body":{"injectables/CustomDateParserFormatter.html":{},"coverage.html":{}}}],["formatter.service.ts:18",{"_index":1113,"title":{},"body":{"injectables/CustomDateParserFormatter.html":{}}}],["formatter.service.ts:38",{"_index":1109,"title":{},"body":{"injectables/CustomDateParserFormatter.html":{}}}],["formatter.ts",{"_index":1125,"title":{},"body":{"injectables/CustomDateParserFormatter-1.html":{},"coverage.html":{}}}],["formatter.ts:18",{"_index":1140,"title":{},"body":{"injectables/CustomDateParserFormatter-1.html":{}}}],["formatter.ts:38",{"_index":1129,"title":{},"body":{"injectables/CustomDateParserFormatter-1.html":{}}}],["formatter.ts:48",{"_index":1131,"title":{},"body":{"injectables/CustomDateParserFormatter-1.html":{}}}],["formatting",{"_index":1100,"title":{},"body":{"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{}}}],["formbuilder",{"_index":2151,"title":{},"body":{"components/SignUpComponent.html":{}}}],["formcontainer",{"_index":1395,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["formcontaineraddcontacts",{"_index":660,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{}}}],["formgroup",{"_index":2150,"title":{},"body":{"components/SignUpComponent.html":{}}}],["forminput",{"_index":1396,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["forminputcontacsname",{"_index":646,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{}}}],["forminputcontacsphone",{"_index":654,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{}}}],["forminputcontactsmail",{"_index":652,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{}}}],["forminputname",{"_index":2169,"title":{},"body":{"components/SignUpComponent.html":{}}}],["forminputpassword",{"_index":1397,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["formsmodule",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["fortawesome/fontawesome",{"_index":2550,"title":{},"body":{"dependencies.html":{}}}],["fortfall",{"_index":1733,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["forwards",{"_index":675,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["found",{"_index":332,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/ContactsOverviewComponent.html":{},"injectables/UserService.html":{}}}],["fragen",{"_index":1607,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["free",{"_index":2551,"title":{},"body":{"dependencies.html":{}}}],["freiheiten",{"_index":1842,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["friedersdorf",{"_index":1625,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["full",{"_index":313,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"components/ContactsOverviewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{}}}],["functionality",{"_index":2066,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["further",{"_index":2468,"title":{},"body":{"injectables/UserRegistrationService.html":{},"index.html":{}}}],["fällen",{"_index":2031,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["für",{"_index":1984,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["g",{"_index":563,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["g&auml;ngigen",{"_index":1878,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["g&uuml;ltigen",{"_index":1797,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["geben",{"_index":1465,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gegen",{"_index":1815,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gel&ouml;scht",{"_index":1724,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["geltend",{"_index":1722,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["geltenden",{"_index":1885,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["geltendmachung",{"_index":1845,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gelöscht",{"_index":2012,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gem",{"_index":1274,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["gemeinsam",{"_index":1704,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gemeinsame",{"_index":1802,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gemeinsamen",{"_index":1800,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["genannt",{"_index":1717,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["generate",{"_index":2579,"title":{},"body":{"index.html":{}}}],["generated",{"_index":2565,"title":{},"body":{"index.html":{}}}],["generategreeting",{"_index":2293,"title":{},"body":{"components/SummaryComponent.html":{}}}],["generategreeting(user",{"_index":2307,"title":{},"body":{"components/SummaryComponent.html":{}}}],["generaterandomdarkcolor",{"_index":517,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["generates",{"_index":534,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/SummaryComponent.html":{}}}],["generic",{"_index":2235,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["gerichteten",{"_index":1966,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gerichtlicher",{"_index":1872,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gesch&auml;ftst&auml;tigkeit",{"_index":1771,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["geschah/geschieht",{"_index":1898,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["geschieht",{"_index":1683,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["geschlossen",{"_index":1803,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["geschäftstätigkeit",{"_index":2024,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gesetzlich",{"_index":1785,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gesetzliche",{"_index":1971,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gesetzlichen",{"_index":1674,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gespeichert",{"_index":1959,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gespeicherten",{"_index":1585,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gest&uuml;tztes",{"_index":1829,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gestütztes",{"_index":2033,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["getcategories",{"_index":463,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["getcontactbyid",{"_index":32,"title":{},"body":{"injectables/AddContactService.html":{}}}],["getcontactbyid(contactid",{"_index":77,"title":{},"body":{"injectables/AddContactService.html":{}}}],["getcontacts",{"_index":33,"title":{},"body":{"injectables/AddContactService.html":{}}}],["getcontacttoedit",{"_index":489,"title":{},"body":{"injectables/ContactService.html":{}}}],["getcurrentuser",{"_index":2335,"title":{},"body":{"components/SummaryComponent.html":{},"injectables/UserService.html":{}}}],["getinitials",{"_index":707,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{}}}],["getinitials(contact.name",{"_index":767,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["getinitials(contact?.name",{"_index":1048,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["getinitials(name",{"_index":724,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{}}}],["getoverlayvisibility",{"_index":786,"title":{},"body":{"injectables/ContactsOverlayService.html":{}}}],["getprotecteddata",{"_index":1425,"title":{},"body":{"injectables/LoginService.html":{}}}],["getsortedletters",{"_index":817,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["getsubtask",{"_index":2271,"title":{},"body":{"injectables/SubtaskService.html":{}}}],["getsubtask(id",{"_index":2187,"title":{},"body":{"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{}}}],["getsubtasks",{"_index":2184,"title":{},"body":{"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{}}}],["gettask",{"_index":2450,"title":{},"body":{"injectables/TaskService.html":{}}}],["gettask(id",{"_index":2247,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["gettasks",{"_index":2243,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["getting",{"_index":2562,"title":{"index.html":{}},"body":{}}],["gew&auml;hrleisten",{"_index":1567,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gew&ouml;hnlichen",{"_index":1862,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gewährleisten",{"_index":1986,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gewöhnlichen",{"_index":2041,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ggf",{"_index":1888,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gilt",{"_index":1827,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["glance",{"_index":2366,"title":{},"body":{"components/SummaryComponent.html":{}}}],["go",{"_index":2600,"title":{},"body":{"index.html":{}}}],["gobacktocontacts",{"_index":999,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["good",{"_index":2311,"title":{},"body":{"components/SummaryComponent.html":{}}}],["gotoaddtask",{"_index":1155,"title":{},"body":{"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["gotoboard",{"_index":1156,"title":{},"body":{"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["gotoboardsummary",{"_index":2294,"title":{},"body":{"components/SummaryComponent.html":{}}}],["gotocontactdetails",{"_index":818,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["gotocontactdetails(contactid",{"_index":850,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["gotocontacts",{"_index":1157,"title":{},"body":{"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["gotodesktopcontactdetails",{"_index":819,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["gotodesktopcontactdetails(contactid",{"_index":855,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["gotolegal",{"_index":2105,"title":{},"body":{"components/SidebarComponent.html":{}}}],["gotologin",{"_index":1322,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["gotopolicy",{"_index":2106,"title":{},"body":{"components/SidebarComponent.html":{}}}],["gotosignup",{"_index":1323,"title":{},"body":{"components/LoginComponent.html":{}}}],["gotosummary",{"_index":1158,"title":{},"body":{"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/SidebarComponent.html":{}}}],["gr&uuml;nde",{"_index":1727,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gr&uuml;nden",{"_index":1822,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["graph",{"_index":2605,"title":{},"body":{"modules.html":{}}}],["greeting",{"_index":2282,"title":{},"body":{"components/SummaryComponent.html":{}}}],["greetingcontainer",{"_index":2430,"title":{},"body":{"components/SummaryComponent.html":{}}}],["greetingcontainergreeting",{"_index":2433,"title":{},"body":{"components/SummaryComponent.html":{}}}],["greetingcontainergreetingoverlay",{"_index":2438,"title":{},"body":{"components/SummaryComponent.html":{}}}],["greetingcontainername",{"_index":2434,"title":{},"body":{"components/SummaryComponent.html":{}}}],["greetingcontainernameoverlay",{"_index":2439,"title":{},"body":{"components/SummaryComponent.html":{}}}],["greetingnamecontainer",{"_index":2432,"title":{},"body":{"components/SummaryComponent.html":{}}}],["greetingnamecontaineroverlay",{"_index":2440,"title":{},"body":{"components/SummaryComponent.html":{}}}],["group",{"_index":849,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["groupcontactsbyfirstletter",{"_index":820,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["groupcontactsbyfirstletter(contacts",{"_index":862,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["grouped",{"_index":838,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["groupedcontacts",{"_index":811,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["groups",{"_index":805,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["grundlage",{"_index":1631,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gründe",{"_index":2014,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gründen",{"_index":2032,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["guard",{"_index":321,"title":{"guards/AuthGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":322,"title":{},"body":{"guards/AuthGuard.html":{}}}],["guest",{"_index":1314,"title":{},"body":{"components/LoginComponent.html":{}}}],["guest@guest.com",{"_index":1378,"title":{},"body":{"components/LoginComponent.html":{}}}],["guestlogin",{"_index":1324,"title":{},"body":{"components/LoginComponent.html":{}}}],["gängigen",{"_index":2045,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gültigen",{"_index":2027,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["h1",{"_index":1086,"title":{},"body":{"components/ContactsViewComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["h58",{"_index":1393,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["haben",{"_index":1574,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["handeln",{"_index":1531,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["handelsrechtliche",{"_index":1729,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["handle",{"_index":2135,"title":{},"body":{"components/SignUpComponent.html":{}}}],["handleerror",{"_index":2272,"title":{},"body":{"injectables/SubtaskService.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{}}}],["handleerror(error",{"_index":2206,"title":{},"body":{"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{}}}],["handler",{"_index":389,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{}}}],["handles",{"_index":423,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{}}}],["handling",{"_index":830,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{}}}],["handset",{"_index":877,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"injectables/ScreenSizeService.html":{}}}],["handsetortabletbreakpoints",{"_index":2078,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["happened",{"_index":2241,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["haubenschloßstr",{"_index":1279,"title":{},"body":{"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["hauptstra&szlig;e",{"_index":1622,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["hauptstraße",{"_index":1997,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["header",{"_index":22,"title":{},"body":{"injectables/AddContactService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["headerbarmobilecomponent",{"_index":195,"title":{"components/HeaderBarMobileComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["headercontainer",{"_index":1247,"title":{},"body":{"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["headerdesktopcontactsview",{"_index":1081,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["headers",{"_index":111,"title":{},"body":{"injectables/AddContactService.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/LoginService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["headertext",{"_index":1260,"title":{},"body":{"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["headlinecontactoverview",{"_index":956,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["headlinecontainer",{"_index":1389,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["headlinescontainer",{"_index":2381,"title":{},"body":{"components/SummaryComponent.html":{}}}],["headlineunderline",{"_index":959,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["height",{"_index":588,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["hello",{"_index":2344,"title":{},"body":{"components/SummaryComponent.html":{}}}],["help",{"_index":2599,"title":{},"body":{"index.html":{}}}],["herkunft",{"_index":1581,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["hex",{"_index":537,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["hex.length",{"_index":567,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["hidden",{"_index":1082,"title":{},"body":{"components/ContactsViewComponent.html":{},"components/LoginComponent.html":{},"components/SummaryComponent.html":{}}}],["hierbei",{"_index":1525,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["hierzu",{"_index":1605,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["high",{"_index":2221,"title":{},"body":{"interfaces/Subtask-1.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["highlighting",{"_index":1145,"title":{},"body":{"components/FooterBarComponent.html":{}}}],["highlights",{"_index":2099,"title":{},"body":{"components/SidebarComponent.html":{}}}],["hin",{"_index":1686,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["hinweis",{"_index":1697,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["hinweise",{"_index":1462,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["hold",{"_index":2149,"title":{},"body":{"components/SignUpComponent.html":{},"injectables/UserService.html":{}}}],["holding",{"_index":740,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["holds",{"_index":499,"title":{},"body":{"injectables/ContactService.html":{},"injectables/ContactsOverlayService.html":{}}}],["hosten",{"_index":1611,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["hosting",{"_index":1610,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["hour",{"_index":2342,"title":{},"body":{"components/SummaryComponent.html":{}}}],["hoverdone",{"_index":2403,"title":{},"body":{"components/SummaryComponent.html":{}}}],["hoverdone:hover",{"_index":2407,"title":{},"body":{"components/SummaryComponent.html":{}}}],["hoverfootericons:hover",{"_index":1200,"title":{},"body":{"components/FooterBarComponent.html":{}}}],["hoversidebaricons:hover",{"_index":1300,"title":{},"body":{"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{}}}],["hoverthirdrow",{"_index":2420,"title":{},"body":{"components/SummaryComponent.html":{}}}],["hoverthirdrow:hover",{"_index":2421,"title":{},"body":{"components/SummaryComponent.html":{}}}],["hovertodo",{"_index":2413,"title":{},"body":{"components/SummaryComponent.html":{}}}],["hovertodo:hover",{"_index":2414,"title":{},"body":{"components/SummaryComponent.html":{}}}],["hoverurgent",{"_index":2416,"title":{},"body":{"components/SummaryComponent.html":{}}}],["hoverurgent:hover",{"_index":2417,"title":{},"body":{"components/SummaryComponent.html":{}}}],["html",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["http",{"_index":42,"title":{},"body":{"injectables/AddContactService.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["http://http://127.0.0.1:4200",{"_index":2573,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":270,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":37,"title":{},"body":{"injectables/AddContactService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["httpclientmodule",{"_index":269,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":432,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["httpevent",{"_index":393,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{}}}],["httphandler",{"_index":379,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{}}}],["httpheaders",{"_index":70,"title":{},"body":{"injectables/AddContactService.html":{},"injectables/LoginService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["httpinterceptor",{"_index":394,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{}}}],["httprequest",{"_index":377,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{}}}],["https",{"_index":2060,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["https://all",{"_index":1628,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["https://join.server.fabianduerr.com",{"_index":91,"title":{},"body":{"injectables/AddContactService.html":{},"miscellaneous/variables.html":{}}}],["https://join.server.fabianduerr.com/login",{"_index":1440,"title":{},"body":{"injectables/LoginService.html":{}}}],["https://join.server.fabianduerr.com/protected",{"_index":1443,"title":{},"body":{"injectables/LoginService.html":{}}}],["https://join.server.fabianduerr.com/signup",{"_index":2474,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["https://join.server.fabianduerr.com/user/details",{"_index":2492,"title":{},"body":{"injectables/UserService.html":{}}}],["https://www.e",{"_index":1291,"title":{},"body":{"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["iconcontainerfooter",{"_index":1199,"title":{},"body":{"components/FooterBarComponent.html":{}}}],["iconcontainerheader",{"_index":1250,"title":{},"body":{"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["iconcontainersidebar",{"_index":1297,"title":{},"body":{"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{}}}],["iconlandscape",{"_index":2427,"title":{},"body":{"components/SummaryComponent.html":{}}}],["icontext",{"_index":1299,"title":{},"body":{"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{}}}],["id",{"_index":75,"title":{},"body":{"injectables/AddContactService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{}}}],["identification",{"_index":470,"title":{},"body":{"interfaces/Contact.html":{},"interfaces/Contact-1.html":{}}}],["identifier",{"_index":450,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"coverage.html":{}}}],["identifiziert",{"_index":1484,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["identifying",{"_index":2075,"title":{},"body":{"injectables/ScreenSizeService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{}}}],["ids",{"_index":2225,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["ihnen",{"_index":1600,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ihr",{"_index":1747,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ihre",{"_index":1519,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ihren",{"_index":1470,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ihrer",{"_index":1539,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ihres",{"_index":1569,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["im",{"_index":1656,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["image",{"_index":647,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["implements",{"_index":364,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/SidebarComponent.html":{},"components/SummaryComponent.html":{},"index.html":{}}}],["import",{"_index":95,"title":{},"body":{"injectables/AddContactService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/ContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScreenSizeService.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["important",{"_index":637,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["imports",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["impressum",{"_index":1272,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["imprint/legal",{"_index":296,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["imprint/privacy",{"_index":293,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["imprintcontainer",{"_index":1305,"title":{},"body":{"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{}}}],["imprintlink",{"_index":1307,"title":{},"body":{"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{}}}],["imprintlink:hover",{"_index":1308,"title":{},"body":{"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{}}}],["include",{"_index":382,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/ContactsEditComponent.html":{}}}],["includes",{"_index":20,"title":{},"body":{"injectables/AddContactService.html":{},"components/SidebarComponent.html":{},"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["including",{"_index":1430,"title":{},"body":{"injectables/LoginService.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{},"injectables/UserService.html":{}}}],["incomplete",{"_index":762,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["incorrect",{"_index":1333,"title":{},"body":{"components/LoginComponent.html":{}}}],["index",{"_index":25,"title":{"index.html":{}},"body":{"injectables/AddContactService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"injectables/ContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/PrivacyPolicyComponent.html":{},"injectables/ScreenSizeService.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["indicate",{"_index":892,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["indicates",{"_index":2118,"title":{},"body":{"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"miscellaneous/variables.html":{}}}],["indicating",{"_index":361,"title":{},"body":{"guards/AuthGuard.html":{},"components/ContactsAddComponent.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/LoginComponent.html":{},"injectables/ScreenSizeService.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/AddContactService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"injectables/ContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScreenSizeService.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["information",{"_index":59,"title":{},"body":{"injectables/AddContactService.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"injectables/UserService.html":{}}}],["informationen",{"_index":1488,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["informiert",{"_index":1768,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["inh",{"_index":1620,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["inhalte",{"_index":1612,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["initial",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{}}}],["initializes",{"_index":732,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/SidebarComponent.html":{},"components/SummaryComponent.html":{},"injectables/UserService.html":{}}}],["initials",{"_index":473,"title":{},"body":{"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["initialscircle",{"_index":961,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["initialscirclecontactedit",{"_index":771,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["initialscirclecontactview",{"_index":1059,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["initialscontainer",{"_index":1252,"title":{},"body":{"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["inject",{"_index":40,"title":{},"body":{"injectables/AddContactService.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"injectables/ScreenSizeService.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{}}}],["injectable",{"_index":0,"title":{"injectables/AddContactService.html":{},"injectables/CategoryService.html":{},"injectables/ContactService.html":{},"injectables/ContactsOverlayService.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"injectables/LoginService.html":{},"injectables/ScreenSizeService.html":{},"injectables/SubtaskService.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AddContactService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/ContactService.html":{},"injectables/ContactsOverlayService.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"injectables/LoginService.html":{},"injectables/ScreenSizeService.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/AddContactService.html":{},"injectables/CategoryService.html":{},"injectables/ContactService.html":{},"injectables/ContactsOverlayService.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"injectables/LoginService.html":{},"injectables/ScreenSizeService.html":{},"injectables/SubtaskService.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injects",{"_index":336,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/LoginService.html":{},"components/SidebarComponent.html":{}}}],["inkl",{"_index":1615,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["inkl.com",{"_index":1616,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["inkl.com/datenschutzinformationen",{"_index":1629,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["inklusive",{"_index":1952,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["innerhalb",{"_index":1714,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["input",{"_index":717,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{},"components/LoginComponent.html":{}}}],["inputcontainer",{"_index":656,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["inputfield",{"_index":1392,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["inputs",{"_index":711,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{}}}],["insbesondere",{"_index":1860,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["inset",{"_index":1257,"title":{},"body":{"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["instance",{"_index":49,"title":{},"body":{"injectables/AddContactService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{}}}],["instanceof",{"_index":438,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{}}}],["interbold",{"_index":1063,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["intercept",{"_index":374,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{}}}],["intercept(req",{"_index":376,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["intercept(request",{"_index":421,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["intercepted",{"_index":428,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["interceptor",{"_index":367,"title":{"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{}},"body":{"interceptors/AuthInterceptorService.html":{},"coverage.html":{}}}],["interceptor.service.ts",{"_index":415,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"coverage.html":{}}}],["interceptor.service.ts:20",{"_index":417,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["interceptor.service.ts:37",{"_index":422,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["interceptors",{"_index":368,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{}}}],["intercepts",{"_index":381,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{}}}],["interesse",{"_index":1639,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["interessen",{"_index":1841,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["interesses",{"_index":1762,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["interface",{"_index":441,"title":{"interfaces/Category.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{}},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"coverage.html":{}}}],["interfaces",{"_index":443,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"overview.html":{}}}],["internal",{"_index":1033,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["internet",{"_index":1688,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["internetbrowser",{"_index":1551,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["intitialscontactnamecontainer",{"_index":1058,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["intitialseditcontactcontainer",{"_index":770,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["introductory",{"_index":2326,"title":{},"body":{"components/SummaryComponent.html":{}}}],["isaddtaskpage",{"_index":1151,"title":{},"body":{"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["isboardpage",{"_index":1152,"title":{},"body":{"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["iscontactspage",{"_index":1153,"title":{},"body":{"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["isdropdownopen",{"_index":1209,"title":{},"body":{"components/HeaderBarMobileComponent.html":{}}}],["ishandsetortablet",{"_index":812,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"injectables/ScreenSizeService.html":{}}}],["isloggedin",{"_index":1426,"title":{},"body":{"injectables/LoginService.html":{}}}],["isnan(contactid",{"_index":935,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["isoverlayvisiblecontactsview",{"_index":1003,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["ispasswordwrong",{"_index":1317,"title":{},"body":{"components/LoginComponent.html":{}}}],["issummarypage",{"_index":1154,"title":{},"body":{"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["ist",{"_index":1500,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["isusernamewrong",{"_index":1318,"title":{},"body":{"components/LoginComponent.html":{}}}],["isvisible",{"_index":791,"title":{},"body":{"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{}}}],["it's",{"_index":741,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["items",{"_index":615,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["jederzeit",{"_index":1576,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["jedoch",{"_index":1900,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["jeweilige",{"_index":1831,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["jeweils",{"_index":1764,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["join",{"_index":569,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{},"components/LoginComponent.html":{},"components/SummaryComponent.html":{}}}],["join2.0_angular",{"_index":161,"title":{},"body":{"components/AppComponent.html":{}}}],["join20angular",{"_index":2564,"title":{},"body":{"index.html":{}}}],["json.parse(localstorage.getitem('user_details",{"_index":2496,"title":{},"body":{"injectables/UserService.html":{}}}],["json.stringify(user",{"_index":2505,"title":{},"body":{"injectables/UserService.html":{}}}],["juristische",{"_index":1701,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["juristischen",{"_index":1916,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["justify",{"_index":640,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["k&ouml;nnen",{"_index":1486,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["kanban",{"_index":1243,"title":{},"body":{"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["kann",{"_index":1526,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["karma",{"_index":2591,"title":{},"body":{"index.html":{}}}],["keine",{"_index":1715,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["kempten",{"_index":1282,"title":{},"body":{"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["key",{"_index":900,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/FooterBarComponent.html":{},"components/SummaryComponent.html":{}}}],["keyframes",{"_index":1417,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["kommunikation",{"_index":1689,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["kontakt",{"_index":1283,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["kontaktdaten",{"_index":1509,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["kontaktformular",{"_index":1533,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["kunden",{"_index":1795,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["können",{"_index":1980,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["l!9nbqy.3v",{"_index":1380,"title":{},"body":{"components/LoginComponent.html":{}}}],["l&ouml;schersuchen",{"_index":1721,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["l&ouml;schung",{"_index":1589,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["l&uuml;ckenloser",{"_index":1693,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["landscape",{"_index":695,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["larger",{"_index":878,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["lassen",{"_index":1881,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["last",{"_index":845,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["later",{"_index":2242,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["layout",{"_index":152,"title":{},"body":{"components/AppComponent.html":{}}}],["leading",{"_index":1132,"title":{},"body":{"injectables/CustomDateParserFormatter-1.html":{}}}],["left",{"_index":584,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["legal",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["legalnoticecomponent",{"_index":198,"title":{"components/LegalNoticeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["legalnoticecontainer",{"_index":1293,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["legalnoticecontent",{"_index":1295,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["legend",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{},"overview.html":{}}}],["less",{"_index":1135,"title":{},"body":{"injectables/CustomDateParserFormatter-1.html":{}}}],["letter",{"_index":844,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["letters",{"_index":848,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["letztgenannten",{"_index":1731,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["level",{"_index":2220,"title":{},"body":{"interfaces/Subtask-1.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["link",{"_index":1258,"title":{},"body":{"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SignUpComponent.html":{}}}],["link:hover",{"_index":1259,"title":{},"body":{"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["linkcontainer",{"_index":1256,"title":{},"body":{"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SignUpComponent.html":{}}}],["linkcontainercontactview",{"_index":1074,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["links",{"_index":2102,"title":{},"body":{"components/SidebarComponent.html":{}}}],["list",{"_index":82,"title":{},"body":{"injectables/AddContactService.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{}}}],["lit",{"_index":1635,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["literal",{"_index":888,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["load",{"_index":730,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{}}}],["loadcontact",{"_index":708,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["loadcontacts",{"_index":821,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["loading",{"_index":733,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/SummaryComponent.html":{}}}],["loads",{"_index":728,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/SummaryComponent.html":{}}}],["loadstoredcontactdetails",{"_index":822,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["loadtasks",{"_index":2295,"title":{},"body":{"components/SummaryComponent.html":{}}}],["local",{"_index":1218,"title":{},"body":{"components/HeaderBarMobileComponent.html":{},"injectables/LoginService.html":{},"injectables/UserService.html":{}}}],["localstorage",{"_index":403,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/LoginComponent.html":{}}}],["localstorage.getitem('auth_token",{"_index":123,"title":{},"body":{"injectables/AddContactService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/LoginService.html":{},"injectables/UserService.html":{}}}],["localstorage.getitem('token",{"_index":433,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["localstorage.getitem('user_details",{"_index":2495,"title":{},"body":{"injectables/UserService.html":{}}}],["localstorage.removeitem('auth_token",{"_index":1239,"title":{},"body":{"components/HeaderBarMobileComponent.html":{},"injectables/LoginService.html":{}}}],["localstorage.removeitem('user_details",{"_index":1241,"title":{},"body":{"components/HeaderBarMobileComponent.html":{},"injectables/UserService.html":{}}}],["localstorage.setitem('auth_token",{"_index":1384,"title":{},"body":{"components/LoginComponent.html":{},"injectables/LoginService.html":{}}}],["localstorage.setitem('user_details",{"_index":2504,"title":{},"body":{"injectables/UserService.html":{}}}],["log",{"_index":1246,"title":{},"body":{"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{}}}],["logged",{"_index":1434,"title":{},"body":{"injectables/LoginService.html":{},"components/SummaryComponent.html":{}}}],["logging",{"_index":1339,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["login",{"_index":311,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/SignUpComponent.html":{}}}],["login'},{'name",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["login(email",{"_index":1436,"title":{},"body":{"injectables/LoginService.html":{}}}],["login.component.html",{"_index":1316,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":1315,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.component",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["logincomponent",{"_index":201,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logincontainer",{"_index":1398,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["loginservice",{"_index":1329,"title":{"injectables/LoginService.html":{}},"body":{"components/LoginComponent.html":{},"injectables/LoginService.html":{},"coverage.html":{}}}],["loginurl",{"_index":1423,"title":{},"body":{"injectables/LoginService.html":{}}}],["logo",{"_index":1251,"title":{},"body":{"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["logocontainer",{"_index":1302,"title":{},"body":{"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{}}}],["logocontainermobile",{"_index":1399,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["logomove",{"_index":1415,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":1206,"title":{},"body":{"components/HeaderBarMobileComponent.html":{},"injectables/LoginService.html":{}}}],["logs",{"_index":1215,"title":{},"body":{"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/UserRegistrationService.html":{}}}],["longdate",{"_index":2371,"title":{},"body":{"components/SummaryComponent.html":{}}}],["low",{"_index":2223,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["löschersuchen",{"_index":2011,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["löschung",{"_index":1990,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["lückenloser",{"_index":2007,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["m&ouml;glich",{"_index":1696,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["m&ouml;glichst",{"_index":1641,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["m&uuml;nnich",{"_index":1619,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ma&szlig;nahmen",{"_index":1753,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["machbar",{"_index":1884,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["machen",{"_index":1723,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["mail",{"_index":1288,"title":{},"body":{"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["main",{"_index":145,"title":{},"body":{"components/AppComponent.html":{}}}],["maincontainer",{"_index":1400,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["making",{"_index":41,"title":{},"body":{"injectables/AddContactService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["manage",{"_index":1032,"title":{},"body":{"components/ContactsViewComponent.html":{},"components/SummaryComponent.html":{}}}],["management",{"_index":525,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["manages",{"_index":507,"title":{},"body":{"components/ContactsAddComponent.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Subtask-1.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["managing",{"_index":10,"title":{},"body":{"injectables/AddContactService.html":{},"injectables/ContactService.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{}}}],["mandatory",{"_index":742,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["map",{"_index":2096,"title":{},"body":{"injectables/ScreenSizeService.html":{},"components/SummaryComponent.html":{}}}],["map(n",{"_index":750,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{}}}],["map(x",{"_index":565,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["margin",{"_index":950,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["maschinenlesbaren",{"_index":1879,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["match",{"_index":2141,"title":{},"body":{"components/SignUpComponent.html":{}}}],["matches",{"_index":2094,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["matching",{"_index":134,"title":{},"body":{"injectables/AddContactService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"injectables/ContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScreenSizeService.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["math.abs(new",{"_index":2358,"title":{},"body":{"components/SummaryComponent.html":{}}}],["math.floor(math.random",{"_index":561,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["max",{"_index":680,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"injectables/ScreenSizeService.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["maßnahmen",{"_index":2020,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["media",{"_index":678,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["medien",{"_index":1618,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["medium",{"_index":2222,"title":{},"body":{"interfaces/Subtask-1.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["mehr",{"_index":1835,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["menu",{"_index":1229,"title":{},"body":{"components/HeaderBarMobileComponent.html":{}}}],["message",{"_index":1332,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["messages",{"_index":1313,"title":{},"body":{"components/LoginComponent.html":{}}}],["metadata",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["methods",{"_index":14,"title":{},"body":{"injectables/AddContactService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/CategoryService.html":{},"injectables/ContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["metrics",{"_index":2365,"title":{},"body":{"components/SummaryComponent.html":{}}}],["min",{"_index":684,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SummaryComponent.html":{}}}],["min(1024px",{"_index":2386,"title":{},"body":{"components/SummaryComponent.html":{}}}],["min(120px",{"_index":630,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{},"components/SummaryComponent.html":{}}}],["min(168px",{"_index":2398,"title":{},"body":{"components/SummaryComponent.html":{}}}],["min(264px",{"_index":2391,"title":{},"body":{"components/SummaryComponent.html":{}}}],["min(560px",{"_index":2394,"title":{},"body":{"components/SummaryComponent.html":{}}}],["min(652px",{"_index":666,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["mindifference",{"_index":2357,"title":{},"body":{"components/SummaryComponent.html":{}}}],["miscellaneous",{"_index":2609,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mit",{"_index":1469,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["mitgelesen",{"_index":1948,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["mitgliedstaat",{"_index":1861,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["mitgliedstaats",{"_index":1921,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["mitteilen",{"_index":1524,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["mittel",{"_index":1707,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["mm",{"_index":1103,"title":{},"body":{"injectables/CustomDateParserFormatter.html":{}}}],["mobile",{"_index":853,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/HeaderBarMobileComponent.html":{}}}],["mobile'},{'name",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["mobile.component",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["mobile.component.html",{"_index":1208,"title":{},"body":{"components/HeaderBarMobileComponent.html":{}}}],["mobile.component.scss",{"_index":1207,"title":{},"body":{"components/HeaderBarMobileComponent.html":{}}}],["mobile.component.ts",{"_index":1205,"title":{},"body":{"components/HeaderBarMobileComponent.html":{},"coverage.html":{}}}],["mobile.component.ts:19",{"_index":1230,"title":{},"body":{"components/HeaderBarMobileComponent.html":{}}}],["mobile.component.ts:22",{"_index":1212,"title":{},"body":{"components/HeaderBarMobileComponent.html":{}}}],["mobile.component.ts:40",{"_index":1222,"title":{},"body":{"components/HeaderBarMobileComponent.html":{}}}],["mobile.component.ts:51",{"_index":1226,"title":{},"body":{"components/HeaderBarMobileComponent.html":{}}}],["mobile.component.ts:60",{"_index":1214,"title":{},"body":{"components/HeaderBarMobileComponent.html":{}}}],["mobile.component.ts:70",{"_index":1213,"title":{},"body":{"components/HeaderBarMobileComponent.html":{}}}],["mobile/header",{"_index":256,"title":{},"body":{"modules/AppModule.html":{},"components/HeaderBarMobileComponent.html":{},"coverage.html":{}}}],["mode",{"_index":2614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["model",{"_index":547,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{},"components/HeaderBarMobileComponent.html":{}}}],["modification",{"_index":408,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["module",{"_index":218,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":220,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["monitoring",{"_index":1162,"title":{},"body":{"components/FooterBarComponent.html":{},"injectables/ScreenSizeService.html":{},"components/SidebarComponent.html":{}}}],["month",{"_index":1120,"title":{},"body":{"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{}}}],["more",{"_index":2219,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"index.html":{}}}],["moreiconcontainer",{"_index":1072,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["morning",{"_index":2312,"title":{},"body":{"components/SummaryComponent.html":{}}}],["multi",{"_index":301,"title":{},"body":{"modules/AppModule.html":{}}}],["muss",{"_index":1902,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["mutma&szlig;lichen",{"_index":1866,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["mutmaßlichen",{"_index":2042,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["möglich",{"_index":2008,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["möglichst",{"_index":1998,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["münnich",{"_index":1995,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["n[0",{"_index":751,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{}}}],["nach",{"_index":1538,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["nachfolgend",{"_index":1626,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["nachweisen",{"_index":1840,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["name",{"_index":46,"title":{},"body":{"injectables/AddContactService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"injectables/ContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScreenSizeService.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["name.split",{"_index":923,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["namen",{"_index":1708,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["names",{"_index":922,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["names.length",{"_index":926,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["names[0].substring(0",{"_index":924,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["names[names.length",{"_index":927,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["nan",{"_index":936,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["nat&uuml;rliche",{"_index":1700,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["nat&uuml;rlichen",{"_index":1915,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["natürliche",{"_index":2009,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["natürlichen",{"_index":2054,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["navigate",{"_index":420,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"components/ContactsOverviewComponent.html":{},"components/SignUpComponent.html":{},"index.html":{}}}],["navigates",{"_index":723,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["navigating",{"_index":1221,"title":{},"body":{"components/HeaderBarMobileComponent.html":{}}}],["navigation",{"_index":338,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["navigationend",{"_index":1181,"title":{},"body":{"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{},"components/SummaryComponent.html":{}}}],["ndash",{"_index":1913,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["nearest",{"_index":2283,"title":{},"body":{"components/SummaryComponent.html":{}}}],["nearestduedate",{"_index":2288,"title":{},"body":{"components/SummaryComponent.html":{}}}],["nearesttask",{"_index":2355,"title":{},"body":{"components/SummaryComponent.html":{}}}],["necessary",{"_index":502,"title":{},"body":{"injectables/ContactService.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/LoginComponent.html":{},"components/SummaryComponent.html":{}}}],["need",{"_index":2596,"title":{},"body":{"index.html":{}}}],["needed",{"_index":284,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/CustomDateParserFormatter-1.html":{}}}],["nehmen",{"_index":1666,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["neue",{"_index":1617,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["new",{"_index":53,"title":{},"body":{"injectables/AddContactService.html":{},"injectables/ContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"injectables/LoginService.html":{},"components/SidebarComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":378,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["next.handle(authreq",{"_index":412,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["next.handle(req",{"_index":401,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["next.handle(request).pipe",{"_index":435,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["ng",{"_index":262,"title":{},"body":{"modules/AppModule.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"dependencies.html":{},"index.html":{}}}],["ngbdateparserformatter",{"_index":261,"title":{},"body":{"modules/AppModule.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{}}}],["ngbdatepicker",{"_index":1101,"title":{},"body":{"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{}}}],["ngbdatepickermodule",{"_index":264,"title":{},"body":{"modules/AppModule.html":{}}}],["ngbdatestruct",{"_index":1108,"title":{},"body":{"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{}}}],["ngbmodule",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["ngform",{"_index":735,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["ngmodule",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngonchanges",{"_index":1000,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["ngonchanges(changes",{"_index":1024,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["ngoninit",{"_index":709,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/SidebarComponent.html":{},"components/SummaryComponent.html":{}}}],["nicht",{"_index":1695,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["noch",{"_index":1908,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["none",{"_index":331,"title":{},"body":{"guards/AuthGuard.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["notice",{"_index":318,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{}}}],["notice'},{'name",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["notice.component",{"_index":298,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["notice.component.html",{"_index":1271,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["notice.component.scss",{"_index":1270,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["notice.component.ts",{"_index":1264,"title":{},"body":{"components/LegalNoticeComponent.html":{},"coverage.html":{}}}],["notice/legal",{"_index":297,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/LegalNoticeComponent.html":{},"coverage.html":{}}}],["notification",{"_index":2469,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["notjoin",{"_index":1408,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["now",{"_index":2341,"title":{},"body":{"components/SummaryComponent.html":{}}}],["now.gethours",{"_index":2343,"title":{},"body":{"components/SummaryComponent.html":{}}}],["null",{"_index":492,"title":{},"body":{"injectables/ContactService.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"injectables/LoginService.html":{},"components/SummaryComponent.html":{},"injectables/UserService.html":{}}}],["number",{"_index":72,"title":{},"body":{"injectables/AddContactService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"injectables/CustomDateParserFormatter-1.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{}}}],["numbers",{"_index":1134,"title":{},"body":{"injectables/CustomDateParserFormatter-1.html":{}}}],["numberstyle",{"_index":2402,"title":{},"body":{"components/SummaryComponent.html":{}}}],["numbertextcontainer",{"_index":2401,"title":{},"body":{"components/SummaryComponent.html":{}}}],["nur",{"_index":1780,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["nutzen",{"_index":1560,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["nutzers",{"_index":1658,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["nutzerverhaltens",{"_index":1570,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["nutzt",{"_index":1926,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["o",{"_index":1710,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["object",{"_index":56,"title":{},"body":{"injectables/AddContactService.html":{},"injectables/ContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["object.keys(this.groupedcontacts).sort",{"_index":929,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["objects",{"_index":462,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["observable",{"_index":61,"title":{},"body":{"injectables/AddContactService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/ContactService.html":{},"injectables/ContactsOverlayService.html":{},"injectables/LoginService.html":{},"injectables/ScreenSizeService.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["observe(this.handsetortabletbreakpoints",{"_index":2089,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["observes",{"_index":2082,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["occur",{"_index":2181,"title":{},"body":{"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{},"injectables/UserRegistrationService.html":{}}}],["occurred",{"_index":117,"title":{},"body":{"injectables/AddContactService.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["oder",{"_index":1537,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["of(null",{"_index":1448,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UserService.html":{}}}],["ohne",{"_index":1960,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["onchanges",{"_index":994,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["oncontactadded",{"_index":823,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["oncontactadded(contactadded",{"_index":872,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["oncontactedited",{"_index":1001,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["oncontactedited(contactedited",{"_index":1028,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["oninit",{"_index":703,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/SidebarComponent.html":{},"components/SummaryComponent.html":{}}}],["onsubmit",{"_index":710,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/SignUpComponent.html":{}}}],["onsubmit(contactform",{"_index":734,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["opacity",{"_index":1418,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["opencontact",{"_index":824,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["opencontact(contactid",{"_index":875,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["opens",{"_index":857,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/SidebarComponent.html":{}}}],["optional",{"_index":48,"title":{},"body":{"injectables/AddContactService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/CategoryService.html":{},"injectables/ContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/ScreenSizeService.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["orientation",{"_index":694,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["origin",{"_index":1416,"title":{},"body":{"components/LoginComponent.html":{}}}],["original",{"_index":388,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["orts",{"_index":1865,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["otherwise",{"_index":840,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"injectables/LoginService.html":{}}}],["ouml;ffentlichen",{"_index":1918,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["out",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/SummaryComponent.html":{},"index.html":{},"overview.html":{}}}],["outgoing",{"_index":427,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["output",{"_index":549,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{}}}],["outputs",{"_index":519,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{}}}],["overflow",{"_index":948,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["overlay",{"_index":780,"title":{},"body":{"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/LoginComponent.html":{},"components/SummaryComponent.html":{},"coverage.html":{}}}],["overlay'},{'name",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["overlay.component",{"_index":288,"title":{},"body":{"modules/AppModule.html":{}}}],["overlay.component.ts",{"_index":2521,"title":{},"body":{"coverage.html":{}}}],["overlay/board",{"_index":287,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["overlayfadeout",{"_index":1412,"title":{},"body":{"components/LoginComponent.html":{},"components/SummaryComponent.html":{}}}],["overlayfadeoutgreeting",{"_index":2441,"title":{},"body":{"components/SummaryComponent.html":{}}}],["overlaysummary",{"_index":2435,"title":{},"body":{"components/SummaryComponent.html":{}}}],["overlayvisibility",{"_index":784,"title":{},"body":{"injectables/ContactsOverlayService.html":{}}}],["overlayvisibilitysubject",{"_index":785,"title":{},"body":{"injectables/ContactsOverlayService.html":{}}}],["overview",{"_index":804,"title":{"overview.html":{}},"body":{"components/ContactsOverviewComponent.html":{},"components/SummaryComponent.html":{},"index.html":{},"overview.html":{}}}],["overview'},{'name",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["overview.component",{"_index":277,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["overview.component.html",{"_index":808,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["overview.component.scss",{"_index":807,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["overview.component.ts",{"_index":802,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"coverage.html":{}}}],["overview.component.ts:114",{"_index":863,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["overview.component.ts:141",{"_index":841,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["overview.component.ts:157",{"_index":846,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["overview.component.ts:166",{"_index":873,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["overview.component.ts:176",{"_index":832,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["overview.component.ts:188",{"_index":876,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["overview.component.ts:201",{"_index":851,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["overview.component.ts:21",{"_index":894,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["overview.component.ts:215",{"_index":856,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["overview.component.ts:236",{"_index":835,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["overview.component.ts:24",{"_index":889,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["overview.component.ts:250",{"_index":881,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["overview.component.ts:27",{"_index":891,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["overview.component.ts:30",{"_index":886,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["overview.component.ts:33",{"_index":896,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["overview.component.ts:36",{"_index":828,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["overview.component.ts:51",{"_index":885,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["overview.component.ts:54",{"_index":884,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["overview.component.ts:62",{"_index":869,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["overview.component.ts:83",{"_index":868,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["overview.component.ts:94",{"_index":865,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["overview/contacts",{"_index":276,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ContactsOverviewComponent.html":{},"coverage.html":{}}}],["ownership",{"_index":1267,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["package",{"_index":2542,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["pad",{"_index":1128,"title":{},"body":{"injectables/CustomDateParserFormatter-1.html":{}}}],["pad(number",{"_index":1130,"title":{},"body":{"injectables/CustomDateParserFormatter-1.html":{}}}],["padded",{"_index":1139,"title":{},"body":{"injectables/CustomDateParserFormatter-1.html":{}}}],["padding",{"_index":619,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["page",{"_index":330,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"components/ContactsOverviewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{},"index.html":{}}}],["param",{"_index":108,"title":{},"body":{"injectables/AddContactService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/ContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/ScreenSizeService.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["parameters",{"_index":44,"title":{},"body":{"injectables/AddContactService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/CategoryService.html":{},"injectables/ContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/ScreenSizeService.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["params['id",{"_index":1036,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["parse",{"_index":1106,"title":{},"body":{"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{}}}],["parse(value",{"_index":1112,"title":{},"body":{"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{}}}],["parseint(dateparts[0",{"_index":1119,"title":{},"body":{"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{}}}],["parseint(dateparts[1",{"_index":1121,"title":{},"body":{"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{}}}],["parseint(dateparts[2",{"_index":1123,"title":{},"body":{"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{}}}],["parser",{"_index":1097,"title":{},"body":{"injectables/CustomDateParserFormatter.html":{},"coverage.html":{}}}],["parses",{"_index":1114,"title":{},"body":{"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{}}}],["parsing",{"_index":1099,"title":{},"body":{"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{}}}],["passes",{"_index":407,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["passiert",{"_index":1473,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["passing",{"_index":530,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{}}}],["password",{"_index":1312,"title":{},"body":{"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/ResetPasswordComponent.html":{},"components/SignUpComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["password'},{'name",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["password.component",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["password.component.html",{"_index":2071,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.scss",{"_index":2070,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts",{"_index":2065,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["password/reset",{"_index":249,"title":{},"body":{"modules/AppModule.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["passwords",{"_index":2142,"title":{},"body":{"components/SignUpComponent.html":{}}}],["passwordsmatch",{"_index":2132,"title":{},"body":{"components/SignUpComponent.html":{}}}],["passwordvisible",{"_index":1319,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["path",{"_index":283,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ContactService.html":{},"components/SummaryComponent.html":{}}}],["pathmatch",{"_index":312,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pencilicon",{"_index":2415,"title":{},"body":{"components/SummaryComponent.html":{}}}],["per",{"_index":1690,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["pers&ouml;nlich",{"_index":1483,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["pers&ouml;nlichen",{"_index":1668,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["persist",{"_index":2478,"title":{},"body":{"injectables/UserService.html":{}}}],["persistently",{"_index":1360,"title":{},"body":{"components/LoginComponent.html":{}}}],["person",{"_index":1702,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["personaddicon",{"_index":954,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["personalize",{"_index":2310,"title":{},"body":{"components/SummaryComponent.html":{}}}],["personenbezogene",{"_index":1479,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["personenbezogenen",{"_index":1471,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["personenbezogener",{"_index":1745,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["personiconcontainer",{"_index":638,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{}}}],["personiconcontainerdesktop",{"_index":691,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["personiconformcontainer",{"_index":677,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["persönlich",{"_index":1979,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["persönlichen",{"_index":2003,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["pflicht&shy;informationen",{"_index":1663,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["pflicht­informationen",{"_index":2002,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["phone",{"_index":474,"title":{},"body":{"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{}}}],["pipe",{"_index":98,"title":{},"body":{"injectables/AddContactService.html":{},"injectables/LoginService.html":{},"injectables/UserService.html":{}}}],["pipe(catcherror(this.handleerror",{"_index":2266,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{}}}],["pipe(map((state",{"_index":2090,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["pipe(map(user",{"_index":2336,"title":{},"body":{"components/SummaryComponent.html":{}}}],["platform",{"_index":2593,"title":{},"body":{"index.html":{}}}],["please",{"_index":574,"title":{},"body":{"components/ContactsAddComponent.html":{},"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["point",{"_index":147,"title":{},"body":{"components/AppComponent.html":{}}}],["pointer",{"_index":624,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["policies",{"_index":1453,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["policy",{"_index":319,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{}}}],["policy'},{'name",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["policy.component",{"_index":295,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["policy.component.html",{"_index":1455,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["policy.component.scss",{"_index":1454,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["policy.component.ts",{"_index":1451,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"coverage.html":{}}}],["policy/privacy",{"_index":294,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/PrivacyPolicyComponent.html":{},"coverage.html":{}}}],["popperjs/core",{"_index":2554,"title":{},"body":{"dependencies.html":{}}}],["position",{"_index":582,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["post(this.registrationurl",{"_index":2475,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["pr&uuml;fung",{"_index":1896,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["predefined",{"_index":1342,"title":{},"body":{"components/LoginComponent.html":{}}}],["presence",{"_index":351,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/LoginService.html":{}}}],["present",{"_index":405,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/ContactsViewComponent.html":{}}}],["priority",{"_index":2217,"title":{},"body":{"interfaces/Subtask-1.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["privacy",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["privacylink",{"_index":2171,"title":{},"body":{"components/SignUpComponent.html":{}}}],["privacypolicycomponent",{"_index":203,"title":{"components/PrivacyPolicyComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["privacypolicycontainer",{"_index":1973,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["privacypolicycontent",{"_index":1974,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["private",{"_index":27,"title":{},"body":{"injectables/AddContactService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/ContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"injectables/CustomDateParserFormatter-1.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/ScreenSizeService.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["proceed",{"_index":2167,"title":{},"body":{"components/SignUpComponent.html":{}}}],["process",{"_index":2068,"title":{},"body":{"components/ResetPasswordComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["production",{"_index":2613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profiling",{"_index":1830,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["progress",{"_index":2229,"title":{},"body":{"interfaces/Subtask-1.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["project",{"_index":1244,"title":{},"body":{"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{},"index.html":{}}}],["promise",{"_index":358,"title":{},"body":{"guards/AuthGuard.html":{}}}],["properties",{"_index":26,"title":{"properties.html":{}},"body":{"injectables/AddContactService.html":{},"components/AppComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"injectables/ContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/ScreenSizeService.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{},"properties.html":{}}}],["property",{"_index":1225,"title":{},"body":{"components/HeaderBarMobileComponent.html":{}}}],["protect",{"_index":325,"title":{},"body":{"guards/AuthGuard.html":{}}}],["protected",{"_index":1422,"title":{},"body":{"injectables/LoginService.html":{}}}],["protectedurl",{"_index":1424,"title":{},"body":{"injectables/LoginService.html":{}}}],["provide",{"_index":299,"title":{},"body":{"modules/AppModule.html":{},"injectables/UserService.html":{}}}],["provided",{"_index":54,"title":{},"body":{"injectables/AddContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{}}}],["providedin",{"_index":104,"title":{},"body":{"injectables/AddContactService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/ContactService.html":{},"injectables/ContactsOverlayService.html":{},"injectables/LoginService.html":{},"injectables/ScreenSizeService.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["providers",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["provides",{"_index":484,"title":{},"body":{"injectables/ContactService.html":{},"injectables/ContactsOverlayService.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{},"injectables/ScreenSizeService.html":{},"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{}}}],["providing",{"_index":13,"title":{},"body":{"injectables/AddContactService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/FooterBarComponent.html":{},"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["prüfung",{"_index":2049,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["public",{"_index":809,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{}}}],["purposes",{"_index":1022,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["put(`${this.baseurl}/tasks/${id",{"_index":2265,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["quelle",{"_index":1290,"title":{},"body":{"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["r",{"_index":560,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["radius",{"_index":602,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["rahmen",{"_index":1770,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["random",{"_index":535,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["reactiveformsmodule",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["received",{"_index":2205,"title":{},"body":{"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{}}}],["recht",{"_index":1577,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["recht24.de",{"_index":1292,"title":{},"body":{"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["rechte",{"_index":1573,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["rechtlich",{"_index":1725,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["rechtlichen",{"_index":1756,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["rechtm&auml;&szlig;igkeit",{"_index":1809,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["rechtmäßigkeit",{"_index":2029,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["rechtsanspr&uuml;chen",{"_index":1848,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["rechtsansprüchen",{"_index":2037,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["rechtsbehelfe",{"_index":1873,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["rechtsgrundlage",{"_index":1790,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["rechtsgrundlagen",{"_index":1734,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["redirect",{"_index":339,"title":{},"body":{"guards/AuthGuard.html":{}}}],["redirecting",{"_index":426,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["redirects",{"_index":329,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"components/LoginComponent.html":{}}}],["redirectto",{"_index":310,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reference",{"_index":2602,"title":{},"body":{"index.html":{}}}],["refreshcontacts",{"_index":825,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["refreshes",{"_index":882,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["regarding",{"_index":1265,"title":{},"body":{"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["regel",{"_index":1892,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["registers",{"_index":2472,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["registeruser",{"_index":2464,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["registeruser(userdata",{"_index":2470,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["registration",{"_index":2126,"title":{},"body":{"components/SignUpComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["registrationurl",{"_index":2463,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["regulatory",{"_index":1268,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["related",{"_index":1452,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["relative",{"_index":617,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["relevant",{"_index":1217,"title":{},"body":{"components/HeaderBarMobileComponent.html":{}}}],["reload",{"_index":2575,"title":{},"body":{"index.html":{}}}],["reloading",{"_index":883,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["reloads",{"_index":874,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{}}}],["remember",{"_index":1349,"title":{},"body":{"components/LoginComponent.html":{}}}],["rememberme",{"_index":1320,"title":{},"body":{"components/LoginComponent.html":{}}}],["removing",{"_index":1439,"title":{},"body":{"injectables/LoginService.html":{}}}],["ren",{"_index":1996,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ren&eacute",{"_index":1621,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["repeat",{"_index":649,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["represented",{"_index":448,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["representing",{"_index":468,"title":{},"body":{"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"injectables/ContactsOverlayService.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{}}}],["represents",{"_index":445,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/HeaderBarMobileComponent.html":{}}}],["req",{"_index":387,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["req.clone",{"_index":410,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["req.url.includes(url",{"_index":400,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["request",{"_index":24,"title":{},"body":{"injectables/AddContactService.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/LoginService.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{}}}],["request.clone",{"_index":434,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["requested",{"_index":2186,"title":{},"body":{"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["requests",{"_index":43,"title":{},"body":{"injectables/AddContactService.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["required",{"_index":573,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/LegalNoticeComponent.html":{}}}],["reset",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{},"overview.html":{}}}],["resetfields",{"_index":1325,"title":{},"body":{"components/LoginComponent.html":{}}}],["resetpageflags",{"_index":1159,"title":{},"body":{"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["resetpasswordcomponent",{"_index":206,"title":{"components/ResetPasswordComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resets",{"_index":1171,"title":{},"body":{"components/FooterBarComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["resetting",{"_index":2069,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resources",{"_index":1444,"title":{},"body":{"injectables/LoginService.html":{}}}],["response",{"_index":63,"title":{},"body":{"injectables/AddContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsViewComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{}}}],["response.token",{"_index":1365,"title":{},"body":{"components/LoginComponent.html":{},"injectables/LoginService.html":{}}}],["response.user",{"_index":1367,"title":{},"body":{"components/LoginComponent.html":{}}}],["responsible",{"_index":9,"title":{},"body":{"injectables/AddContactService.html":{},"injectables/ContactService.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"injectables/LoginService.html":{}}}],["results",{"_index":133,"title":{},"body":{"injectables/AddContactService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"injectables/ContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScreenSizeService.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["rethrows",{"_index":2467,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["retrieval",{"_index":454,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/ContactsViewComponent.html":{}}}],["retrieve",{"_index":486,"title":{},"body":{"injectables/ContactService.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsViewComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{}}}],["retrieved",{"_index":2321,"title":{},"body":{"components/SummaryComponent.html":{}}}],["retrieves",{"_index":81,"title":{},"body":{"injectables/AddContactService.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/ContactService.html":{},"injectables/ContactsOverlayService.html":{},"injectables/LoginService.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{}}}],["retry",{"_index":2216,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["retry(3",{"_index":2245,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["return",{"_index":113,"title":{},"body":{"injectables/AddContactService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/ContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"injectables/LoginService.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["returned",{"_index":2238,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["returns",{"_index":60,"title":{},"body":{"injectables/AddContactService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/ContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["rgb",{"_index":539,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["rgba($color",{"_index":591,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{}}}],["rgba(0",{"_index":1077,"title":{},"body":{"components/ContactsViewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SummaryComponent.html":{}}}],["richtigkeit",{"_index":1889,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["right",{"_index":618,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["root",{"_index":105,"title":{},"body":{"injectables/AddContactService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/ContactService.html":{},"injectables/ContactsOverlayService.html":{},"injectables/LoginService.html":{},"injectables/ScreenSizeService.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["route",{"_index":348,"title":{},"body":{"guards/AuthGuard.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["router",{"_index":334,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["routerevent",{"_index":1182,"title":{},"body":{"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{},"components/SummaryComponent.html":{}}}],["routermodule",{"_index":305,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":320,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":345,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routes",{"_index":306,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"overview.html":{},"routes.html":{}}}],["routing",{"_index":829,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["routing.module",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":304,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":1094,"title":{},"body":{"components/ContactsViewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["run",{"_index":2570,"title":{},"body":{"index.html":{}}}],["running",{"_index":2586,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["rxjs",{"_index":99,"title":{},"body":{"injectables/AddContactService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/ContactService.html":{},"injectables/ContactsOverlayService.html":{},"injectables/LoginService.html":{},"injectables/ScreenSizeService.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":102,"title":{},"body":{"injectables/AddContactService.html":{},"injectables/LoginService.html":{},"injectables/ScreenSizeService.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["save",{"_index":768,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["savebutton",{"_index":777,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["scaffolding",{"_index":2578,"title":{},"body":{"index.html":{}}}],["scale(1",{"_index":1419,"title":{},"body":{"components/LoginComponent.html":{}}}],["scale(1.02",{"_index":2418,"title":{},"body":{"components/SummaryComponent.html":{}}}],["scale(1.05",{"_index":2408,"title":{},"body":{"components/SummaryComponent.html":{}}}],["scale(2",{"_index":1414,"title":{},"body":{"components/LoginComponent.html":{}}}],["schloss",{"_index":1943,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["schutz",{"_index":1667,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["schutzw&uuml;rdige",{"_index":1839,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["schutzwürdige",{"_index":2034,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["screen",{"_index":679,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"injectables/ScreenSizeService.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["screens",{"_index":879,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["screensizeservice",{"_index":827,"title":{"injectables/ScreenSizeService.html":{}},"body":{"components/ContactsOverviewComponent.html":{},"injectables/ScreenSizeService.html":{},"coverage.html":{}}}],["secondrow",{"_index":2393,"title":{},"body":{"components/SummaryComponent.html":{}}}],["sect",{"_index":1649,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["sections",{"_index":1148,"title":{},"body":{"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["sehr",{"_index":1669,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["sei",{"_index":1836,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["seite",{"_index":1925,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["seiten",{"_index":1665,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["seitenaufrufs",{"_index":1555,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["seitenbetreiber",{"_index":1933,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["selected",{"_index":859,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["selectedcontact",{"_index":813,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["selection",{"_index":1350,"title":{},"body":{"components/LoginComponent.html":{}}}],["selector",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["self",{"_index":2257,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["self.findindex(t",{"_index":2258,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["senden",{"_index":1934,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["sending",{"_index":460,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{}}}],["sends",{"_index":2462,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["serve",{"_index":2571,"title":{},"body":{"index.html":{}}}],["server",{"_index":456,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/LoginService.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["server's",{"_index":1431,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UserRegistrationService.html":{}}}],["service",{"_index":526,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"injectables/CustomDateParserFormatter.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["service.service",{"_index":899,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{}}}],["service.service.ts",{"_index":781,"title":{},"body":{"injectables/ContactsOverlayService.html":{},"coverage.html":{}}}],["service.service.ts:14",{"_index":799,"title":{},"body":{"injectables/ContactsOverlayService.html":{}}}],["service.service.ts:17",{"_index":794,"title":{},"body":{"injectables/ContactsOverlayService.html":{}}}],["service.service.ts:24",{"_index":790,"title":{},"body":{"injectables/ContactsOverlayService.html":{}}}],["service.service.ts:33",{"_index":788,"title":{},"body":{"injectables/ContactsOverlayService.html":{}}}],["services",{"_index":524,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/LoginComponent.html":{},"components/SummaryComponent.html":{}}}],["serving",{"_index":144,"title":{},"body":{"components/AppComponent.html":{}}}],["session",{"_index":1219,"title":{},"body":{"components/HeaderBarMobileComponent.html":{}}}],["sessionstorage",{"_index":402,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/LoginComponent.html":{}}}],["sessionstorage.getitem('auth_token",{"_index":124,"title":{},"body":{"injectables/AddContactService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/UserService.html":{}}}],["sessionstorage.getitem('showoverlaysummary",{"_index":2330,"title":{},"body":{"components/SummaryComponent.html":{}}}],["sessionstorage.removeitem('auth_token",{"_index":1240,"title":{},"body":{"components/HeaderBarMobileComponent.html":{}}}],["sessionstorage.removeitem('showoverlay",{"_index":1242,"title":{},"body":{"components/HeaderBarMobileComponent.html":{},"injectables/LoginService.html":{}}}],["sessionstorage.setitem('auth_token",{"_index":1385,"title":{},"body":{"components/LoginComponent.html":{}}}],["sessionstorage.setitem('showoverlaysummary",{"_index":1447,"title":{},"body":{"injectables/LoginService.html":{},"components/SummaryComponent.html":{}}}],["set",{"_index":485,"title":{},"body":{"injectables/ContactService.html":{},"injectables/ContactsOverlayService.html":{},"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{},"injectables/UserService.html":{}}}],["setcontacttoedit",{"_index":490,"title":{},"body":{"injectables/ContactService.html":{}}}],["setcontacttoedit(contact",{"_index":493,"title":{},"body":{"injectables/ContactService.html":{}}}],["setcurrentuser",{"_index":2482,"title":{},"body":{"injectables/UserService.html":{}}}],["setcurrentuser(user",{"_index":2488,"title":{},"body":{"injectables/UserService.html":{}}}],["setheaders",{"_index":411,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{}}}],["setoverlayvisibility",{"_index":787,"title":{},"body":{"injectables/ContactsOverlayService.html":{}}}],["setoverlayvisibility(isvisible",{"_index":789,"title":{},"body":{"injectables/ContactsOverlayService.html":{}}}],["setpageflag",{"_index":1160,"title":{},"body":{"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["setpageflag(url",{"_index":1174,"title":{},"body":{"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["sets",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"injectables/ContactService.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{},"components/SummaryComponent.html":{},"injectables/UserService.html":{}}}],["settimeout",{"_index":556,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["setting",{"_index":870,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"injectables/UserService.html":{}}}],["settings",{"_index":993,"title":{},"body":{"components/ContactsViewComponent.html":{},"miscellaneous/variables.html":{}}}],["shadow",{"_index":1076,"title":{},"body":{"components/ContactsViewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["shortcuts",{"_index":1147,"title":{},"body":{"components/FooterBarComponent.html":{}}}],["show",{"_index":2145,"title":{},"body":{"components/SignUpComponent.html":{}}}],["showcontactsadd",{"_index":826,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["showcontactsedit",{"_index":1002,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["showeditoverlay",{"_index":997,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["showoverlaystored",{"_index":2329,"title":{},"body":{"components/SummaryComponent.html":{}}}],["showoverlaysummary",{"_index":2289,"title":{},"body":{"components/SummaryComponent.html":{}}}],["shows",{"_index":880,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["showstatusdropdown",{"_index":2232,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["sich",{"_index":1528,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["sicherheitsgr&uuml;nden",{"_index":1927,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["sicherheitsgründen",{"_index":2058,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["sicherheitsl&uuml;cken",{"_index":1691,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["sicherheitslücken",{"_index":2006,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["sidebar",{"_index":2098,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar'},{'name",{"_index":210,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["sidebar.component.html",{"_index":2104,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar.component.scss",{"_index":2103,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar/sidebar.component",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["sidebarcomponent",{"_index":209,"title":{"components/SidebarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sidebarcontnentcontainer",{"_index":1294,"title":{},"body":{"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{}}}],["sie",{"_index":1475,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["sign",{"_index":212,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["signal",{"_index":532,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["signed",{"_index":2168,"title":{},"body":{"components/SignUpComponent.html":{}}}],["signedsuccesscontainer",{"_index":2170,"title":{},"body":{"components/SignUpComponent.html":{}}}],["signup",{"_index":314,"title":{},"body":{"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"components/SignUpComponent.html":{}}}],["signupcomponent",{"_index":211,"title":{"components/SignUpComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["signupfootercontainer",{"_index":1402,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["signupsuccess",{"_index":2131,"title":{},"body":{"components/SignUpComponent.html":{}}}],["simplechanges",{"_index":1025,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["sind",{"_index":1480,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["sinne",{"_index":1660,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["situation",{"_index":1823,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["size",{"_index":634,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/LoginComponent.html":{},"injectables/ScreenSizeService.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["size.service",{"_index":898,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["size.service.ts",{"_index":2073,"title":{},"body":{"injectables/ScreenSizeService.html":{},"coverage.html":{}}}],["size.service.ts:17",{"_index":2085,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["size.service.ts:27",{"_index":2093,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["size.service.ts:29",{"_index":2081,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["sizes",{"_index":2087,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["slash",{"_index":2198,"title":{},"body":{"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{}}}],["slideinfrombottom",{"_index":672,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/SignUpComponent.html":{}}}],["smallheadline",{"_index":2382,"title":{},"body":{"components/SummaryComponent.html":{}}}],["smallheadlineaddcontacts",{"_index":632,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{}}}],["smallheadlinecontacts",{"_index":987,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{}}}],["sobald",{"_index":1557,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["sofern",{"_index":1644,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["solange",{"_index":1907,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["solcher",{"_index":1853,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["solid",{"_index":628,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["sonstige",{"_index":1789,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["sorted",{"_index":847,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["sorts",{"_index":864,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/AddContactService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"injectables/ContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScreenSizeService.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["soweit",{"_index":1652,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["sowie",{"_index":1606,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["space",{"_index":661,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["specific",{"_index":385,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"miscellaneous/variables.html":{}}}],["specifically",{"_index":425,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"injectables/ScreenSizeService.html":{}}}],["specified",{"_index":2303,"title":{},"body":{"components/SummaryComponent.html":{}}}],["speicherdauer",{"_index":1713,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["speicherung",{"_index":1653,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["speziellere",{"_index":1716,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["split",{"_index":749,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{}}}],["src/.../environment.development.ts",{"_index":2611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/add",{"_index":2511,"title":{},"body":{"coverage.html":{}}}],["src/app/app",{"_index":303,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:15",{"_index":162,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/auth.guard.ts",{"_index":323,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/auth.guard.ts:19",{"_index":335,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth.guard.ts:37",{"_index":346,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth.interceptor",{"_index":285,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/auth.interceptor.ts",{"_index":369,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"coverage.html":{}}}],["src/app/auth.interceptor.ts:11",{"_index":375,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/auth.interceptor.ts:22",{"_index":380,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/auth/login.service",{"_index":1361,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login.service.ts",{"_index":1421,"title":{},"body":{"injectables/LoginService.html":{},"coverage.html":{}}}],["src/app/auth/login.service.ts:15",{"_index":1441,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/auth/login.service.ts:18",{"_index":1427,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/auth/login.service.ts:35",{"_index":1437,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/auth/login.service.ts:52",{"_index":1438,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/auth/login.service.ts:62",{"_index":1429,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/auth/login.service.ts:79",{"_index":1433,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/board",{"_index":2520,"title":{},"body":{"coverage.html":{}}}],["src/app/board/board.component.ts",{"_index":2523,"title":{},"body":{"coverage.html":{}}}],["src/app/contacts/contacts",{"_index":505,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"coverage.html":{}}}],["src/app/custom",{"_index":1095,"title":{},"body":{"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"coverage.html":{}}}],["src/app/edit",{"_index":2530,"title":{},"body":{"coverage.html":{}}}],["src/app/footer",{"_index":1143,"title":{},"body":{"components/FooterBarComponent.html":{},"coverage.html":{}}}],["src/app/header",{"_index":1204,"title":{},"body":{"components/HeaderBarMobileComponent.html":{},"coverage.html":{}}}],["src/app/imprint/legal",{"_index":1263,"title":{},"body":{"components/LegalNoticeComponent.html":{},"coverage.html":{}}}],["src/app/imprint/privacy",{"_index":1450,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts",{"_index":1310,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:106",{"_index":1341,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:114",{"_index":1340,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:124",{"_index":1348,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:134",{"_index":1345,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:141",{"_index":1337,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:21",{"_index":1353,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:24",{"_index":1358,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:27",{"_index":1359,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:30",{"_index":1355,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:33",{"_index":1357,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:36",{"_index":1330,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:55",{"_index":1351,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:64",{"_index":1343,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:96",{"_index":1331,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/reset",{"_index":2064,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["src/app/services/add",{"_index":6,"title":{},"body":{"injectables/AddContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"coverage.html":{}}}],["src/app/services/auth",{"_index":414,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"coverage.html":{}}}],["src/app/services/auth.service",{"_index":272,"title":{},"body":{"modules/AppModule.html":{},"components/SignUpComponent.html":{}}}],["src/app/services/auth.service.ts",{"_index":2461,"title":{},"body":{"injectables/UserRegistrationService.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts:17",{"_index":2465,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["src/app/services/auth.service.ts:32",{"_index":2471,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["src/app/services/auth.service.ts:51",{"_index":2466,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["src/app/services/category.service.ts",{"_index":444,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"coverage.html":{}}}],["src/app/services/category.service.ts:33",{"_index":465,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/services/category.service.ts:47",{"_index":466,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/services/contact.service.ts",{"_index":482,"title":{},"body":{"injectables/ContactService.html":{},"coverage.html":{}}}],["src/app/services/contact.service.ts:16",{"_index":497,"title":{},"body":{"injectables/ContactService.html":{}}}],["src/app/services/contact.service.ts:23",{"_index":494,"title":{},"body":{"injectables/ContactService.html":{}}}],["src/app/services/contact.service.ts:32",{"_index":491,"title":{},"body":{"injectables/ContactService.html":{}}}],["src/app/services/contacts",{"_index":779,"title":{},"body":{"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"coverage.html":{}}}],["src/app/services/screen",{"_index":897,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"injectables/ScreenSizeService.html":{},"coverage.html":{}}}],["src/app/services/subtask.service.ts",{"_index":2175,"title":{},"body":{"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{},"coverage.html":{}}}],["src/app/services/subtask.service.ts:106",{"_index":2279,"title":{},"body":{"injectables/SubtaskService.html":{}}}],["src/app/services/subtask.service.ts:34",{"_index":2274,"title":{},"body":{"injectables/SubtaskService.html":{}}}],["src/app/services/subtask.service.ts:48",{"_index":2278,"title":{},"body":{"injectables/SubtaskService.html":{}}}],["src/app/services/subtask.service.ts:58",{"_index":2277,"title":{},"body":{"injectables/SubtaskService.html":{}}}],["src/app/services/subtask.service.ts:68",{"_index":2275,"title":{},"body":{"injectables/SubtaskService.html":{}}}],["src/app/services/subtask.service.ts:84",{"_index":2280,"title":{},"body":{"injectables/SubtaskService.html":{}}}],["src/app/services/subtask.service.ts:96",{"_index":2276,"title":{},"body":{"injectables/SubtaskService.html":{}}}],["src/app/services/task.service",{"_index":2328,"title":{},"body":{"components/SummaryComponent.html":{}}}],["src/app/services/task.service.ts",{"_index":2215,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["src/app/services/task.service.ts:107",{"_index":2456,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:120",{"_index":2455,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:130",{"_index":2453,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:142",{"_index":2458,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:161",{"_index":2454,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:78",{"_index":2452,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:93",{"_index":2457,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/user.service",{"_index":271,"title":{},"body":{"modules/AppModule.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"components/SummaryComponent.html":{}}}],["src/app/services/user.service.ts",{"_index":2476,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/services/user.service.ts:18",{"_index":2493,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:21",{"_index":2483,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:42",{"_index":2485,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:65",{"_index":2487,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:75",{"_index":2489,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/sidebar/sidebar.component.ts",{"_index":2097,"title":{},"body":{"components/SidebarComponent.html":{},"coverage.html":{}}}],["src/app/sidebar/sidebar.component.ts:105",{"_index":2111,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:17",{"_index":2120,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:20",{"_index":2119,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:23",{"_index":2117,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:26",{"_index":2107,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:40",{"_index":2114,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:54",{"_index":2115,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:66",{"_index":2116,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:75",{"_index":2110,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:81",{"_index":2113,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:87",{"_index":2108,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:93",{"_index":2109,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:99",{"_index":2112,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sign",{"_index":2124,"title":{},"body":{"components/SignUpComponent.html":{},"coverage.html":{}}}],["src/app/summary/summary.component.ts",{"_index":2281,"title":{},"body":{"components/SummaryComponent.html":{},"coverage.html":{}}}],["src/app/summary/summary.component.ts:107",{"_index":2316,"title":{},"body":{"components/SummaryComponent.html":{}}}],["src/app/summary/summary.component.ts:125",{"_index":2305,"title":{},"body":{"components/SummaryComponent.html":{}}}],["src/app/summary/summary.component.ts:136",{"_index":2299,"title":{},"body":{"components/SummaryComponent.html":{}}}],["src/app/summary/summary.component.ts:146",{"_index":2306,"title":{},"body":{"components/SummaryComponent.html":{}}}],["src/app/summary/summary.component.ts:169",{"_index":2313,"title":{},"body":{"components/SummaryComponent.html":{}}}],["src/app/summary/summary.component.ts:22",{"_index":2319,"title":{},"body":{"components/SummaryComponent.html":{}}}],["src/app/summary/summary.component.ts:25",{"_index":2322,"title":{},"body":{"components/SummaryComponent.html":{}}}],["src/app/summary/summary.component.ts:28",{"_index":2320,"title":{},"body":{"components/SummaryComponent.html":{}}}],["src/app/summary/summary.component.ts:31",{"_index":2327,"title":{},"body":{"components/SummaryComponent.html":{}}}],["src/app/summary/summary.component.ts:34",{"_index":2324,"title":{},"body":{"components/SummaryComponent.html":{}}}],["src/app/summary/summary.component.ts:37",{"_index":2297,"title":{},"body":{"components/SummaryComponent.html":{}}}],["src/app/summary/summary.component.ts:56",{"_index":2318,"title":{},"body":{"components/SummaryComponent.html":{}}}],["src/app/summary/summary.component.ts:86",{"_index":2308,"title":{},"body":{"components/SummaryComponent.html":{}}}],["src/assets/models/contact.model",{"_index":501,"title":{},"body":{"injectables/ContactService.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{}}}],["src/assets/models/contact.model.ts",{"_index":467,"title":{},"body":{"interfaces/Contact.html":{},"coverage.html":{}}}],["src/assets/models/user.model",{"_index":1231,"title":{},"body":{"components/HeaderBarMobileComponent.html":{},"components/SummaryComponent.html":{},"injectables/UserService.html":{}}}],["src/assets/models/user.model.ts",{"_index":2459,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/environments/environment",{"_index":452,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["src/environments/environment.development.ts",{"_index":2537,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":2539,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ssl",{"_index":1922,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["standalone",{"_index":992,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["start",{"_index":698,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{}}}],["started",{"_index":2563,"title":{"index.html":{}},"body":{}}],["state",{"_index":344,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ContactService.html":{},"injectables/ContactsOverlayService.html":{}}}],["state.matches",{"_index":2092,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["statements",{"_index":2508,"title":{},"body":{"coverage.html":{}}}],["statt",{"_index":1899,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["status",{"_index":783,"title":{},"body":{"injectables/ContactsOverlayService.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["steht",{"_index":1599,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["stelle",{"_index":1698,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["stelle&ldquo",{"_index":1515,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["stellen",{"_index":1775,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["steuer",{"_index":1728,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["steuerbeh&ouml;rden",{"_index":1788,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["steuerbehörden",{"_index":2026,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["storage",{"_index":1220,"title":{},"body":{"components/HeaderBarMobileComponent.html":{},"injectables/LoginService.html":{},"injectables/UserService.html":{}}}],["store",{"_index":890,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/LoginComponent.html":{}}}],["stored",{"_index":68,"title":{},"body":{"injectables/AddContactService.html":{},"components/ContactsOverviewComponent.html":{},"components/LoginComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["storedcontactid",{"_index":814,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["storeduser",{"_index":2494,"title":{},"body":{"injectables/UserService.html":{}}}],["stores",{"_index":860,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{}}}],["storetoken",{"_index":1326,"title":{},"body":{"components/LoginComponent.html":{}}}],["storetoken(token",{"_index":1347,"title":{},"body":{"components/LoginComponent.html":{}}}],["storing",{"_index":548,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["string",{"_index":88,"title":{},"body":{"injectables/AddContactService.html":{},"components/AppComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/SidebarComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["stroke",{"_index":2412,"title":{},"body":{"components/SummaryComponent.html":{}}}],["structure",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["styles",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["styleurls",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["submission",{"_index":509,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/SignUpComponent.html":{}}}],["submitcontactform",{"_index":518,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["submits",{"_index":542,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/SignUpComponent.html":{}}}],["subscribe",{"_index":797,"title":{},"body":{"injectables/ContactsOverlayService.html":{}}}],["subscribing",{"_index":1169,"title":{},"body":{"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["subscriptions",{"_index":871,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["subtask",{"_index":2174,"title":{"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{}},"body":{"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["subtask).pipe",{"_index":2191,"title":{},"body":{"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{}}}],["subtask).pipe(catcherror(this.handleerror",{"_index":2200,"title":{},"body":{"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{}}}],["subtask.id",{"_index":2260,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["subtask.text",{"_index":2262,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["subtasks",{"_index":2179,"title":{},"body":{"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["subtaskservice",{"_index":2178,"title":{"injectables/SubtaskService.html":{}},"body":{"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{},"coverage.html":{}}}],["success",{"_index":543,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/SignUpComponent.html":{}}}],["successful",{"_index":737,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/SignUpComponent.html":{},"injectables/UserService.html":{}}}],["successfully",{"_index":511,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/SignUpComponent.html":{}}}],["such",{"_index":386,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["summary",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["summary.component.html",{"_index":2285,"title":{},"body":{"components/SummaryComponent.html":{}}}],["summary.component.scss",{"_index":2284,"title":{},"body":{"components/SummaryComponent.html":{}}}],["summary/summary.component",{"_index":255,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["summarycomponent",{"_index":214,"title":{"components/SummaryComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["summarycontainer",{"_index":2379,"title":{},"body":{"components/SummaryComponent.html":{}}}],["summarycontent",{"_index":2380,"title":{},"body":{"components/SummaryComponent.html":{}}}],["summarydesktopcontainer",{"_index":2428,"title":{},"body":{"components/SummaryComponent.html":{}}}],["summarydividingline",{"_index":2425,"title":{},"body":{"components/SummaryComponent.html":{}}}],["summaryunderline",{"_index":2383,"title":{},"body":{"components/SummaryComponent.html":{}}}],["support",{"_index":2603,"title":{},"body":{"modules.html":{}}}],["supports",{"_index":991,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["svg",{"_index":1203,"title":{},"body":{"components/FooterBarComponent.html":{},"modules.html":{}}}],["symbol",{"_index":1944,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["systeme",{"_index":1545,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["t.id",{"_index":2259,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["t.text",{"_index":2261,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["tab",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"components/SidebarComponent.html":{}}}],["table",{"_index":2541,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2540,"title":{},"body":{"coverage.html":{}}}],["tablet",{"_index":854,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"injectables/ScreenSizeService.html":{}}}],["takes",{"_index":842,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["tap",{"_index":101,"title":{},"body":{"injectables/AddContactService.html":{},"injectables/LoginService.html":{},"injectables/UserService.html":{}}}],["tap(response",{"_index":1446,"title":{},"body":{"injectables/LoginService.html":{}}}],["tap(user",{"_index":2500,"title":{},"body":{"injectables/UserService.html":{}}}],["task",{"_index":180,"title":{"interfaces/Task.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask-1.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["task'},{'name",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["task).pipe(catcherror(this.handleerror",{"_index":2252,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["task.component",{"_index":259,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["task.component.ts",{"_index":2512,"title":{},"body":{"coverage.html":{}}}],["task.priority",{"_index":2351,"title":{},"body":{"components/SummaryComponent.html":{}}}],["task.status",{"_index":2250,"title":{},"body":{"interfaces/Subtask-1.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["task.subtasks.filter",{"_index":2256,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["task/add",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["task/edit",{"_index":289,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["tasks",{"_index":570,"title":{},"body":{"components/ContactsAddComponent.html":{},"interfaces/Subtask-1.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["tasks.length",{"_index":2374,"title":{},"body":{"components/SummaryComponent.html":{}}}],["taskservice",{"_index":2233,"title":{"injectables/TaskService.html":{}},"body":{"interfaces/Subtask-1.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["team",{"_index":572,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{}}}],["technisch",{"_index":1883,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["technische",{"_index":1550,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["teil",{"_index":1561,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["teilweise",{"_index":1778,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["telefon",{"_index":1284,"title":{},"body":{"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["template",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["templateurl",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["test",{"_index":2589,"title":{},"body":{"index.html":{}}}],["testing",{"_index":2597,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2588,"title":{},"body":{"index.html":{}}}],["text",{"_index":1254,"title":{},"body":{"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["textcenter",{"_index":2406,"title":{},"body":{"components/SummaryComponent.html":{}}}],["thema",{"_index":1490,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["thirdrow",{"_index":2397,"title":{},"body":{"components/SummaryComponent.html":{}}}],["this.addcontactservice.addcontact(this.contactdata).subscribe",{"_index":553,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["this.addcontactservice.deletecontact(contactid).subscribe",{"_index":1042,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["this.addcontactservice.deletecontact(this.contact.id).subscribe",{"_index":763,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["this.addcontactservice.getcontactbyid(contactid).subscribe",{"_index":746,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{}}}],["this.addcontactservice.getcontacts().subscribe",{"_index":911,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["this.addcontactservice.updatecontact(this.contact.id",{"_index":754,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["this.addcontactsuccess",{"_index":554,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["this.apiurl.replace",{"_index":2195,"title":{},"body":{"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{}}}],["this.breakpointobserver",{"_index":2088,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["this.close.emit",{"_index":557,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{}}}],["this.closeeditcomponent",{"_index":758,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["this.contact",{"_index":747,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{}}}],["this.contact).subscribe",{"_index":755,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["this.contact.id",{"_index":753,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{}}}],["this.contactadded.emit(true",{"_index":555,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["this.contactdata.color",{"_index":551,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["this.contactdeleted.emit",{"_index":1043,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["this.contactedited.emit(false",{"_index":760,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["this.contactedited.emit(true",{"_index":757,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["this.contactid",{"_index":744,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{}}}],["this.contactsoverlayservice.overlayvisibility$.subscribe(isvisible",{"_index":905,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["this.contactsoverlayservice.setoverlayvisibility(false",{"_index":931,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{}}}],["this.contactsoverlayservice.setoverlayvisibility(true",{"_index":939,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["this.contactsubject.asobservable",{"_index":504,"title":{},"body":{"injectables/ContactService.html":{}}}],["this.contactsubject.next(contact",{"_index":503,"title":{},"body":{"injectables/ContactService.html":{}}}],["this.contactsviewnotvisible",{"_index":906,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["this.contactupdated.emit",{"_index":1045,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["this.createauthorizationheader",{"_index":112,"title":{},"body":{"injectables/AddContactService.html":{}}}],["this.currentuser",{"_index":2338,"title":{},"body":{"components/SummaryComponent.html":{}}}],["this.currentusersubject",{"_index":2497,"title":{},"body":{"injectables/UserService.html":{}}}],["this.currentusersubject.asobservable",{"_index":2502,"title":{},"body":{"injectables/UserService.html":{}}}],["this.currentusersubject.next(user",{"_index":2503,"title":{},"body":{"injectables/UserService.html":{}}}],["this.displayerrormessage",{"_index":1373,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.email",{"_index":1377,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.fetchcontactdetails(changes['contactid'].currentvalue",{"_index":1040,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["this.fetchcontactdetails(contactid",{"_index":1037,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["this.fetchcontactdetails(this.contact.id",{"_index":1044,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["this.fetchcontactdetails(this.contactid",{"_index":1034,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["this.findcontactbyid(contactid",{"_index":937,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["this.findnearestduedate",{"_index":2347,"title":{},"body":{"components/SummaryComponent.html":{}}}],["this.generategreeting(user",{"_index":2337,"title":{},"body":{"components/SummaryComponent.html":{}}}],["this.generaterandomdarkcolor",{"_index":552,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["this.getinitials(contact.name",{"_index":916,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["this.gotocontactdetails(contactid",{"_index":932,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["this.gotodesktopcontactdetails(contactid",{"_index":933,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["this.gotodesktopcontactdetails(this.storedcontactid",{"_index":909,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["this.greeting",{"_index":2333,"title":{},"body":{"components/SummaryComponent.html":{}}}],["this.groupcontactsbyfirstletter(contacts",{"_index":912,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["this.groupedcontacts",{"_index":910,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["this.groupedcontacts[firstletter",{"_index":918,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["this.groupedcontacts[firstletter].push",{"_index":919,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["this.groupedcontacts[letter].find(contact",{"_index":940,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["this.groupedcontacts[letter].sort((a",{"_index":920,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["this.http",{"_index":2264,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{}}}],["this.http.delete(`${this.apiurl}/${id}`).pipe(catcherror(this.handleerror",{"_index":2203,"title":{},"body":{"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{}}}],["this.http.delete(`${this.baseurl}/contact/${contactid",{"_index":129,"title":{},"body":{"injectables/AddContactService.html":{}}}],["this.http.delete(`${this.baseurl}/tasks/${id}/`).pipe(catcherror(this.handleerror",{"_index":2268,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["this.http.get(`${this.apiurl}/${id}`).pipe(catcherror(this.handleerror",{"_index":2188,"title":{},"body":{"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{}}}],["this.http.get(`${this.baseurl}/addcontact",{"_index":121,"title":{},"body":{"injectables/AddContactService.html":{}}}],["this.http.get(`${this.baseurl}/contact/${contactid",{"_index":127,"title":{},"body":{"injectables/AddContactService.html":{}}}],["this.http.get(`${this.baseurl}/tasks/${id}/`).pipe(catcherror(this.handleerror",{"_index":2248,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["this.http.get(`${this.baseurl}/tasks/`).pipe",{"_index":2244,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["this.http.get(this.apiurl",{"_index":464,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["this.http.get(this.apiurl).pipe(catcherror(this.handleerror",{"_index":2185,"title":{},"body":{"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{}}}],["this.http.get(this.protectedurl",{"_index":1449,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.http.get(this.userdetailsurl",{"_index":2499,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.post(`${this.baseurl}/addcontact",{"_index":114,"title":{},"body":{"injectables/AddContactService.html":{}}}],["this.http.post(`${this.baseurl}/tasks",{"_index":2251,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["this.http.post(this.apiurl",{"_index":2190,"title":{},"body":{"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{}}}],["this.http.post(this.loginurl",{"_index":1445,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.http.put(`${this.baseurl}/contact/${contactid",{"_index":131,"title":{},"body":{"injectables/AddContactService.html":{}}}],["this.http.put(url",{"_index":2199,"title":{},"body":{"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{}}}],["this.isaddtaskpage",{"_index":1189,"title":{},"body":{"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["this.isboardpage",{"_index":1188,"title":{},"body":{"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["this.iscontactspage",{"_index":1190,"title":{},"body":{"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["this.isdropdownopen",{"_index":1238,"title":{},"body":{"components/HeaderBarMobileComponent.html":{}}}],["this.ishandsetortablet",{"_index":904,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["this.ispasswordwrong",{"_index":1370,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.issummarypage",{"_index":1187,"title":{},"body":{"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["this.isusernamewrong",{"_index":1371,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.isvisible",{"_index":901,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["this.loadcontact",{"_index":743,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["this.loadcontacts",{"_index":902,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["this.loadstoredcontactdetails",{"_index":908,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["this.loadtasks",{"_index":2332,"title":{},"body":{"components/SummaryComponent.html":{}}}],["this.login",{"_index":1381,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginservice.login(this.email",{"_index":1363,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.nearestduedate",{"_index":2353,"title":{},"body":{"components/SummaryComponent.html":{}}}],["this.overlayvisibilitysubject.asobservable",{"_index":793,"title":{},"body":{"injectables/ContactsOverlayService.html":{}}}],["this.overlayvisibilitysubject.next(isvisible",{"_index":800,"title":{},"body":{"injectables/ContactsOverlayService.html":{}}}],["this.overlayvisibilitysubject.value",{"_index":801,"title":{},"body":{"injectables/ContactsOverlayService.html":{}}}],["this.pad(date.day)}/${this.pad(date.month)}/${date.year",{"_index":1142,"title":{},"body":{"injectables/CustomDateParserFormatter-1.html":{}}}],["this.password",{"_index":1379,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.password).subscribe",{"_index":1364,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.passwordvisible",{"_index":1362,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["this.rememberme",{"_index":1383,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.resetfields",{"_index":1376,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.resetpageflags",{"_index":1184,"title":{},"body":{"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["this.route.params.subscribe(params",{"_index":1035,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["this.route.snapshot.params['id",{"_index":745,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["this.router.events.subscribe(event",{"_index":1183,"title":{},"body":{"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["this.router.navigate(['/addtask",{"_index":1196,"title":{},"body":{"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["this.router.navigate(['/board",{"_index":1197,"title":{},"body":{"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["this.router.navigate(['/contacts",{"_index":764,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["this.router.navigate(['/login",{"_index":365,"title":{},"body":{"guards/AuthGuard.html":{},"components/SignUpComponent.html":{}}}],["this.router.navigate(['/signup",{"_index":1382,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate(['/summary",{"_index":1195,"title":{},"body":{"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{}}}],["this.router.navigatebyurl('/login",{"_index":440,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"components/HeaderBarMobileComponent.html":{}}}],["this.screensizeservice.ishandsetortablet$.subscribe",{"_index":903,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["this.selectedcontact",{"_index":938,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["this.setcurrentuser(user",{"_index":2501,"title":{},"body":{"injectables/UserService.html":{}}}],["this.setpageflag(event.urlafterredirects",{"_index":1185,"title":{},"body":{"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["this.setpageflag(this.router.url",{"_index":1186,"title":{},"body":{"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["this.showeditoverlay",{"_index":1041,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["this.showoverlaysummary",{"_index":2339,"title":{},"body":{"components/SummaryComponent.html":{}}}],["this.signupsuccess",{"_index":2160,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.storedcontactid",{"_index":907,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["this.storetoken(response.token",{"_index":1366,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.tasks",{"_index":2346,"title":{},"body":{"components/SummaryComponent.html":{}}}],["this.tasks.filter(task",{"_index":2349,"title":{},"body":{"components/SummaryComponent.html":{}}}],["this.tasks.foreach(task",{"_index":2360,"title":{},"body":{"components/SummaryComponent.html":{}}}],["this.tasks.length",{"_index":2352,"title":{},"body":{"components/SummaryComponent.html":{}}}],["this.tasks[0",{"_index":2356,"title":{},"body":{"components/SummaryComponent.html":{}}}],["this.user.acceptsprivacypolicy",{"_index":2153,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.user.confirmpassword",{"_index":2158,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.user.email",{"_index":2156,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.user.name",{"_index":2155,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.user.password",{"_index":2157,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.userinitial",{"_index":1236,"title":{},"body":{"components/HeaderBarMobileComponent.html":{}}}],["this.userregistrationservice.registeruser(userdatatosend).subscribe",{"_index":2159,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.userservice",{"_index":2334,"title":{},"body":{"components/SummaryComponent.html":{}}}],["this.userservice.getcurrentuser().subscribe(user",{"_index":1232,"title":{},"body":{"components/HeaderBarMobileComponent.html":{},"components/SummaryComponent.html":{}}}],["this.userservice.setcurrentuser(response.user",{"_index":1368,"title":{},"body":{"components/LoginComponent.html":{}}}],["those",{"_index":397,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["throwerror",{"_index":103,"title":{},"body":{"injectables/AddContactService.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{}}}],["throwerror('something",{"_index":2239,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["throwerror(error",{"_index":120,"title":{},"body":{"injectables/AddContactService.html":{},"injectables/UserRegistrationService.html":{}}}],["throwerror(errormessage",{"_index":2214,"title":{},"body":{"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{}}}],["tickicon",{"_index":2409,"title":{},"body":{"components/SummaryComponent.html":{}}}],["time",{"_index":2309,"title":{},"body":{"components/SummaryComponent.html":{}}}],["title",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["tls",{"_index":1923,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["tmg",{"_index":1276,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["todo",{"_index":2228,"title":{},"body":{"interfaces/Subtask-1.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["toggle",{"_index":1404,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["toggledropdown",{"_index":1211,"title":{},"body":{"components/HeaderBarMobileComponent.html":{}}}],["togglepasswordvisibility",{"_index":1327,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["toggles",{"_index":1227,"title":{},"body":{"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["toggling",{"_index":2128,"title":{},"body":{"components/SignUpComponent.html":{}}}],["token",{"_index":69,"title":{},"body":{"injectables/AddContactService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/UserService.html":{}}}],["tool",{"_index":1245,"title":{},"body":{"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["top",{"_index":585,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["topcontaineraddcontacts",{"_index":609,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{}}}],["touppercase",{"_index":752,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{}}}],["tracking",{"_index":1163,"title":{},"body":{"components/FooterBarComponent.html":{}}}],["tracks",{"_index":1356,"title":{},"body":{"components/LoginComponent.html":{}}}],["trailing",{"_index":2197,"title":{},"body":{"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{}}}],["transform",{"_index":606,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["transition",{"_index":2404,"title":{},"body":{"components/SummaryComponent.html":{}}}],["translate",{"_index":607,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["translate(0",{"_index":1420,"title":{},"body":{"components/LoginComponent.html":{}}}],["translatey(0",{"_index":2173,"title":{},"body":{"components/SignUpComponent.html":{}}}],["translatey(100vh",{"_index":2172,"title":{},"body":{"components/SignUpComponent.html":{}}}],["translatey(80",{"_index":1079,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["transparency",{"_index":1269,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["transparent",{"_index":1405,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["tree",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["tries",{"_index":729,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["triggers",{"_index":1009,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["true",{"_index":302,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/ContactsAddComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["try",{"_index":1387,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["tslib",{"_index":2558,"title":{},"body":{"dependencies.html":{}}}],["ttdsg",{"_index":1651,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["two",{"_index":1137,"title":{},"body":{"injectables/CustomDateParserFormatter-1.html":{}}}],["type",{"_index":47,"title":{},"body":{"injectables/AddContactService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"injectables/ContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/ScreenSizeService.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":934,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["uhrzeit",{"_index":1553,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["um",{"_index":1530,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["umfasst",{"_index":1661,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["umst&auml;nden",{"_index":1595,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["umständen",{"_index":1991,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["unauthenticated",{"_index":340,"title":{},"body":{"guards/AuthGuard.html":{}}}],["unauthorized",{"_index":326,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{}}}],["unber&uuml;hrt",{"_index":1813,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["unberührt",{"_index":2030,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["unbeschadet",{"_index":1869,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["und",{"_index":1583,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["undefined",{"_index":725,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/SummaryComponent.html":{}}}],["underline",{"_index":1390,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["unentgeltlich",{"_index":1578,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["unentgeltliche",{"_index":1886,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["union",{"_index":1920,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["unique",{"_index":449,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{}}}],["uniquesubtasks",{"_index":2255,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["unit",{"_index":2587,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":2208,"title":{},"body":{"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{}}}],["unrechtm&auml;&szlig;ig",{"_index":1897,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["unrechtmäßig",{"_index":2050,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["uns",{"_index":1523,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["unsere",{"_index":1544,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["unserem",{"_index":1964,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["unseren",{"_index":1905,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["unserer",{"_index":1492,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["unseres",{"_index":1760,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["unter",{"_index":1493,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["up",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["up'},{'name",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["up.component",{"_index":248,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["up.component.html",{"_index":2130,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.scss",{"_index":2129,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts",{"_index":2125,"title":{},"body":{"components/SignUpComponent.html":{},"coverage.html":{}}}],["up.component.ts:20",{"_index":2144,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:23",{"_index":2148,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:32",{"_index":2134,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:50",{"_index":2137,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:79",{"_index":2143,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:88",{"_index":2139,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:94",{"_index":2136,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up/sign",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/SignUpComponent.html":{},"coverage.html":{}}}],["upcoming",{"_index":2372,"title":{},"body":{"components/SummaryComponent.html":{}}}],["update",{"_index":17,"title":{},"body":{"injectables/AddContactService.html":{},"components/ContactsEditComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["updatecontact",{"_index":34,"title":{},"body":{"injectables/AddContactService.html":{}}}],["updatecontact(contactid",{"_index":83,"title":{},"body":{"injectables/AddContactService.html":{}}}],["updated",{"_index":87,"title":{},"body":{"injectables/AddContactService.html":{},"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["updatedcontact",{"_index":756,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["updatedtask",{"_index":2263,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["updates",{"_index":85,"title":{},"body":{"injectables/AddContactService.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsViewComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{}}}],["updatesubtask",{"_index":2273,"title":{},"body":{"injectables/SubtaskService.html":{}}}],["updatesubtask(id",{"_index":2194,"title":{},"body":{"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{}}}],["updatetask",{"_index":2451,"title":{},"body":{"injectables/TaskService.html":{}}}],["updatetask(id",{"_index":2254,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["updating",{"_index":132,"title":{},"body":{"injectables/AddContactService.html":{},"injectables/ContactService.html":{},"components/ContactsEditComponent.html":{}}}],["upon",{"_index":418,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{}}}],["urgent",{"_index":2370,"title":{},"body":{"components/SummaryComponent.html":{}}}],["urgentdate",{"_index":2424,"title":{},"body":{"components/SummaryComponent.html":{}}}],["urgenticontextcontainer",{"_index":2422,"title":{},"body":{"components/SummaryComponent.html":{}}}],["urgentshadow",{"_index":2419,"title":{},"body":{"components/SummaryComponent.html":{}}}],["url",{"_index":93,"title":{},"body":{"injectables/AddContactService.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/FooterBarComponent.html":{},"injectables/LoginService.html":{},"components/SidebarComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["url('/assets/img/mail.png",{"_index":653,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["url('/assets/img/person.png",{"_index":648,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/SignUpComponent.html":{}}}],["url('/assets/img/phone.png",{"_index":655,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{}}}],["url.includes('/addtask",{"_index":1193,"title":{},"body":{"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["url.includes('/board",{"_index":1192,"title":{},"body":{"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["url.includes('/contacts",{"_index":1194,"title":{},"body":{"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["url.includes('/summary",{"_index":1191,"title":{},"body":{"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["urls",{"_index":372,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["urltree",{"_index":360,"title":{},"body":{"guards/AuthGuard.html":{}}}],["use",{"_index":2580,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":300,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":324,"title":{},"body":{"guards/AuthGuard.html":{},"components/ContactsOverviewComponent.html":{},"injectables/CustomDateParserFormatter-1.html":{},"components/SignUpComponent.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":353,"title":{"interfaces/User.html":{},"interfaces/User-1.html":{}},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/PrivacyPolicyComponent.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask-1.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user's",{"_index":1223,"title":{},"body":{"components/HeaderBarMobileComponent.html":{},"injectables/LoginService.html":{}}}],["user.name",{"_index":1233,"title":{},"body":{"components/HeaderBarMobileComponent.html":{}}}],["user.name.charat(0).touppercase",{"_index":1237,"title":{},"body":{"components/HeaderBarMobileComponent.html":{}}}],["userdata",{"_index":2473,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["userdatatosend",{"_index":2154,"title":{},"body":{"components/SignUpComponent.html":{}}}],["userdetailsurl",{"_index":2480,"title":{},"body":{"injectables/UserService.html":{}}}],["userinitial",{"_index":1210,"title":{},"body":{"components/HeaderBarMobileComponent.html":{}}}],["username",{"_index":1334,"title":{},"body":{"components/LoginComponent.html":{}}}],["userregistrationservice",{"_index":233,"title":{"injectables/UserRegistrationService.html":{}},"body":{"modules/AppModule.html":{},"components/SignUpComponent.html":{},"injectables/UserRegistrationService.html":{},"coverage.html":{},"overview.html":{}}}],["users",{"_index":341,"title":{},"body":{"guards/AuthGuard.html":{},"components/ResetPasswordComponent.html":{}}}],["userservice",{"_index":234,"title":{"injectables/UserService.html":{}},"body":{"modules/AppModule.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"components/SummaryComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["uses",{"_index":2477,"title":{},"body":{"injectables/UserService.html":{}}}],["using",{"_index":722,"title":{},"body":{"components/ContactsEditComponent.html":{},"injectables/CustomDateParserFormatter.html":{},"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["usually",{"_index":477,"title":{},"body":{"interfaces/Contact.html":{},"interfaces/Contact-1.html":{}}}],["uuml;ber",{"_index":1580,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["uuml;berblick",{"_index":1467,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["uuml;bermitteln",{"_index":1947,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["uuml;bermittlung",{"_index":1779,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["uuml;berpr&uuml;fen",{"_index":1894,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["uuml;bertragung",{"_index":1744,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["uuml;berwiegen",{"_index":1843,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["uuml;brigen",{"_index":1963,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["valid",{"_index":576,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{}}}],["validation",{"_index":2127,"title":{},"body":{"components/SignUpComponent.html":{}}}],["validators",{"_index":2152,"title":{},"body":{"components/SignUpComponent.html":{}}}],["value",{"_index":90,"title":{},"body":{"injectables/AddContactService.html":{},"components/AppComponent.html":{},"injectables/CategoryService.html":{},"injectables/ContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/ScreenSizeService.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["value.trim().split",{"_index":1116,"title":{},"body":{"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{}}}],["values",{"_index":540,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["var",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["variable",{"_index":2538,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2610,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":2100,"title":{},"body":{"components/SidebarComponent.html":{}}}],["verantwortlich",{"_index":1501,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verantwortliche",{"_index":1699,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verantwortlichen",{"_index":1514,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verarbeiten",{"_index":1736,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verarbeitet",{"_index":1741,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verarbeitung",{"_index":1597,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verbindung",{"_index":1854,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verbleiben",{"_index":1718,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verifying",{"_index":1435,"title":{},"body":{"injectables/LoginService.html":{}}}],["verlangen",{"_index":1590,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verpflichtet",{"_index":1786,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verpflichtung",{"_index":1757,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verschiedene",{"_index":1677,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verschiedenen",{"_index":1773,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verschl&uuml;sselte",{"_index":1935,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verschl&uuml;sselung",{"_index":1924,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verschlüsselte",{"_index":2059,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verschlüsselung",{"_index":2057,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["version",{"_index":2567,"title":{},"body":{"index.html":{},"properties.html":{}}}],["verst&ouml;&szlig;en",{"_index":1859,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["versto&szlig;es",{"_index":1867,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verstoßes",{"_index":2043,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verstößen",{"_index":2040,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verteidigung",{"_index":1847,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["vertrag",{"_index":1801,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["vertrags",{"_index":1798,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["vertragserf&uuml;llung",{"_index":1750,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["vertragserfüllung",{"_index":2018,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["vertraulich",{"_index":1672,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["vertraulicher",{"_index":1928,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verwaltungsrechtlicher",{"_index":1871,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verwendet",{"_index":1571,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verwendung",{"_index":1630,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["via",{"_index":1748,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"index.html":{}}}],["viele",{"_index":1805,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["view",{"_index":833,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/SummaryComponent.html":{}}}],["view'},{'name",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["view.component",{"_index":275,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["view.component.html",{"_index":996,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["view.component.scss",{"_index":995,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["view.component.ts",{"_index":989,"title":{},"body":{"components/ContactsViewComponent.html":{},"coverage.html":{}}}],["view.component.ts:103",{"_index":1019,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["view.component.ts:119",{"_index":1030,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["view.component.ts:133",{"_index":1021,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["view.component.ts:148",{"_index":1015,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["view.component.ts:172",{"_index":1029,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["view.component.ts:190",{"_index":1023,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["view.component.ts:28",{"_index":1008,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["view.component.ts:31",{"_index":1010,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["view.component.ts:34",{"_index":1031,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["view.component.ts:37",{"_index":1007,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["view.component.ts:40",{"_index":1012,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["view.component.ts:43",{"_index":1014,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["view.component.ts:46",{"_index":1011,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["view.component.ts:49",{"_index":1006,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["view.component.ts:71",{"_index":1027,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["view.component.ts:91",{"_index":1026,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["view/contacts",{"_index":274,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ContactsViewComponent.html":{},"coverage.html":{}}}],["visibility",{"_index":782,"title":{},"body":{"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask-1.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["visible",{"_index":792,"title":{},"body":{"injectables/ContactsOverlayService.html":{}}}],["void",{"_index":495,"title":{},"body":{"injectables/ContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{},"injectables/UserService.html":{}}}],["vom",{"_index":1812,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["von",{"_index":1627,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["vor",{"_index":1548,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["vorgenommen",{"_index":1906,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["vorliegende",{"_index":1678,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["vorvertraglicher",{"_index":1752,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["website",{"_index":1477,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["websitebetreiber",{"_index":1507,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["wechselt",{"_index":1942,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["weight",{"_index":977,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["weisen",{"_index":1684,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["weiter",{"_index":1783,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["weiteren",{"_index":1598,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["weitergabe",{"_index":1787,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["welche",{"_index":1572,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["welchem",{"_index":1682,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["wenden",{"_index":1608,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["wenn",{"_index":1474,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["wer",{"_index":1499,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["werbung",{"_index":1852,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["werden",{"_index":1485,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["wessen",{"_index":1910,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["whether",{"_index":362,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsViewComponent.html":{},"miscellaneous/variables.html":{}}}],["white",{"_index":668,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["wichtigen",{"_index":1917,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["widerruf",{"_index":1804,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["widerrufbar",{"_index":1662,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["widerrufen",{"_index":1593,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["widersprechen",{"_index":1855,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["widerspruch",{"_index":1825,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["widerspruchsrecht",{"_index":1814,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["width",{"_index":586,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"injectables/ScreenSizeService.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["wie",{"_index":1516,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["window",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["window.open('/legal",{"_index":2123,"title":{},"body":{"components/SidebarComponent.html":{}}}],["window.open('/privacy",{"_index":2121,"title":{},"body":{"components/SidebarComponent.html":{}}}],["wir",{"_index":1518,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["wird",{"_index":1562,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["within",{"_index":837,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/SummaryComponent.html":{}}}],["without",{"_index":398,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{}}}],["wof&uuml;r",{"_index":1559,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["wofür",{"_index":1985,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["works",{"_index":2072,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["wrong",{"_index":1386,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["wurde",{"_index":1647,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["x.tostring(16",{"_index":566,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["y",{"_index":1975,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["year",{"_index":1118,"title":{},"body":{"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{}}}],["yyyy",{"_index":1102,"title":{},"body":{"injectables/CustomDateParserFormatter.html":{}}}],["z",{"_index":595,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["z.&nbsp;b",{"_index":1529,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["zeit",{"_index":1893,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["zero",{"_index":1133,"title":{},"body":{"injectables/CustomDateParserFormatter-1.html":{}}}],["zone.js",{"_index":2560,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["zu",{"_index":1566,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["zugriff",{"_index":1655,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["zukommen",{"_index":1950,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["zukunft",{"_index":1592,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["zul&auml;ssigen",{"_index":1726,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["zulässigen",{"_index":2013,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["zum",{"_index":1489,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["zur",{"_index":1513,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["zus&auml;tzlich",{"_index":1749,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["zusammen",{"_index":1776,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["zusammenh&auml;ngt",{"_index":1961,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["zusammenhängt",{"_index":2062,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["zust&auml;ndigen",{"_index":1603,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["zuständigen",{"_index":1993,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["zusätzlich",{"_index":2017,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["zuverl&auml;ssigen",{"_index":1642,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["zuverlässigen",{"_index":1999,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["zweck",{"_index":1584,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["zwecke",{"_index":1706,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["zwecks",{"_index":1955,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["zwingende",{"_index":1838,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["zwischen",{"_index":1904,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/AddContactService.html":{"url":"injectables/AddContactService.html","title":"injectable - AddContactService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AddContactService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/add-contact.service.ts\n        \n\n\n            \n                Description\n            \n            \n                AddContactService is responsible for managing contact data by providing\nmethods to add, fetch, update, and delete contacts. It includes authentication\nin the header of each request.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addContact\n                            \n                            \n                                    Private\n                                createAuthorizationHeader\n                            \n                            \n                                deleteContact\n                            \n                            \n                                getContactById\n                            \n                            \n                                getContacts\n                            \n                            \n                                updateContact\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/add-contact.service.ts:19\n                            \n                        \n\n                \n                    \n                            Constructor to inject HttpClient for making HTTP requests.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe HttpClient instance for making HTTP requests.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addContact\n                        \n                    \n                \n            \n            \n                \naddContact(contactData: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/add-contact.service.ts:34\n                        \n                    \n\n\n            \n                \n                        Adds a new contact with the provided contact data.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                contactData\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nObject containing the contact's information.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that emits the response from the API.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createAuthorizationHeader\n                        \n                    \n                \n            \n            \n                \n                        \n                    createAuthorizationHeader()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/add-contact.service.ts:64\n                        \n                    \n\n\n            \n                \n                        Creates an HTTP Authorization header with the stored authentication token.\n\n\n                        \n                            Returns :     HttpHeaders\n\n                        \n                            \n                                An HttpHeaders object containing the Authorization header.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteContact\n                        \n                    \n                \n            \n            \n                \ndeleteContact(contactId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/add-contact.service.ts:94\n                        \n                    \n\n\n            \n                \n                        Deletes a contact by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                contactId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the contact to delete.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that emits the response from the API.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getContactById\n                        \n                    \n                \n            \n            \n                \ngetContactById(contactId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/add-contact.service.ts:78\n                        \n                    \n\n\n            \n                \n                        Fetches a contact by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                contactId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the contact to fetch.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that emits the contact's data.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getContacts\n                        \n                    \n                \n            \n            \n                \ngetContacts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/add-contact.service.ts:49\n                        \n                    \n\n\n            \n                \n                        Retrieves the list of contacts from the API.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that emits the list of contacts.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateContact\n                        \n                    \n                \n            \n            \n                \nupdateContact(contactId: number, contactData: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/add-contact.service.ts:111\n                        \n                    \n\n\n            \n                \n                        Updates an existing contact with new data.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                contactId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the contact to update.\n\n\n                                            \n                                        \n                                        \n                                                contactData\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nObject containing the updated contact information.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that emits the response from the API.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://join.server.fabianduerr.com'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/add-contact.service.ts:19\n                        \n                    \n\n            \n                \n                    Base URL for the API endpoints.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, pipe } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\n\n\n/**\n * AddContactService is responsible for managing contact data by providing\n * methods to add, fetch, update, and delete contacts. It includes authentication\n * in the header of each request.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class AddContactService {\n\n  /** Base URL for the API endpoints. */\n  private baseUrl = 'https://join.server.fabianduerr.com';\n\n\n    /**\n   * Constructor to inject HttpClient for making HTTP requests.\n   * @param http - The HttpClient instance for making HTTP requests.\n   */\n  constructor(private http: HttpClient) {}\n\n\n    /**\n   * Adds a new contact with the provided contact data.\n   * @param contactData - Object containing the contact's information.\n   * @returns An Observable that emits the response from the API.\n   */\n  addContact(contactData: any): Observable {\n    const headers = this.createAuthorizationHeader();\n    return this.http.post(`${this.baseUrl}/addcontact/`, contactData, { headers }).pipe(\n      catchError(error => {\n        console.error('Error occurred while adding contact:', error);\n        return throwError(error);\n      }),\n    );\n  }\n\n\n    /**\n   * Retrieves the list of contacts from the API.\n   * @returns An Observable that emits the list of contacts.\n   */\n  getContacts(): Observable {\n    const headers = this.createAuthorizationHeader();\n    return this.http.get(`${this.baseUrl}/addcontact/`, { headers }).pipe(\n      catchError(error => {\n        console.error('Error occurred while fetching contacts:', error);\n        return throwError(error);\n      }),\n    );\n  }\n\n\n  /**\n   * Creates an HTTP Authorization header with the stored authentication token.\n   * @returns An HttpHeaders object containing the Authorization header.\n   */\n  private createAuthorizationHeader(): HttpHeaders {\n    const token = localStorage.getItem('auth_token') || sessionStorage.getItem('auth_token');\n    return new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: `Token ${token}`,\n    });\n  }\n\n\n    /**\n   * Fetches a contact by its ID.\n   * @param contactId - The ID of the contact to fetch.\n   * @returns An Observable that emits the contact's data.\n   */\n  getContactById(contactId: number): Observable {\n    const headers = this.createAuthorizationHeader();\n    return this.http.get(`${this.baseUrl}/contact/${contactId}/`, { headers }).pipe(\n      catchError(error => {\n        console.error(`Error occurred while fetching contact with ID ${contactId}:`, error);\n        return throwError(error);\n      }),\n    );\n  }\n\n\n    /**\n   * Deletes a contact by its ID.\n   * @param contactId - The ID of the contact to delete.\n   * @returns An Observable that emits the response from the API.\n   */\n  deleteContact(contactId: number): Observable {\n    const headers = this.createAuthorizationHeader();\n    return this.http.delete(`${this.baseUrl}/contact/${contactId}/`, { headers }).pipe(\n      catchError(error => {\n        console.error(`Error occurred while deleting contact with ID ${contactId}:`, error);\n        return throwError(error);\n      }),\n    );\n  }\n\n\n    /**\n   * Updates an existing contact with new data.\n   * @param contactId - The ID of the contact to update.\n   * @param contactData - Object containing the updated contact information.\n   * @returns An Observable that emits the response from the API.\n   */\n  updateContact(contactId: number, contactData: any): Observable {\n    const headers = this.createAuthorizationHeader();\n    return this.http.put(`${this.baseUrl}/contact/${contactId}/`, contactData, { headers }).pipe(\n      catchError(error => {\n        console.error(`Error occurred while updating contact with ID ${contactId}:`, error);\n        return throwError(error);\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Root component of the application, serving as the main entry point.\nIt sets up the initial structure and layout for the app.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'join2.0_angular'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:15\n                        \n                    \n\n            \n                \n                    Title of the application, displayed in the browser tab or window.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * Root component of the application, serving as the main entry point.\n * It sets up the initial structure and layout for the app.\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n\n  /** Title of the application, displayed in the browser tab or window. */\n  title = 'join2.0_angular';\n}\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'BoardTaskOverlayComponent', 'selector': 'app-board-task-overlay'},{'name': 'ContactsAddComponent', 'selector': 'app-contacts-add'},{'name': 'ContactsEditComponent', 'selector': 'app-contacts-edit'},{'name': 'ContactsOverviewComponent', 'selector': 'app-contacts-overview'},{'name': 'ContactsViewComponent', 'selector': 'app-contacts-view'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'FooterBarComponent', 'selector': 'app-footer-bar'},{'name': 'HeaderBarMobileComponent', 'selector': 'app-header-bar-mobile'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'SummaryComponent', 'selector': 'app-summary'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAddTaskComponent\n\nAddTaskComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddTaskComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBoardComponent\n\nBoardComponent\n\nAppModule -->\n\nBoardComponent->AppModule\n\n\n\n\n\nBoardTaskOverlayComponent\n\nBoardTaskOverlayComponent\n\nAppModule -->\n\nBoardTaskOverlayComponent->AppModule\n\n\n\n\n\nContactsAddComponent\n\nContactsAddComponent\n\nAppModule -->\n\nContactsAddComponent->AppModule\n\n\n\n\n\nContactsEditComponent\n\nContactsEditComponent\n\nAppModule -->\n\nContactsEditComponent->AppModule\n\n\n\n\n\nContactsOverviewComponent\n\nContactsOverviewComponent\n\nAppModule -->\n\nContactsOverviewComponent->AppModule\n\n\n\n\n\nContactsViewComponent\n\nContactsViewComponent\n\nAppModule -->\n\nContactsViewComponent->AppModule\n\n\n\n\n\nEditTaskComponent\n\nEditTaskComponent\n\nAppModule -->\n\nEditTaskComponent->AppModule\n\n\n\n\n\nFooterBarComponent\n\nFooterBarComponent\n\nAppModule -->\n\nFooterBarComponent->AppModule\n\n\n\n\n\nHeaderBarMobileComponent\n\nHeaderBarMobileComponent\n\nAppModule -->\n\nHeaderBarMobileComponent->AppModule\n\n\n\n\n\nLegalNoticeComponent\n\nLegalNoticeComponent\n\nAppModule -->\n\nLegalNoticeComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nPrivacyPolicyComponent\n\nPrivacyPolicyComponent\n\nAppModule -->\n\nPrivacyPolicyComponent->AppModule\n\n\n\n\n\nResetPasswordComponent\n\nResetPasswordComponent\n\nAppModule -->\n\nResetPasswordComponent->AppModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nAppModule -->\n\nSidebarComponent->AppModule\n\n\n\n\n\nSignUpComponent\n\nSignUpComponent\n\nAppModule -->\n\nSignUpComponent->AppModule\n\n\n\n\n\nSummaryComponent\n\nSummaryComponent\n\nAppModule -->\n\nSummaryComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\n\n\nUserRegistrationService\n\nUserRegistrationService\n\nAppModule -->\n\nUserRegistrationService->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nAppModule -->\n\nUserService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AddTaskComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            BoardComponent\n                        \n                        \n                            BoardTaskOverlayComponent\n                        \n                        \n                            ContactsAddComponent\n                        \n                        \n                            ContactsEditComponent\n                        \n                        \n                            ContactsOverviewComponent\n                        \n                        \n                            ContactsViewComponent\n                        \n                        \n                            EditTaskComponent\n                        \n                        \n                            FooterBarComponent\n                        \n                        \n                            HeaderBarMobileComponent\n                        \n                        \n                            LegalNoticeComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            PrivacyPolicyComponent\n                        \n                        \n                            ResetPasswordComponent\n                        \n                        \n                            SidebarComponent\n                        \n                        \n                            SignUpComponent\n                        \n                        \n                            SummaryComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AuthInterceptor\n                        \n                        \n                            UserRegistrationService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { SignUpComponent } from './sign-up/sign-up.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FooterBarComponent } from './footer-bar/footer-bar.component';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { SummaryComponent } from './summary/summary.component';\nimport { HeaderBarMobileComponent } from './header-bar-mobile/header-bar-mobile.component';\nimport { AddTaskComponent } from './add-task/add-task.component';\nimport { NgbModule, NgbDateParserFormatter } from '@ng-bootstrap/ng-bootstrap';\nimport { NgbDatepickerModule } from '@ng-bootstrap/ng-bootstrap';\nimport { CustomDateParserFormatter } from './custom-dateparser-formatter';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { UserService } from 'src/app/services/user.service';\nimport { UserRegistrationService } from 'src/app/services/auth.service';\nimport { ContactsViewComponent } from './contacts/contacts-view/contacts-view.component';\nimport { ContactsOverviewComponent } from './contacts/contacts-overview/contacts-overview.component';\nimport { ContactsAddComponent } from './contacts/contacts-add/contacts-add.component';\nimport { ContactsEditComponent } from './contacts/contacts-edit/contacts-edit.component'; // Adjust path as needed\nimport { AuthInterceptor } from 'src/app/auth.interceptor';\nimport { BoardComponent } from './board/board.component';\nimport { BoardTaskOverlayComponent } from './board-task-overlay/board-task-overlay.component';\nimport { EditTaskComponent } from './edit-task/edit-task.component';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { PrivacyPolicyComponent } from './imprint/privacy-policy/privacy-policy.component';\nimport { LegalNoticeComponent } from './imprint/legal-notice/legal-notice.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    SignUpComponent,\n    ResetPasswordComponent,\n    FooterBarComponent,\n    SidebarComponent,\n    SummaryComponent,\n    HeaderBarMobileComponent,\n    AddTaskComponent,\n    ContactsViewComponent,\n    ContactsOverviewComponent,\n    ContactsAddComponent,\n    ContactsEditComponent,\n    BoardComponent,\n    BoardTaskOverlayComponent,\n    EditTaskComponent,\n    PrivacyPolicyComponent,\n    LegalNoticeComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    NgbModule,\n    NgbDatepickerModule,\n    HttpClientModule,\n    FormsModule,\n    DragDropModule,\n  ],\n  providers: [\n    { provide: NgbDateParserFormatter, useClass: CustomDateParserFormatter },\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n    UserService,\n    UserRegistrationService,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './/login/login.component';\nimport { SignUpComponent } from './sign-up/sign-up.component';\nimport { SummaryComponent } from './summary/summary.component';\nimport { AddTaskComponent } from './add-task/add-task.component';\nimport { ContactsOverviewComponent } from './contacts/contacts-overview/contacts-overview.component';\nimport { ContactsViewComponent } from './contacts/contacts-view/contacts-view.component';\nimport { BoardComponent } from './board/board.component';\nimport { LegalNoticeComponent } from './imprint/legal-notice/legal-notice.component';\nimport { PrivacyPolicyComponent } from './imprint/privacy-policy/privacy-policy.component';\n\nimport { AuthGuard } from './auth.guard';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'login', pathMatch: 'full' },\n  { path: 'login', component: LoginComponent },\n  { path: 'signup', component: SignUpComponent },\n  { path: 'summary', component: SummaryComponent, canActivate: [AuthGuard] },\n  { path: 'addtask', component: AddTaskComponent, canActivate: [AuthGuard] },\n  { path: 'contacts', component: ContactsOverviewComponent, canActivate: [AuthGuard] },\n  { path: 'contacts-detail/:id', component: ContactsViewComponent, canActivate: [AuthGuard] },\n  { path: 'board', component: BoardComponent, canActivate: [AuthGuard] },\n  { path: 'legal-notice', component: LegalNoticeComponent },\n  { path: 'privacy-policy', component: PrivacyPolicyComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    AuthGuard is used to protect routes from unauthorized access.\nIt checks for an authentication token and redirects to the login page if none is found.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth.guard.ts:19\n                            \n                        \n\n                \n                    \n                            Constructor that injects the Angular Router for navigation.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nRouter to redirect unauthenticated users to the login page.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth.guard.ts:37\n                        \n                    \n\n\n            \n                \n                        Determines if a route can be activated based on the presence of an auth token.\nRedirects to the login page if the user is not authenticated.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                        ActivatedRouteSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe route that is being accessed.\n\n\n                                            \n                                        \n                                        \n                                                state\n                                            \n                                                        RouterStateSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe current router state.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable | Promise | boolean | UrlTree\n\n                        \n                            \n                                A boolean or UrlTree indicating whether navigation is allowed.\n\n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  Router,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\n\n\n/**\n * AuthGuard is used to protect routes from unauthorized access.\n * It checks for an authentication token and redirects to the login page if none is found.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n\n\n    /**\n   * Constructor that injects the Angular Router for navigation.\n   * @param router - Router to redirect unauthenticated users to the login page.\n   */\n  constructor(private router: Router) {}\n\n\n\n    /**\n   * Determines if a route can be activated based on the presence of an auth token.\n   * Redirects to the login page if the user is not authenticated.\n   * @param route - The route that is being accessed.\n   * @param state - The current router state.\n   * @returns A boolean or UrlTree indicating whether navigation is allowed.\n   */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot,\n  ): Observable | Promise | boolean | UrlTree {\n    const token = localStorage.getItem('auth_token') || sessionStorage.getItem('auth_token');\n    if (!token) {\n      // Redirect to login page\n      this.router.navigate(['/login']);\n      return false;\n    }\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthInterceptor.html":{"url":"interceptors/AuthInterceptor.html","title":"interceptor - AuthInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                AuthInterceptor adds an Authorization header with a token to each HTTP request,\nexcept for requests to excluded URLs (e.g., signup and login endpoints).\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/auth.interceptor.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth.interceptor.ts:22\n                        \n                    \n\n\n            \n                \n                        Intercepts HTTP requests to include an Authorization token, if available.\nExcludes specific URLs such as signup and login.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        HttpRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe original HTTP request.\n\n\n                                            \n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe next handler in the HTTP chain.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                An Observable of the HTTP event, with the Authorization header added if needed.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n\n/**\n * AuthInterceptor adds an Authorization header with a token to each HTTP request,\n * except for requests to excluded URLs (e.g., signup and login endpoints).\n */\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor() {}\n\n\n    /**\n   * Intercepts HTTP requests to include an Authorization token, if available.\n   * Excludes specific URLs such as signup and login.\n   * @param req - The original HTTP request.\n   * @param next - The next handler in the HTTP chain.\n   * @returns An Observable of the HTTP event, with the Authorization header added if needed.\n   */\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    const excludedUrls = ['/signup/', '/login/'];\n\n\n\n    /**\n * Checks if the request URL is in the list of excluded URLs, bypassing authentication for those routes.\n * @param req - The original HTTP request.\n * @param next - The next handler in the HTTP request chain.\n * @returns Observable of the HTTP event, with or without the Authorization header.\n */\n    if (excludedUrls.some(url => req.url.includes(url))) {\n      return next.handle(req);\n    }\n\n\n    /**\n * Retrieves the authentication token from sessionStorage or localStorage, if available.\n */\n    const authToken = sessionStorage.getItem('auth_token') || localStorage.getItem('auth_token');\n\n\n    /**\n * If an auth token is present, clones the request with an Authorization header and passes it to the next handler.\n * If no token is found, passes the original request without modification.\n */\n    if (authToken) {\n      const authReq = req.clone({\n        setHeaders: { Authorization: `Token ${authToken}` },\n      });\n      return next.handle(authReq);\n    }\n    return next.handle(req);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthInterceptorService.html":{"url":"interceptors/AuthInterceptorService.html","title":"interceptor - AuthInterceptorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthInterceptorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth-interceptor.service.ts\n        \n\n\n            \n                Description\n            \n            \n                AuthInterceptorService intercepts HTTP requests to add an authorization token\nand redirects to the login page if the user is unauthorized (401 error).\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth-interceptor.service.ts:20\n                            \n                        \n\n                \n                    \n                            Constructor to inject the Router for navigation upon authentication failure.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAngular Router to navigate on unauthorized access.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth-interceptor.service.ts:37\n                        \n                    \n\n\n            \n                \n                        Intercepts HTTP requests to add an Authorization header with a token, if available.\nHandles errors, specifically redirecting to login on 401 Unauthorized errors.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        HttpRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe outgoing HTTP request to be intercepted.\n\n\n                                            \n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe next interceptor in the chain or the final backend handler.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                An Observable of the HTTP event with authorization headers applied, if a token is available.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpErrorResponse,\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable, catchError, throwError } from 'rxjs';\n\n\n/**\n * AuthInterceptorService intercepts HTTP requests to add an authorization token\n * and redirects to the login page if the user is unauthorized (401 error).\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthInterceptorService implements HttpInterceptor {\n\n\n    /**\n   * Constructor to inject the Router for navigation upon authentication failure.\n   * @param router - Angular Router to navigate on unauthorized access.\n   */\n  constructor(private router: Router) {}\n\n\n    /**\n   * Intercepts HTTP requests to add an Authorization header with a token, if available.\n   * Handles errors, specifically redirecting to login on 401 Unauthorized errors.\n   * @param request - The outgoing HTTP request to be intercepted.\n   * @param next - The next interceptor in the chain or the final backend handler.\n   * @returns An Observable of the HTTP event with authorization headers applied, if a token is available.\n   */\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n    const token = localStorage.getItem('token');\n    if (token) {\n      request = request.clone({\n        setHeaders: { Authorization: `Token ${token}` },\n      });\n    }\n\n    return next.handle(request).pipe(\n      catchError(err => {\n        if (err instanceof HttpErrorResponse) {\n          if (err.status === 401) {\n            this.router.navigateByUrl('/login');\n          }\n        }\n        return throwError(() => err);\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Category.html":{"url":"interfaces/Category.html","title":"interface - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/category.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents a Category with its ID, name, and associated color.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Color associated with the category, represented as a string.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique identifier for the category.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Name of the category.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n\n/**\n * Represents a Category with its ID, name, and associated color.\n */\nexport interface Category {\n\n  /** Unique identifier for the category. */\n  id: number;\n\n  /** Name of the category. */\n  name: string;\n\n  /** Color associated with the category, represented as a string. */\n  color: string;\n}\n\n\n/**\n * CategoryService handles retrieval of categories from the server,\n * providing an observable that emits the list of categories.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class CategoryService {\n\n    /** API URL for accessing category data. */\n  private apiUrl = `${environment.apiUrl}/categories`;\n\n\n    /**\n   * Constructor to inject HttpClient for making HTTP requests.\n   * @param http - HttpClient instance for sending requests to the API.\n   */\n  constructor(private http: HttpClient) {}\n\n\n    /**\n   * Retrieves the list of categories from the server.\n   * @returns An Observable that emits an array of Category objects.\n   */\n  getCategories(): Observable {\n    return this.http.get(this.apiUrl);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CategoryService.html":{"url":"injectables/CategoryService.html","title":"injectable - CategoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CategoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/category.service.ts\n        \n\n\n            \n                Description\n            \n            \n                CategoryService handles retrieval of categories from the server,\nproviding an observable that emits the list of categories.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCategories\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/category.service.ts:33\n                            \n                        \n\n                \n                    \n                            Constructor to inject HttpClient for making HTTP requests.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nHttpClient instance for sending requests to the API.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCategories\n                        \n                    \n                \n            \n            \n                \ngetCategories()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/category.service.ts:47\n                        \n                    \n\n\n            \n                \n                        Retrieves the list of categories from the server.\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits an array of Category objects.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${environment.apiUrl}/categories`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/category.service.ts:33\n                        \n                    \n\n            \n                \n                    API URL for accessing category data.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n\n/**\n * Represents a Category with its ID, name, and associated color.\n */\nexport interface Category {\n\n  /** Unique identifier for the category. */\n  id: number;\n\n  /** Name of the category. */\n  name: string;\n\n  /** Color associated with the category, represented as a string. */\n  color: string;\n}\n\n\n/**\n * CategoryService handles retrieval of categories from the server,\n * providing an observable that emits the list of categories.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class CategoryService {\n\n    /** API URL for accessing category data. */\n  private apiUrl = `${environment.apiUrl}/categories`;\n\n\n    /**\n   * Constructor to inject HttpClient for making HTTP requests.\n   * @param http - HttpClient instance for sending requests to the API.\n   */\n  constructor(private http: HttpClient) {}\n\n\n    /**\n   * Retrieves the list of categories from the server.\n   * @returns An Observable that emits an array of Category objects.\n   */\n  getCategories(): Observable {\n    return this.http.get(this.apiUrl);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Contact.html":{"url":"interfaces/Contact.html","title":"interface - Contact","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Contact\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/assets/models/contact.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a contact with essential information for identification and communication.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            initials\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            phone\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Display color associated with the contact, represented as a string.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Email address of the contact.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique identifier for the contact.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initials\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initials:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Initials of the contact, usually derived from the name.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Full name of the contact.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Phone number of the contact.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Contact {\n\n    /** Unique identifier for the contact. */\n  id: number;\n\n  /** Full name of the contact. */\n  name: string;\n\n    /** Initials of the contact, usually derived from the name. */\n  initials: string;\n\n  /** Email address of the contact. */\n  email: string;\n\n    /** Phone number of the contact. */\n  phone: string;\n\n  /** Display color associated with the contact, represented as a string. */\n  color: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Contact-1.html":{"url":"interfaces/Contact-1.html","title":"interface - Contact-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Contact\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            dist/join2.0_angular/assets/models/contact.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a contact with essential information for identification and communication.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            initials\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            phone\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Display color associated with the contact, represented as a string.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Email address of the contact.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique identifier for the contact.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initials\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initials:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Initials of the contact, usually derived from the name.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Full name of the contact.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Phone number of the contact.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Contact {\n\n    /** Unique identifier for the contact. */\n  id: number;\n\n  /** Full name of the contact. */\n  name: string;\n\n    /** Initials of the contact, usually derived from the name. */\n  initials: string;\n\n  /** Email address of the contact. */\n  email: string;\n\n    /** Phone number of the contact. */\n  phone: string;\n\n  /** Display color associated with the contact, represented as a string. */\n  color: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ContactService.html":{"url":"injectables/ContactService.html","title":"injectable - ContactService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ContactService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/contact.service.ts\n        \n\n\n            \n                Description\n            \n            \n                ContactService is responsible for managing the state of the contact being edited.\nIt provides methods to set and retrieve the current contact for editing.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                contactSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getContactToEdit\n                            \n                            \n                                setContactToEdit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getContactToEdit\n                        \n                    \n                \n            \n            \n                \ngetContactToEdit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/contact.service.ts:32\n                        \n                    \n\n\n            \n                \n                        Retrieves an observable of the current contact being edited.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that emits the Contact object or null if no contact is set.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setContactToEdit\n                        \n                    \n                \n            \n            \n                \nsetContactToEdit(contact: Contact)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/contact.service.ts:23\n                        \n                    \n\n\n            \n                \n                        Sets the contact to be edited by updating the contactSubject.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                contact\n                                            \n                                                            Contact\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe Contact object to set as the current contact for editing.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        contactSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/contact.service.ts:16\n                        \n                    \n\n            \n                \n                    BehaviorSubject that holds the contact currently being edited.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { Contact } from 'src/assets/models/contact.model'; // Adjust path as necessary\n\n\n/**\n * ContactService is responsible for managing the state of the contact being edited.\n * It provides methods to set and retrieve the current contact for editing.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ContactService {\n\n  /** BehaviorSubject that holds the contact currently being edited. */\n  private contactSubject = new BehaviorSubject(null);\n\n\n    /**\n   * Sets the contact to be edited by updating the contactSubject.\n   * @param contact - The Contact object to set as the current contact for editing.\n   */\n  setContactToEdit(contact: Contact): void {\n    this.contactSubject.next(contact);\n  }\n\n\n    /**\n   * Retrieves an observable of the current contact being edited.\n   * @returns An Observable that emits the Contact object or null if no contact is set.\n   */\n  getContactToEdit(): Observable {\n    return this.contactSubject.asObservable();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContactsAddComponent.html":{"url":"components/ContactsAddComponent.html","title":"component - ContactsAddComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ContactsAddComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/contacts/contacts-add/contacts-add.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for adding new contacts. Manages contact form data and submission.\nEmits events when a contact is successfully added or when the form is closed.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-contacts-add\n            \n\n\n\n            \n                styleUrls\n                ./contacts-add.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./contacts-add.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addContactSuccess\n                            \n                            \n                                contactData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeComponent\n                            \n                            \n                                generateRandomDarkColor\n                            \n                            \n                                submitContactForm\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                contactAdded\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(addContactService: AddContactService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/contacts/contacts-add/contacts-add.component.ts:32\n                            \n                        \n\n                \n                    \n                            Constructor to inject services for contact management and navigation.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        addContactService\n                                                  \n                                                        \n                                                                        AddContactService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService for adding contacts.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAngular Router for navigation.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/contacts/contacts-add/contacts-add.component.ts:32\n                            \n                        \n                \n                    \n                        Event emitted when the contact add component is closed.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        contactAdded\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/contacts/contacts-add/contacts-add.component.ts:29\n                            \n                        \n                \n                    \n                        Event emitted when a contact is successfully added, passing a boolean value.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeComponent\n                        \n                    \n                \n            \n            \n                \ncloseComponent()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contacts/contacts-add/contacts-add.component.ts:93\n                        \n                    \n\n\n            \n                \n                        Emits the close event to signal that the component should be closed.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateRandomDarkColor\n                        \n                    \n                \n            \n            \n                \ngenerateRandomDarkColor()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contacts/contacts-add/contacts-add.component.ts:74\n                        \n                    \n\n\n            \n                \n                        Generates a random dark color in HEX format.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                A hex color string with dark RGB values.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitContactForm\n                        \n                    \n                \n            \n            \n                \nsubmitContactForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contacts/contacts-add/contacts-add.component.ts:50\n                        \n                    \n\n\n            \n                \n                        Submits the contact form data to add a new contact.\nGenerates a random dark color if none is provided, then emits events on success.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addContactSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/contacts/contacts-add/contacts-add.component.ts:18\n                        \n                    \n\n            \n                \n                    Flag indicating if a contact has been successfully added.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        contactData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    name: '',\n    email: '',\n    phone: '',\n    color: '',\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/contacts/contacts-add/contacts-add.component.ts:21\n                        \n                    \n\n            \n                \n                    Data model for storing contact information from the form.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Output } from '@angular/core';\nimport { AddContactService } from 'src/app/services/add-contact.service';\nimport { Router } from '@angular/router';\n\n\n/**\n * Component for adding new contacts. Manages contact form data and submission.\n * Emits events when a contact is successfully added or when the form is closed.\n */\n@Component({\n  selector: 'app-contacts-add',\n  templateUrl: './contacts-add.component.html',\n  styleUrls: ['./contacts-add.component.scss'],\n})\nexport class ContactsAddComponent {\n\n    /** Flag indicating if a contact has been successfully added. */\n  addContactSuccess = false;\n\n    /** Data model for storing contact information from the form. */\n  contactData = {\n    name: '',\n    email: '',\n    phone: '',\n    color: '',\n  };\n\n    /** Event emitted when a contact is successfully added, passing a boolean value. */\n  @Output() contactAdded = new EventEmitter();\n\n    /** Event emitted when the contact add component is closed. */\n  @Output() close = new EventEmitter();\n\n\n    /**\n   * Constructor to inject services for contact management and navigation.\n   * @param addContactService - Service for adding contacts.\n   * @param router - Angular Router for navigation.\n   */\n  constructor(\n    private addContactService: AddContactService,\n    private router: Router,\n  ) {}\n\n\n    /**\n   * Submits the contact form data to add a new contact.\n   * Generates a random dark color if none is provided, then emits events on success.\n   */\n  submitContactForm() {\n    if (!this.contactData.color) {\n      this.contactData.color = this.generateRandomDarkColor();\n    }\n    this.addContactService.addContact(this.contactData).subscribe({\n      next: response => {\n        this.addContactSuccess = true;\n\n        this.contactAdded.emit(true);\n        setTimeout(() => {\n          this.close.emit();\n        }, 3000);\n      },\n      error: error => {\n        console.error('There was an error adding the contact:', error);\n      },\n    });\n  }\n\n\n    /**\n   * Generates a random dark color in HEX format.\n   * @returns A hex color string with dark RGB values.\n   */\n  generateRandomDarkColor(): string {\n    const r = Math.floor(Math.random() * 100);\n    const g = Math.floor(Math.random() * 100);\n    const b = Math.floor(Math.random() * 100);\n    return (\n      '#' +\n      [r, g, b]\n        .map(x => {\n          const hex = x.toString(16);\n          return hex.length === 1 ? '0' + hex : hex;\n        })\n        .join('')\n    );\n  }\n\n\n    /**\n   * Emits the close event to signal that the component should be closed.\n   */\n  closeComponent() {\n    this.close.emit();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n      \n        Add Contact\n        Tasks are better with a team!\n        \n      \n      \n        \n          \n        \n      \n    \n    \n      \n        \n          \n        \n      \n    \n    \n      \n        \n      \n\n      \n        \n          \n          Name\n          Name is required.\n        \n\n        \n          \n          Email\n          \n            Email is required.\n            Please enter a valid email address.\n          \n        \n\n        \n          \n          Phone\n          \n            Phone number is required.\n            \n              Please enter a valid phone number (15 digits).\n            \n          \n        \n        Create contact\n      \n    \n    \n      Contact successfully created!\n    \n  \n\n\n    \n\n    \n                \n                    ./contacts-add.component.scss\n                \n                .addContactsBackground {\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba($color: #000000, $alpha: 0.1);\n  z-index: 10;\n}\n\n.addContactsContentConatiner {\n  height: 80vh;\n  width: 90vw;\n  position: absolute;\n  top: 10vh;\n  border-radius: 30px;\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  z-index: 11;\n}\n\n.topContainerAddContacts {\n  height: 30vh;\n  width: 100%;\n  background-color: #2a3647;\n  color: #ffffff;\n  display: flex;\n  align-items: center;\n  position: relative;\n  border-top-right-radius: 30px;\n  border-top-left-radius: 30px;\n  padding-left: 16px;\n}\n\n.closeIconContainer {\n  display: block;\n  position: absolute;\n  top: 16px;\n  right: 16px;\n  cursor: pointer;\n}\n\n.addContactsUnderline {\n  border-bottom: 3px solid;\n  border-color: #29abe2;\n  width: min(120px, 50%);\n  padding-bottom: 8px;\n}\n\n.smallHeadlineAddContacts {\n  font-size: calc(1.175rem + 0.5vw) !important;\n}\n\n.personIconContainer {\n  background-color: #d1d1d1;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 120px;\n  width: 120px;\n  border-radius: 50%;\n  border: solid 3px #ffffff;\n  position: absolute;\n  bottom: -60px;\n  left: 50%;\n  transform: translate(-50%, 0%);\n}\n\n.bottomContainerContacts {\n  height: 50vh;\n  width: 90vw;\n  background-color: #ffffff;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-bottom-right-radius: 30px;\n  border-bottom-left-radius: 30px;\n}\n\n.colorFont {\n  color: #d1d1d1;\n}\n\n.formInputContacsName {\n  background-image: url('/assets/img/person.png');\n  background-repeat: no-repeat;\n  background-position: calc(100% - 18px);\n}\n\n.formInputContactsMail {\n  background-image: url('/assets/img/mail.png');\n  background-repeat: no-repeat;\n  background-position: calc(100% - 18px);\n}\n\n.formInputContacsPhone {\n  background-image: url('/assets/img/phone.png');\n  background-repeat: no-repeat;\n  background-position: calc(100% - 18px);\n}\n.inputContainer {\n  width: 80vw;\n  display: flex;\n  align-items: center;\n  position: relative;\n  flex-direction: column;\n}\n\n.formContainerAddContacts {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n}\n\n.addedContactSuccessContainer {\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: #2a3647;\n  border-radius: 20px;\n  height: 72px;\n  width: min(652px, 90%);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  font-size: 1.25rem;\n  z-index: 3;\n  animation: slideInFromBottom 0.5s ease forwards;\n}\n\n.closeIconContainerDesktop {\n  display: none;\n}\n\n.personIconFormContainer {\n  display: none;\n}\n\n@media screen and (max-height: 740px) {\n  .personIconContainer {\n    height: 100px;\n    width: 100px;\n    bottom: -50px;\n  }\n\n  .formContainerAddContacts {\n    position: absolute;\n    bottom: 8px;\n  }\n}\n\n@media (min-width: 1025px) {\n  .addContactsContentConatiner {\n    display: flex !important;\n    width: 90%;\n    height: 50vh;\n  }\n\n  .topContainerAddContacts {\n    width: 35vw;\n    height: 50vh;\n    border-top-right-radius: 0px;\n    border-bottom-left-radius: 30px;\n  }\n\n  .closeIconContainerDesktop {\n    display: block;\n    position: absolute;\n    top: 32px;\n    right: 3vw;\n    cursor: pointer;\n  }\n\n  .personIconFormContainer {\n    background-color: #ffffff;\n    width: 17vw;\n    height: 50vh;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  .personIconContainerDesktop {\n    background-color: #d1d1d1;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 120px;\n    width: 120px;\n    border-radius: 50%;\n    border: solid 3px #ffffff;\n  }\n\n  .bottomContainerContacts {\n    width: 38vw;\n    padding-right: 3vw;\n    justify-content: flex-end;\n    border-bottom-left-radius: 0px;\n    border-top-right-radius: 30px;\n  }\n\n  .inputContainer {\n    width: 35vw;\n  }\n\n  .closeIconContainer {\n    display: none;\n  }\n\n  .personIconContainer {\n    display: none;\n  }\n}\n@media screen and (orientation: landscape) and (max-width: 1024px) and (max-height: 512px) {\n  .addContactsContentConatiner {\n    height: 100vh;\n  }\n\n  .topContainerAddContacts {\n    height: 80vh;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n  }\n\n  .bottomContainerContacts {\n    height: 20vh;\n  }\n\n  .smallHeadlineAddContacts {\n    display: none;\n  }\n\n  .addContactsUnderline {\n    display: none;\n  }\n\n  .personIconContainer {\n    display: none;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Add Contact        Tasks are better with a team!                                                                                                                                                                Name          Name is required.                                    Email                      Email is required.            Please enter a valid email address.                                              Phone                      Phone number is required.                          Please enter a valid phone number (15 digits).                                      Create contact                    Contact successfully created!      '\n    var COMPONENTS = [{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'BoardTaskOverlayComponent', 'selector': 'app-board-task-overlay'},{'name': 'ContactsAddComponent', 'selector': 'app-contacts-add'},{'name': 'ContactsEditComponent', 'selector': 'app-contacts-edit'},{'name': 'ContactsOverviewComponent', 'selector': 'app-contacts-overview'},{'name': 'ContactsViewComponent', 'selector': 'app-contacts-view'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'FooterBarComponent', 'selector': 'app-footer-bar'},{'name': 'HeaderBarMobileComponent', 'selector': 'app-header-bar-mobile'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'SummaryComponent', 'selector': 'app-summary'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContactsAddComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContactsEditComponent.html":{"url":"components/ContactsEditComponent.html","title":"component - ContactsEditComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ContactsEditComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/contacts/contacts-edit/contacts-edit.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for editing contact details. Allows updating and deleting contact information.\nEmits events when a contact is successfully edited or when the edit form is closed.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-contacts-edit\n            \n\n\n\n            \n                styleUrls\n                ./contacts-edit.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./contacts-edit.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contact\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeEditComponent\n                            \n                            \n                                deleteContact\n                            \n                            \n                                getInitials\n                            \n                            \n                                loadContact\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                contactId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                contactEdited\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, router: Router, addContactService: AddContactService)\n                    \n                \n                        \n                            \n                                Defined in src/app/contacts/contacts-edit/contacts-edit.component.ts:29\n                            \n                        \n\n                \n                    \n                            Constructor to inject necessary services for managing contact data and navigation.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nActivatedRoute for accessing route parameters.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAngular Router for navigation.\n\n\n                                                        \n                                                \n                                                \n                                                        addContactService\n                                                  \n                                                        \n                                                                        AddContactService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService for managing contact data.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        contactId\n                    \n                \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/contacts/contacts-edit/contacts-edit.component.ts:20\n                            \n                        \n                \n                    \n                        ID of the contact to be edited, can be provided as input.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/contacts/contacts-edit/contacts-edit.component.ts:29\n                            \n                        \n                \n                    \n                        Event emitted when the edit component is closed.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        contactEdited\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/contacts/contacts-edit/contacts-edit.component.ts:26\n                            \n                        \n                \n                    \n                        Event emitted when a contact is successfully edited, passing a boolean value.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeEditComponent\n                        \n                    \n                \n            \n            \n                \ncloseEditComponent()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contacts/contacts-edit/contacts-edit.component.ts:130\n                        \n                    \n\n\n            \n                \n                        Closes the edit component and emits a close event.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteContact\n                        \n                    \n                \n            \n            \n                \ndeleteContact()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contacts/contacts-edit/contacts-edit.component.ts:111\n                        \n                    \n\n\n            \n                \n                        Deletes the contact using the service and navigates to the contact list.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getInitials\n                        \n                    \n                \n            \n            \n                \ngetInitials(name: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contacts/contacts-edit/contacts-edit.component.ts:75\n                        \n                    \n\n\n            \n                \n                        Generates initials from the contact's name for display.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the contact.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The initials derived from the contact's name.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadContact\n                        \n                    \n                \n            \n            \n                \nloadContact()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contacts/contacts-edit/contacts-edit.component.ts:57\n                        \n                    \n\n\n            \n                \n                        Loads the contact data by ID from the service.\nIf no contactId is provided, it tries to load the ID from route parameters.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contacts/contacts-edit/contacts-edit.component.ts:48\n                        \n                    \n\n\n            \n                \n                        Initializes the component by loading the contact information based on the provided contact ID.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit(contactForm: NgForm)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contacts/contacts-edit/contacts-edit.component.ts:90\n                        \n                    \n\n\n            \n                \n                        Submits the updated contact data to the service.\nEmits an event on successful update or failure.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                contactForm\n                                            \n                                                        NgForm\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe form containing contact data.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        contact\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Contact\n\n                    \n                \n                \n                    \n                        Default value : { id: 0, name: '', email: '', phone: '', color: '', initials: '' }\n                    \n                \n                    \n                        \n                                Defined in src/app/contacts/contacts-edit/contacts-edit.component.ts:23\n                        \n                    \n\n            \n                \n                    Contact model for holding the contact's details.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, OnInit, Output, Input } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AddContactService } from 'src/app/services/add-contact.service';\nimport { Contact } from 'src/assets/models/contact.model';\n\n\n/**\n * Component for editing contact details. Allows updating and deleting contact information.\n * Emits events when a contact is successfully edited or when the edit form is closed.\n */\n@Component({\n  selector: 'app-contacts-edit',\n  templateUrl: './contacts-edit.component.html',\n  styleUrls: ['./contacts-edit.component.scss'],\n})\nexport class ContactsEditComponent implements OnInit {\n\n    /** ID of the contact to be edited, can be provided as input. */\n  @Input() contactId: number | null = null;\n\n    /** Contact model for holding the contact's details. */\n  contact: Contact = { id: 0, name: '', email: '', phone: '', color: '', initials: '' }; // include `initials` if it's mandatory\n\n    /** Event emitted when a contact is successfully edited, passing a boolean value. */\n  @Output() contactEdited = new EventEmitter();\n\n    /** Event emitted when the edit component is closed. */\n  @Output() close = new EventEmitter();\n\n\n    /**\n   * Constructor to inject necessary services for managing contact data and navigation.\n   * @param route - ActivatedRoute for accessing route parameters.\n   * @param router - Angular Router for navigation.\n   * @param addContactService - Service for managing contact data.\n   */\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private addContactService: AddContactService,\n  ) {}\n\n\n    /**\n   * Initializes the component by loading the contact information based on the provided contact ID.\n   */\n  ngOnInit(): void {\n    this.loadContact();\n  }\n\n\n    /**\n   * Loads the contact data by ID from the service.\n   * If no `contactId` is provided, it tries to load the ID from route parameters.\n   */\n  loadContact(): void {\n    const contactId = this.contactId !== null ? this.contactId : this.route.snapshot.params['id'];\n    if (contactId) {\n      this.addContactService.getContactById(contactId).subscribe({\n        next: contactData => {\n          this.contact = contactData;\n        },\n        error: err => console.error(err),\n      });\n    }\n  }\n\n\n    /**\n   * Generates initials from the contact's name for display.\n   * @param name - The name of the contact.\n   * @returns The initials derived from the contact's name.\n   */\n  getInitials(name: string | undefined): string {\n    if (!name) return '';\n    return name\n      .split(' ')\n      .map(n => n[0])\n      .join('')\n      .toUpperCase();\n  }\n\n\n  /**\n   * Submits the updated contact data to the service.\n   * Emits an event on successful update or failure.\n   * @param contactForm - The form containing contact data.\n   */\n  onSubmit(contactForm: NgForm): void {\n    if (this.contact && this.contact.id) {\n      this.addContactService.updateContact(this.contact.id, this.contact).subscribe({\n        next: updatedContact => {\n          this.contactEdited.emit(true); \n          this.closeEditComponent();\n        },\n        error: error => {\n          console.error('Failed to update contact', error);\n          this.contactEdited.emit(false); \n        },\n      });\n    } else {\n      console.error('Contact data is incomplete.');\n    }\n  }\n\n\n    /**\n   * Deletes the contact using the service and navigates to the contact list.\n   */\n  deleteContact(): void {\n    if (this.contact.id) {\n      this.addContactService.deleteContact(this.contact.id).subscribe({\n        next: () => {\n          this.router.navigate(['/contacts']); \n        },\n        error: error => {\n          console.error(`Failed to delete contact with ID ${this.contact.id}`, error);\n        },\n      });\n    } else {\n      console.error('Attempted to delete a contact without a valid ID.');\n    }\n  }\n\n\n    /**\n   * Closes the edit component and emits a close event.\n   */\n  closeEditComponent() {\n    this.close.emit();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n      \n        Edit Contact\n        \n      \n      \n        {{ getInitials(contact.name) }}\n      \n    \n    \n      \n        \n          \n          Name\n        \n\n        \n          \n          Email\n        \n\n        \n          \n          Phone\n        \n        \n          \n            Delete\n          \n          \n            Save\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./contacts-edit.component.scss\n                \n                .editContactsBackground {\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba($color: #000000, $alpha: 0.1);\n  z-index: 10;\n}\n\n.addContactsContentConatiner {\n  height: 80vh;\n  width: 90vw;\n  position: absolute;\n  top: 10vh;\n  border-radius: 30px;\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n\n.topContainerAddContacts {\n  height: 30vh;\n  width: 100%;\n  background-color: #2a3647;\n  color: #ffffff;\n  display: flex;\n  align-items: center;\n  position: relative;\n  border-top-right-radius: 30px;\n  border-top-left-radius: 30px;\n  padding-left: 16px;\n}\n\n.closeIconContainer {\n  position: absolute;\n  top: 16px;\n  right: 16px;\n  cursor: pointer;\n}\n\n.addContactsUnderline {\n  border-bottom: 3px solid;\n  border-color: #29abe2;\n  width: min(120px, 50%);\n  padding-bottom: 8px;\n}\n\n.smallHeadlineAddContacts {\n  font-size: calc(1.175rem + 0.5vw) !important;\n}\n\n.intitialsEditContactContainer {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 120px;\n  width: 120px;\n  border-radius: 50%;\n  border: solid 3px #ffffff;\n  position: absolute;\n  bottom: -60px;\n  left: 50%;\n  transform: translate(-50%, 0%);\n}\n\n.initialsCircleContactEdit {\n  font-size: 2rem;\n}\n\n.personIconContainer {\n  background-color: #d1d1d1;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 120px;\n  width: 120px;\n  border-radius: 50%;\n  border: solid 3px #ffffff;\n  position: absolute;\n  bottom: -60px;\n  left: 50%;\n  transform: translate(-50%, 0%);\n}\n\n.bottomContainerContacts {\n  height: 50vh;\n  width: 90vw;\n  background-color: #ffffff;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-bottom-right-radius: 30px;\n  border-bottom-left-radius: 30px;\n}\n\n.colorFont {\n  color: #d1d1d1;\n}\n\n.formInputContacsName {\n  background-image: url('/assets/img/person.png');\n  background-repeat: no-repeat;\n  background-position: calc(100% - 18px);\n}\n\n.formInputContactsMail {\n  background-image: url('/assets/img/mail.png');\n  background-repeat: no-repeat;\n  background-position: calc(100% - 18px);\n}\n\n.formInputContacsPhone {\n  background-image: url('/assets/img/phone.png');\n  background-repeat: no-repeat;\n  background-position: calc(100% - 18px);\n}\n\n.inputContainer {\n  width: 80vw;\n  display: flex;\n  align-items: center;\n  position: relative;\n}\n\n.formContainerAddContacts {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n}\n\n.addedContactSuccessContainer {\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: #2a3647;\n  border-radius: 20px;\n  height: 72px;\n  width: min(652px, 90%);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  font-size: 1.25rem;\n  z-index: 3;\n  animation: slideInFromBottom 0.5s ease forwards;\n}\n\n.deleteSaveContainer {\n  display: flex;\n  width: 80%;\n  justify-content: space-around;\n}\n\n.deleteButton {\n  width: 82px;\n  display: flex;\n  justify-content: center;\n}\n\n.saveButton {\n  width: 100px;\n}\n\n@media screen and (max-height: 740px) {\n  .personIconContainer {\n    height: 100px;\n    width: 100px;\n    bottom: -50px;\n  }\n\n  .formContainerAddContacts {\n    position: absolute;\n    bottom: 8px;\n  }\n}\n\n@media screen and (orientation: landscape) and (max-width: 1024px) and (max-height: 512px) {\n  .addContactsContentConatiner {\n    height: 100vh;\n  }\n\n  .topContainerAddContacts {\n    height: 80vh;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n  }\n\n  .bottomContainerContacts {\n    height: 20vh;\n  }\n\n  .smallHeadlineAddContacts {\n    display: none;\n  }\n\n  .addContactsUnderline {\n    display: none;\n  }\n\n  .personIconContainer {\n    display: none;\n  }\n\n  .intitialsEditContactContainer {\n    display: none;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Edit Contact                            {{ getInitials(contact.name) }}                                                Name                                    Email                                    Phone                                      Delete                                Save                              '\n    var COMPONENTS = [{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'BoardTaskOverlayComponent', 'selector': 'app-board-task-overlay'},{'name': 'ContactsAddComponent', 'selector': 'app-contacts-add'},{'name': 'ContactsEditComponent', 'selector': 'app-contacts-edit'},{'name': 'ContactsOverviewComponent', 'selector': 'app-contacts-overview'},{'name': 'ContactsViewComponent', 'selector': 'app-contacts-view'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'FooterBarComponent', 'selector': 'app-footer-bar'},{'name': 'HeaderBarMobileComponent', 'selector': 'app-header-bar-mobile'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'SummaryComponent', 'selector': 'app-summary'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContactsEditComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ContactsOverlayService.html":{"url":"injectables/ContactsOverlayService.html","title":"injectable - ContactsOverlayService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ContactsOverlayService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/contacts-overlay-service.service.ts\n        \n\n\n            \n                Description\n            \n            \n                ContactsOverlayService manages the visibility state of the contacts overlay.\nIt provides methods to set and retrieve the overlay visibility status.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                overlayVisibility$\n                            \n                            \n                                    Private\n                                overlayVisibilitySubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getOverlayVisibility\n                            \n                            \n                                setOverlayVisibility\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getOverlayVisibility\n                        \n                    \n                \n            \n            \n                \ngetOverlayVisibility()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/contacts-overlay-service.service.ts:33\n                        \n                    \n\n\n            \n                \n                        Retrieves the current visibility state of the contacts overlay.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                A boolean representing the current visibility of the overlay.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setOverlayVisibility\n                        \n                    \n                \n            \n            \n                \nsetOverlayVisibility(isVisible: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/contacts-overlay-service.service.ts:24\n                        \n                    \n\n\n            \n                \n                        Sets the visibility state of the contacts overlay.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                isVisible\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nBoolean indicating whether the overlay should be visible.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        overlayVisibility$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.overlayVisibilitySubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/contacts-overlay-service.service.ts:17\n                        \n                    \n\n            \n                \n                    Observable for overlay visibility changes, allowing components to subscribe to visibility updates.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        overlayVisibilitySubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/contacts-overlay-service.service.ts:14\n                        \n                    \n\n            \n                \n                    BehaviorSubject that holds the current visibility state of the overlay.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n\n/**\n * ContactsOverlayService manages the visibility state of the contacts overlay.\n * It provides methods to set and retrieve the overlay visibility status.\n */@Injectable({\n  providedIn: 'root',\n})\nexport class ContactsOverlayService {\n\n  /** BehaviorSubject that holds the current visibility state of the overlay. */\n  private overlayVisibilitySubject = new BehaviorSubject(false);\n\n  /** Observable for overlay visibility changes, allowing components to subscribe to visibility updates. */\n  overlayVisibility$ = this.overlayVisibilitySubject.asObservable();\n\n\n    /**\n   * Sets the visibility state of the contacts overlay.\n   * @param isVisible - Boolean indicating whether the overlay should be visible.\n   */\n  setOverlayVisibility(isVisible: boolean): void {\n    this.overlayVisibilitySubject.next(isVisible);\n  }\n\n\n  /**\n   * Retrieves the current visibility state of the contacts overlay.\n   * @returns A boolean representing the current visibility of the overlay.\n   */\n  getOverlayVisibility(): boolean {\n    return this.overlayVisibilitySubject.value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContactsOverviewComponent.html":{"url":"components/ContactsOverviewComponent.html","title":"component - ContactsOverviewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ContactsOverviewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/contacts/contacts-overview/contacts-overview.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for displaying an overview of contacts. Groups contacts alphabetically,\nhandles display based on screen size, and manages visibility of the contacts overlay.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-contacts-overview\n            \n\n\n\n            \n                styleUrls\n                ./contacts-overview.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./contacts-overview.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                contactsOverlayService\n                            \n                            \n                                contactsViewNotVisible\n                            \n                            \n                                groupedContacts\n                            \n                            \n                                isHandsetOrTablet\n                            \n                            \n                                isVisible\n                            \n                            \n                                selectedContact\n                            \n                            \n                                storedContactId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeContactsView\n                            \n                            \n                                findContactById\n                            \n                            \n                                getInitials\n                            \n                            \n                                getSortedLetters\n                            \n                            \n                                goToContactDetails\n                            \n                            \n                                goToDesktopContactDetails\n                            \n                            \n                                groupContactsByFirstLetter\n                            \n                            \n                                loadContacts\n                            \n                            \n                                loadStoredContactDetails\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onContactAdded\n                            \n                            \n                                openContact\n                            \n                            \n                                refreshContacts\n                            \n                            \n                                showContactsAdd\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(addContactService: AddContactService, router: Router, screenSizeService: ScreenSizeService, contactsOverlayService: ContactsOverlayService)\n                    \n                \n                        \n                            \n                                Defined in src/app/contacts/contacts-overview/contacts-overview.component.ts:36\n                            \n                        \n\n                \n                    \n                            Constructor to inject necessary services for managing contacts, routing, screen size, and overlay visibility.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        addContactService\n                                                  \n                                                        \n                                                                        AddContactService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService for handling contact data.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAngular Router for navigation.\n\n\n                                                        \n                                                \n                                                \n                                                        screenSizeService\n                                                  \n                                                        \n                                                                        ScreenSizeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService for detecting screen size.\n\n\n                                                        \n                                                \n                                                \n                                                        contactsOverlayService\n                                                  \n                                                        \n                                                                        ContactsOverlayService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService for managing overlay visibility.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeContactsView\n                        \n                    \n                \n            \n            \n                \ncloseContactsView()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contacts/contacts-overview/contacts-overview.component.ts:176\n                        \n                    \n\n\n            \n                \n                        Closes the contacts view overlay.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findContactById\n                        \n                    \n                \n            \n            \n                \nfindContactById(contactId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contacts/contacts-overview/contacts-overview.component.ts:236\n                        \n                    \n\n\n            \n                \n                        Finds a contact by ID within the grouped contacts.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                contactId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nID of the contact to find.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Contact | undefined\n\n                        \n                            \n                                The contact object if found, otherwise undefined.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getInitials\n                        \n                    \n                \n            \n            \n                \ngetInitials(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contacts/contacts-overview/contacts-overview.component.ts:141\n                        \n                    \n\n\n            \n                \n                        Generates initials from a contact's name.\nTakes the first letter of the first and last name, if available.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe full name of the contact.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                A string containing the initials.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSortedLetters\n                        \n                    \n                \n            \n            \n                \ngetSortedLetters()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contacts/contacts-overview/contacts-overview.component.ts:157\n                        \n                    \n\n\n            \n                \n                        Returns an array of sorted letters used to group contacts.\n\n\n                        \n                            Returns :     string[]\n\n                        \n                            \n                                An alphabetically sorted array of first letters.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToContactDetails\n                        \n                    \n                \n            \n            \n                \ngoToContactDetails(contactId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contacts/contacts-overview/contacts-overview.component.ts:201\n                        \n                    \n\n\n            \n                \n                        Navigates to the contact detail page for mobile or tablet view.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                contactId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nID of the contact to navigate to.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToDesktopContactDetails\n                        \n                    \n                \n            \n            \n                \ngoToDesktopContactDetails(contactId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contacts/contacts-overview/contacts-overview.component.ts:215\n                        \n                    \n\n\n            \n                \n                        Opens the desktop contact details overlay and sets the selected contact.\nStores the contact ID and displays the overlay with contact details.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                contactId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nID of the contact to display in overlay.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupContactsByFirstLetter\n                        \n                    \n                \n            \n            \n                \ngroupContactsByFirstLetter(contacts: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contacts/contacts-overview/contacts-overview.component.ts:114\n                        \n                    \n\n\n            \n                \n                        Groups an array of contacts by the first letter of each contact's name.\nAdds initials and color properties to each contact.\nSorts contacts within each letter group alphabetically by name.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                contacts\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nArray of contacts to group.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadContacts\n                        \n                    \n                \n            \n            \n                \nloadContacts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contacts/contacts-overview/contacts-overview.component.ts:94\n                        \n                    \n\n\n            \n                \n                        Loads all contacts from the service and groups them alphabetically by the first letter.\nInitializes groupedContacts as an empty object before adding contacts.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadStoredContactDetails\n                        \n                    \n                \n            \n            \n                \nloadStoredContactDetails()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contacts/contacts-overview/contacts-overview.component.ts:83\n                        \n                    \n\n\n            \n                \n                        Loads contact details for a stored contact ID, if available.\nNavigates to the desktop contact details view for the contact.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contacts/contacts-overview/contacts-overview.component.ts:62\n                        \n                    \n\n\n            \n                \n                        Initializes the component by loading contacts and setting up subscriptions to screen size and overlay visibility.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onContactAdded\n                        \n                    \n                \n            \n            \n                \nonContactAdded(contactAdded: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contacts/contacts-overview/contacts-overview.component.ts:166\n                        \n                    \n\n\n            \n                \n                        Reloads the contacts list when a new contact is successfully added.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                contactAdded\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nBoolean indicating if a contact was added.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openContact\n                        \n                    \n                \n            \n            \n                \nopenContact(contactId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contacts/contacts-overview/contacts-overview.component.ts:188\n                        \n                    \n\n\n            \n                \n                        Opens the contact details view based on screen size.\nFor handset or tablet, navigates to the contact detail route.\nFor larger screens, shows the contact details in an overlay.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                contactId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nID of the contact to display.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refreshContacts\n                        \n                    \n                \n            \n            \n                \nrefreshContacts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contacts/contacts-overview/contacts-overview.component.ts:250\n                        \n                    \n\n\n            \n                \n                        Refreshes the contacts list by reloading contacts from the service.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showContactsAdd\n                        \n                    \n                \n            \n            \n                \nshowContactsAdd()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contacts/contacts-overview/contacts-overview.component.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        contactsOverlayService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ContactsOverlayService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/contacts/contacts-overview/contacts-overview.component.ts:51\n                        \n                    \n\n            \n                \n                    - Service for managing overlay visibility.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        contactsViewNotVisible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/contacts/contacts-overview/contacts-overview.component.ts:30\n                        \n                    \n\n            \n                \n                    Boolean to control the visibility of the contacts view overlay.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupedContacts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/contacts/contacts-overview/contacts-overview.component.ts:24\n                        \n                    \n\n            \n                \n                    Object to store contacts grouped alphabetically by first letter.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isHandsetOrTablet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/contacts/contacts-overview/contacts-overview.component.ts:27\n                        \n                    \n\n            \n                \n                    Boolean to indicate if the device is a handset or tablet.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isVisible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/contacts/contacts-overview/contacts-overview.component.ts:21\n                        \n                    \n\n            \n                \n                    Controls visibility of the add contact overlay.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedContact\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Contact | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/contacts/contacts-overview/contacts-overview.component.ts:33\n                        \n                    \n\n            \n                \n                    Currently selected contact to display in detail view.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        storedContactId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/contacts/contacts-overview/contacts-overview.component.ts:36\n                        \n                    \n\n            \n                \n                    Stores contact ID for desktop contact detail display.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AddContactService } from 'src/app/services/add-contact.service';\nimport { Contact } from 'src/assets/models/contact.model';\nimport { ScreenSizeService } from 'src/app/services/screen-size.service';\nimport { ContactsOverlayService } from 'src/app/services/contacts-overlay-service.service';\n\n\n/**\n * Component for displaying an overview of contacts. Groups contacts alphabetically,\n * handles display based on screen size, and manages visibility of the contacts overlay.\n */\n@Component({\n  selector: 'app-contacts-overview',\n  templateUrl: './contacts-overview.component.html',\n  styleUrls: ['./contacts-overview.component.scss'],\n})\nexport class ContactsOverviewComponent implements OnInit {\n\n/** Controls visibility of the add contact overlay. */\n  isVisible: boolean = false;\n\n  /** Object to store contacts grouped alphabetically by first letter. */\n  groupedContacts: { [key: string]: Contact[] } = {};\n\n  /** Boolean to indicate if the device is a handset or tablet. */\n  isHandsetOrTablet: boolean = false;\n\n  /** Boolean to control the visibility of the contacts view overlay. */\n  contactsViewNotVisible: boolean = true;\n\n  /** Currently selected contact to display in detail view. */\n  selectedContact: Contact | null = null;\n\n  /** Stores contact ID for desktop contact detail display. */\n  storedContactId: number | null = null;\n\n\n\n    /**\n   * Constructor to inject necessary services for managing contacts, routing, screen size, and overlay visibility.\n   * @param addContactService - Service for handling contact data.\n   * @param router - Angular Router for navigation.\n   * @param screenSizeService - Service for detecting screen size.\n   * @param contactsOverlayService - Service for managing overlay visibility.\n   */\n  constructor(\n    private addContactService: AddContactService,\n    private router: Router,\n    private screenSizeService: ScreenSizeService,\n    public contactsOverlayService: ContactsOverlayService, \n  ) {}\n\n  showContactsAdd(): void {\n    this.isVisible = true; \n  }\n\n\n    /**\n   * Initializes the component by loading contacts and setting up subscriptions to screen size and overlay visibility.\n   */\n  ngOnInit(): void {\n    this.loadContacts();\n    this.screenSizeService.isHandsetOrTablet$.subscribe(\n      isHandsetOrTablet => (this.isHandsetOrTablet = isHandsetOrTablet),\n    );\n\n    \n    this.contactsOverlayService.overlayVisibility$.subscribe(isVisible => {\n      this.contactsViewNotVisible = !isVisible;\n    });\n\n    if (this.storedContactId) {\n      this.loadStoredContactDetails();\n    }\n  }\n\n\n  /**\n * Loads contact details for a stored contact ID, if available.\n * Navigates to the desktop contact details view for the contact.\n */\n  loadStoredContactDetails(): void {\n    if (this.storedContactId !== null) {\n      this.goToDesktopContactDetails(this.storedContactId);\n    }\n  }\n\n\n  /**\n * Loads all contacts from the service and groups them alphabetically by the first letter.\n * Initializes `groupedContacts` as an empty object before adding contacts.\n */\n  loadContacts(): void {\n    this.groupedContacts = {};\n\n    this.addContactService.getContacts().subscribe({\n      next: contacts => {\n        this.groupContactsByFirstLetter(contacts);\n      },\n      error: error => {\n        console.error('Error loading contacts:', error);\n      },\n    });\n  }\n\n\n  /**\n * Groups an array of contacts by the first letter of each contact's name.\n * Adds initials and color properties to each contact.\n * Sorts contacts within each letter group alphabetically by name.\n * @param contacts - Array of contacts to group.\n */\n  groupContactsByFirstLetter(contacts: any[]): void {\n    this.groupedContacts = {};\n\n    contacts.forEach(contact => {\n      const firstLetter = contact.name[0].toUpperCase();\n      const initials = this.getInitials(contact.name);\n      const color = contact.color;\n\n      if (!this.groupedContacts[firstLetter]) {\n        this.groupedContacts[firstLetter] = [];\n      }\n\n      this.groupedContacts[firstLetter].push({ ...contact, initials, color });\n    });\n\n    for (const letter in this.groupedContacts) {\n      this.groupedContacts[letter].sort((a, b) => a.name.localeCompare(b.name));\n    }\n  }\n\n\n  /**\n * Generates initials from a contact's name.\n * Takes the first letter of the first and last name, if available.\n * @param name - The full name of the contact.\n * @returns A string containing the initials.\n */\n  getInitials(name: string): string {\n    const names = name.split(' ');\n    let initials = names[0].substring(0, 1).toUpperCase();\n\n    if (names.length > 1) {\n      initials += names[names.length - 1].substring(0, 1).toUpperCase();\n    }\n\n    return initials;\n  }\n\n\n  /**\n * Returns an array of sorted letters used to group contacts.\n * @returns An alphabetically sorted array of first letters.\n */\n  getSortedLetters(): string[] {\n    return Object.keys(this.groupedContacts).sort();\n  }\n\n\n  /**\n * Reloads the contacts list when a new contact is successfully added.\n * @param contactAdded - Boolean indicating if a contact was added.\n */\n  onContactAdded(contactAdded: boolean): void {\n    if (contactAdded) {\n      this.loadContacts(); \n    }\n  }\n\n\n  /**\n * Closes the contacts view overlay.\n */\n  closeContactsView(): void {\n    console.log('Closing contacts view...');\n    this.contactsOverlayService.setOverlayVisibility(false); \n  }\n\n\n  /**\n * Opens the contact details view based on screen size.\n * For handset or tablet, navigates to the contact detail route.\n * For larger screens, shows the contact details in an overlay.\n * @param contactId - ID of the contact to display.\n */\n  openContact(contactId: number): void {\n    if (this.isHandsetOrTablet) {\n      this.goToContactDetails(contactId);\n    } else {\n      this.goToDesktopContactDetails(contactId);\n    }\n  }\n\n\n  /**\n * Navigates to the contact detail page for mobile or tablet view.\n * @param contactId - ID of the contact to navigate to.\n */\n  goToContactDetails(contactId: number) {\n    if (typeof contactId === 'undefined' || isNaN(contactId)) {\n      console.error('Contact ID is undefined or NaN');\n      return;\n    }\n    this.router.navigate(['/contacts-detail', contactId]);\n  }\n\n\n  /**\n * Opens the desktop contact details overlay and sets the selected contact.\n * Stores the contact ID and displays the overlay with contact details.\n * @param contactId - ID of the contact to display in overlay.\n */\n  goToDesktopContactDetails(contactId: number) {\n    this.storedContactId = contactId;\n    if (typeof contactId === 'undefined' || isNaN(contactId)) {\n      console.error('Contact ID is undefined or NaN');\n      return;\n    }\n    const contact = this.findContactById(contactId);\n    if (!contact) {\n      console.error('Contact not found');\n      return;\n    }\n    this.selectedContact = contact;\n    this.contactsOverlayService.setOverlayVisibility(true);\n  }\n\n\n  /**\n * Finds a contact by ID within the grouped contacts.\n * @param contactId - ID of the contact to find.\n * @returns The contact object if found, otherwise undefined.\n */\n  findContactById(contactId: number): Contact | undefined {\n    for (const letter in this.groupedContacts) {\n      const contact = this.groupedContacts[letter].find(contact => contact.id === contactId);\n      if (contact) {\n        return contact;\n      }\n    }\n    return undefined;\n  }\n\n\n  /**\n * Refreshes the contacts list by reloading contacts from the service.\n */\n  refreshContacts(): void {\n    this.loadContacts();\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n    \n    \n      \n        \n          Add new contact\n\n          \n            \n          \n        \n\n        \n          \n            {{ letter }}\n            \n          \n          \n            \n              {{\n                contact.initials\n              }}\n              \n                {{ contact.name }}\n                {{ contact.email }}\n              \n            \n          \n        \n      \n\n      \n        \n      \n    \n\n    \n    \n\n    \n      \n        Contacts\n        \n        Better with a team\n      \n    \n    \n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./contacts-overview.component.scss\n                \n                .contactsContainer {\n  width: 100vw;\n  height: 100vh;\n  background-color: #f6f7f8;\n  display: flex;\n  flex-direction: column;\n}\n\n.contactsContent {\n  height: 80vh;\n  position: relative;\n  width: 100vw;\n  padding-right: 32px;\n  padding-left: 32px;\n  overflow: auto;\n  margin-top: 10vh;\n  margin-bottom: 10vh;\n}\n\n.addIconContainer {\n  height: 56px;\n  width: 56px;\n  background-color: #2a3647;\n  border-radius: 50%;\n  position: fixed;\n  bottom: calc(10vh + 16px);\n  right: 16px;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.personAddIcon {\n  padding-left: 4px;\n  padding-bottom: 4px;\n}\n\n.headlineContactOverview {\n  font-size: 1.3rem;\n  padding-left: 24px;\n}\n\n.headlineUnderline {\n  border-bottom: 1px solid;\n  border-color: #d1d1d1;\n  width: 100%;\n}\n\n.initialsCircle {\n  color: #ffffff;\n  height: 32px;\n  width: 32px;\n  border-radius: 50%;\n  font-size: 0.75rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.contactItem {\n  display: flex;\n  align-items: center;\n  padding-left: 16px;\n  margin-top: 16px;\n  margin-bottom: 16px;\n  cursor: pointer;\n}\n\n.contactNameEmailContainer {\n  margin-left: 32px;\n}\n\n.contactName {\n  font-size: 1.3rem;\n}\n\n.contactEmail {\n  color: #007cee;\n  font-size: 0.75rem;\n}\n\n.sidebarComponent {\n  display: none;\n}\n\n.contactsDesktopScreen {\n  display: none;\n}\n\n.contactsAddDesktop {\n  display: none;\n}\n\n@media (min-width: 1025px) {\n  .sidebarComponent {\n    display: block;\n  }\n\n  .addIconContainer {\n    display: none;\n  }\n\n  .contactsDesktopContainer {\n    display: flex;\n  }\n\n  .footerComponent {\n    display: none;\n  }\n\n  .contactsContent {\n    height: 90vh;\n    margin-bottom: 0vh;\n    margin-top: 10vh;\n    padding-top: 5vh;\n    width: 30vw;\n    background-color: white;\n  }\n\n  .contactsAddDesktop {\n    background-color: #2a3647;\n    border-radius: 10px;\n    display: flex;\n    justify-content: center;\n    cursor: pointer;\n    font-weight: bold;\n    color: white;\n    padding-top: 8px;\n    padding-bottom: 8px;\n    margin-bottom: 16px;\n  }\n\n  .contactsAddDesktop:hover {\n    background-color: #29abe2;\n  }\n\n  .addIconDesktop {\n    padding-left: 8px;\n  }\n\n  .contactItem:hover {\n    background-color: #f6f7f8;\n    border-radius: 10px;\n  }\n\n  .contactsDesktopScreen {\n    width: 55vw;\n    background-color: #f6f7f8;\n    margin-top: 15vh;\n    height: 80vh;\n    padding-left: 32px;\n    display: block;\n  }\n\n  .contactsSmallHeadline {\n    display: flex;\n    align-items: center;\n  }\n\n  .contactsDividingLine {\n    display: block;\n    border-right: 3px solid;\n    border-color: #29abe2;\n    height: 48px;\n    padding-bottom: 8px;\n    margin-right: 16px;\n    margin-left: 16px;\n  }\n\n  .smallHeadlineContacts {\n    font-size: calc(1.175rem + 0.5vw) !important;\n  }\n}\n\n@media screen and (orientation: landscape) and (max-width: 1024px) and (max-height: 512px) {\n  .contactsContent {\n    height: 70vh;\n    margin-top: 15vh;\n    margin-bottom: 15vh;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          Add new contact                                                                      {{ letter }}                                                          {{                contact.initials              }}                              {{ contact.name }}                {{ contact.email }}                                                                                                    Contacts                Better with a team                        '\n    var COMPONENTS = [{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'BoardTaskOverlayComponent', 'selector': 'app-board-task-overlay'},{'name': 'ContactsAddComponent', 'selector': 'app-contacts-add'},{'name': 'ContactsEditComponent', 'selector': 'app-contacts-edit'},{'name': 'ContactsOverviewComponent', 'selector': 'app-contacts-overview'},{'name': 'ContactsViewComponent', 'selector': 'app-contacts-view'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'FooterBarComponent', 'selector': 'app-footer-bar'},{'name': 'HeaderBarMobileComponent', 'selector': 'app-header-bar-mobile'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'SummaryComponent', 'selector': 'app-summary'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContactsOverviewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContactsViewComponent.html":{"url":"components/ContactsViewComponent.html","title":"component - ContactsViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ContactsViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/contacts/contacts-view/contacts-view.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component to view detailed information of a contact. Allows editing and deleting a contact.\nSupports displaying contact details in an overlay or standalone view based on screen size and visibility settings.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-contacts-view\n            \n\n\n\n            \n                styleUrls\n                ./contacts-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./contacts-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isVisible\n                            \n                            \n                                    Public\n                                showEditOverlay\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteContact\n                            \n                            \n                                    Private\n                                fetchContactDetails\n                            \n                            \n                                getInitials\n                            \n                            \n                                goBackToContacts\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onContactEdited\n                            \n                            \n                                showContactsEdit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                contact\n                            \n                            \n                                contactId\n                            \n                            \n                                isOverlayVisibleContactsView\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                contactDeleted\n                            \n                            \n                                contactUpdated\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, router: Router, addContactService: AddContactService, contactsOverlayService: ContactsOverlayService)\n                    \n                \n                        \n                            \n                                Defined in src/app/contacts/contacts-view/contacts-view.component.ts:49\n                            \n                        \n\n                \n                    \n                            Constructor to inject necessary services for managing contact data, navigation, and overlay visibility.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nActivatedRoute for accessing route parameters.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAngular Router for navigation.\n\n\n                                                        \n                                                \n                                                \n                                                        addContactService\n                                                  \n                                                        \n                                                                        AddContactService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService for managing contact data.\n\n\n                                                        \n                                                \n                                                \n                                                        contactsOverlayService\n                                                  \n                                                        \n                                                                        ContactsOverlayService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService for managing overlay visibility.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        contact\n                    \n                \n                \n                    \n                        Type :     Contact | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/contacts/contacts-view/contacts-view.component.ts:37\n                            \n                        \n                \n                    \n                        Contact model containing details of the current contact.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        contactId\n                    \n                \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/contacts/contacts-view/contacts-view.component.ts:28\n                            \n                        \n                \n                    \n                        The ID of the contact to view, which triggers fetching of contact details.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isOverlayVisibleContactsView\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/contacts/contacts-view/contacts-view.component.ts:31\n                            \n                        \n                \n                    \n                        Boolean to control the visibility of the contact view overlay.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/contacts/contacts-view/contacts-view.component.ts:46\n                            \n                        \n                \n                    \n                        Event emitted when the contact view component is closed.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        contactDeleted\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/contacts/contacts-view/contacts-view.component.ts:40\n                            \n                        \n                \n                    \n                        Event emitted when a contact is deleted.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        contactUpdated\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/contacts/contacts-view/contacts-view.component.ts:43\n                            \n                        \n                \n                    \n                        Event emitted when a contact is updated.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteContact\n                        \n                    \n                \n            \n            \n                \ndeleteContact()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contacts/contacts-view/contacts-view.component.ts:148\n                        \n                    \n\n\n            \n                \n                        Deletes the current contact and emits a contactDeleted event.\nIf deletion is successful, navigates back to the contacts list.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fetchContactDetails\n                        \n                    \n                \n            \n            \n                \n                        \n                    fetchContactDetails(contactId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contacts/contacts-view/contacts-view.component.ts:103\n                        \n                    \n\n\n            \n                \n                        Fetches contact details based on the provided contact ID.\nIf retrieval fails, navigates back to the contacts list.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                contactId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the contact to retrieve.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getInitials\n                        \n                    \n                \n            \n            \n                \ngetInitials(name: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contacts/contacts-view/contacts-view.component.ts:133\n                        \n                    \n\n\n            \n                \n                        Generates initials from the contact's name for display purposes.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the contact.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                A string with the initials derived from the name.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goBackToContacts\n                        \n                    \n                \n            \n            \n                \ngoBackToContacts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contacts/contacts-view/contacts-view.component.ts:190\n                        \n                    \n\n\n            \n                \n                        Navigates back to the contacts list view.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contacts/contacts-view/contacts-view.component.ts:91\n                        \n                    \n\n\n            \n                \n                        Updates the contact details when the contact ID input changes.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nObject containing the changes in component input properties.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contacts/contacts-view/contacts-view.component.ts:71\n                        \n                    \n\n\n            \n                \n                        Initializes the component by loading contact details if a contact ID is provided\nor if present in the route parameters.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onContactEdited\n                        \n                    \n                \n            \n            \n                \nonContactEdited(contactEdited: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contacts/contacts-view/contacts-view.component.ts:172\n                        \n                    \n\n\n            \n                \n                        Handles the contact edit event. If successful, reloads contact details and emits contactUpdated event.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                contactEdited\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nBoolean indicating whether the contact was successfully edited.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showContactsEdit\n                        \n                    \n                \n            \n            \n                \nshowContactsEdit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contacts/contacts-view/contacts-view.component.ts:119\n                        \n                    \n\n\n            \n                \n                        Displays the edit overlay for the current contact, if available.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isVisible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/contacts/contacts-view/contacts-view.component.ts:34\n                        \n                    \n\n            \n                \n                    Boolean to manage internal visibility of the overlay within the component.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        showEditOverlay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/contacts/contacts-view/contacts-view.component.ts:49\n                        \n                    \n\n            \n                \n                    Boolean to control the display of the edit overlay for the contact.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  OnInit,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AddContactService } from 'src/app/services/add-contact.service';\nimport { Contact } from 'src/assets/models/contact.model';\nimport { ContactsOverlayService } from 'src/app/services/contacts-overlay-service.service';\n\n\n/**\n * Component to view detailed information of a contact. Allows editing and deleting a contact.\n * Supports displaying contact details in an overlay or standalone view based on screen size and visibility settings.\n */\n@Component({\n  selector: 'app-contacts-view',\n  templateUrl: './contacts-view.component.html',\n  styleUrls: ['./contacts-view.component.scss'],\n})\nexport class ContactsViewComponent implements OnInit, OnChanges {\n\n  /** The ID of the contact to view, which triggers fetching of contact details. */\n  @Input() contactId: number | null = null;\n\n  /** Boolean to control the visibility of the contact view overlay. */\n  @Input() isOverlayVisibleContactsView: boolean = false;\n\n  /** Boolean to manage internal visibility of the overlay within the component. */\n  isVisible: boolean = false;\n\n  /** Contact model containing details of the current contact. */\n  @Input() contact: Contact | null = null;\n\n  /** Event emitted when a contact is deleted. */\n  @Output() contactDeleted = new EventEmitter();\n\n  /** Event emitted when a contact is updated. */\n  @Output() contactUpdated = new EventEmitter();\n\n  /** Event emitted when the contact view component is closed. */\n  @Output() close = new EventEmitter();\n\n  /** Boolean to control the display of the edit overlay for the contact. */\n  public showEditOverlay: boolean = false;\n\n\n    /**\n   * Constructor to inject necessary services for managing contact data, navigation, and overlay visibility.\n   * @param route - ActivatedRoute for accessing route parameters.\n   * @param router - Angular Router for navigation.\n   * @param addContactService - Service for managing contact data.\n   * @param contactsOverlayService - Service for managing overlay visibility.\n   */\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private addContactService: AddContactService,\n    private contactsOverlayService: ContactsOverlayService,\n  ) {}\n\n\n    /**\n   * Initializes the component by loading contact details if a contact ID is provided\n   * or if present in the route parameters.\n   */\n  ngOnInit(): void {\n    if (this.contactId) {\n      this.fetchContactDetails(this.contactId);\n    } else if (!this.contact) {\n      this.route.params.subscribe(params => {\n        const contactId = +params['id'];\n        if (contactId) {\n          this.fetchContactDetails(contactId);\n        } else {\n          this.router.navigate(['/contacts']);\n        }\n      });\n    }\n  }\n\n\n    /**\n   * Updates the contact details when the contact ID input changes.\n   * @param changes - Object containing the changes in component input properties.\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['contactId'] && changes['contactId'].currentValue) {\n      this.fetchContactDetails(changes['contactId'].currentValue);\n    }\n  }\n\n\n  /**\n   * Fetches contact details based on the provided contact ID.\n   * If retrieval fails, navigates back to the contacts list.\n   * @param contactId - The ID of the contact to retrieve.\n   */\n  private fetchContactDetails(contactId: number): void {\n    this.addContactService.getContactById(contactId).subscribe({\n      next: (response: Contact) => {\n        this.contact = response;\n      },\n      error: error => {\n        console.error('Failed to load contact details', error);\n        this.router.navigate(['/contacts']);\n      },\n    });\n  }\n\n\n    /**\n   * Displays the edit overlay for the current contact, if available.\n   */\n  showContactsEdit(): void {\n    if (this.contact) {\n      this.showEditOverlay = true;\n    } else {\n      console.error('Contact data is not available.');\n    }\n  }\n\n\n    /**\n   * Generates initials from the contact's name for display purposes.\n   * @param name - The name of the contact.\n   * @returns A string with the initials derived from the name.\n   */\n  getInitials(name: string | undefined): string {\n    if (!name) return '';\n    return name\n      .split(' ')\n      .map(n => n[0])\n      .join('')\n      .toUpperCase();\n  }\n\n\n    /**\n   * Deletes the current contact and emits a contactDeleted event.\n   * If deletion is successful, navigates back to the contacts list.\n   */\n\n  deleteContact(): void {\n    if (!this.contact || !this.contact.id) {\n      console.error('Attempted to delete a contact without an ID.');\n      return;\n    }\n\n    const contactId = this.contact.id;\n    this.addContactService.deleteContact(contactId).subscribe({\n      next: () => {\n        this.router.navigate(['/contacts']);\n        this.contactDeleted.emit();\n        this.contactsOverlayService.setOverlayVisibility(false);\n      },\n      error: error => {\n        console.error('Failed to delete contact', error);\n      },\n    });\n  }\n\n\n    /**\n   * Handles the contact edit event. If successful, reloads contact details and emits contactUpdated event.\n   * @param contactEdited - Boolean indicating whether the contact was successfully edited.\n   */\n  onContactEdited(contactEdited: boolean): void {\n    if (contactEdited) {\n      if (this.contact && this.contact.id) {\n        this.fetchContactDetails(this.contact.id);\n        this.contactUpdated.emit();\n        this.showEditOverlay = false;\n      } else {\n        console.error('No contact or contact ID available for editing.');\n      }\n    } else {\n      console.log('Contact edit was not successful.');\n    }\n  }\n\n\n    /**\n   * Navigates back to the contacts list view.\n   */\n  goBackToContacts(): void {\n    this.router.navigate(['/contacts']);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n\n    \n      \n        Contacts\n        \n        Better with a team\n        \n        \n          \n            \n          \n        \n      \n\n      \n        {{\n          getInitials(contact?.name)\n        }}\n        \n          {{ contact?.name }}\n          \n             Edit\n             Delete\n          \n        \n      \n\n      \n        Contact information\n\n        \n          Email\n          {{ contact?.email }}\n          Phone\n          {{ contact?.phone }}\n        \n      \n\n      \n        \n          \n        \n\n        \n          \n            \n               Edit\n            \n          \n          \n            \n              \n              Delete\n            \n          \n        \n      \n    \n    \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./contacts-view.component.scss\n                \n                .contactsViewPage {\n  display: block;\n}\n\n.contactsViewContainer {\n  width: 100vw;\n  height: 100vh;\n  background-color: #f6f7f8;\n  display: flex;\n  flex-direction: column;\n}\n\n.contactsSmallHeadline {\n  display: block;\n}\n\n.contactsBackArrow {\n  display: block;\n  position: absolute;\n  top: 16px;\n  right: 16px;\n  cursor: pointer;\n}\n\n.contactsViewContent {\n  height: 80vh;\n  position: relative;\n  width: 100vw;\n  padding-right: 32px;\n  padding-left: 32px;\n  overflow: auto;\n  margin-top: 10vh;\n  margin-bottom: 10vh;\n}\n\n.smallHeadlineContacts {\n  font-size: calc(1.175rem + 0.5vw) !important;\n}\n\n.contactsUnderline {\n  border-bottom: 3px solid;\n  border-color: #29abe2;\n  width: min(120px, 50%);\n  padding-bottom: 8px;\n}\n\n.contactsDividingLine {\n  display: none;\n}\n\n.contactsInformationContainer {\n  display: flex;\n  flex-direction: column;\n}\n\n.intitialsContactNameContainer {\n  display: flex;\n  align-items: center;\n  margin-top: 32px;\n  margin-bottom: 16px;\n}\n\n.initialsCircleContactView {\n  color: #ffffff;\n  height: 80px;\n  width: 80px;\n  border-radius: 50%;\n  font-size: 2rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.contactsEditDeleteDesktop {\n  display: none;\n}\n\n.contactName {\n  font-family: 'InterBold';\n  font-size: calc(1.4rem + 1.5vw);\n  font-weight: 700;\n  margin-left: 16px;\n}\n\n.contactsInformation {\n  font-size: calc(1.175rem + 0.5vw);\n}\n\n.contactsEmailHeadline {\n  font-family: 'InterBold';\n  font-weight: 700;\n  margin-bottom: 8px;\n}\n\n.contactsEmail {\n  color: #007cee;\n  margin-bottom: 8px;\n}\n\n.contactsPhoneHeadline {\n  font-family: 'InterBold';\n  font-weight: 700;\n  margin-bottom: 8px;\n  margin-top: 8px;\n}\n\n.contactsPhone {\n  margin-bottom: 8px;\n}\n\n.moreIconContainer {\n  height: 56px;\n  width: 56px;\n  background-color: #2a3647;\n  border-radius: 50%;\n  position: fixed;\n  bottom: calc(10vh + 16px);\n  right: 16px;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.dropup {\n  position: fixed;\n  bottom: calc(10vh + 56px + 16px); \n  right: 16px; \n  cursor: pointer;\n}\n\n.linkContainerContactView {\n  border: none;\n  border-radius: 20px 20px 0px 20px;\n  background-color: #ffffff;\n  box-shadow: 0px 3px 3px rgba(0, 0, 0, 0.25);\n  position: absolute; \n  transform: translateY(80%) !important; \n}\n\n.footerComponent {\n  display: block;\n}\n\n.sidebarComponent {\n  display: none;\n}\n\n.contactsInformationContainerSmall {\n  display: flex;\n  flex-direction: column;\n}\n\n@media (min-width: 1025px) {\n  .headerDesktopContactsView {\n    display: none;\n  }\n\n  .sidebarComponent {\n    display: block;\n  }\n\n  .footerComponent {\n    display: none;\n  }\n\n  .contactsViewPage {\n    display: flex;\n  }\n\n  .contactsViewContainer {\n    width: 55vw;\n  }\n\n  .contactsViewContent {\n    width: 100%;\n    margin-bottom: 0vh;\n    overflow: hidden;\n    margin-top: 15vh;\n  }\n\n  .contactsSmallHeadline {\n    display: flex;\n    align-items: center;\n  }\n\n  .contactsUnderline {\n    display: none;\n  }\n\n  .contactsDividingLine {\n    display: block;\n    border-right: 3px solid;\n    border-color: #29abe2;\n    height: 48px;\n    padding-bottom: 8px;\n    margin-right: 16px;\n    margin-left: 16px;\n  }\n\n  .initialsCircleContactView {\n    height: 100px;\n    width: 100px;\n    font-size: 2.5rem;\n  }\n\n  .contactsEditDeleteDesktop {\n    display: block;\n    width: 100%;\n    margin-left: 16px;\n    margin-bottom: 8px;\n  }\n\n  .contactsEditLink {\n    margin-right: 16px;\n  }\n\n  .contactsEditLink:hover {\n    color: #29abe2;\n    cursor: pointer;\n  }\n\n  .moreIconContainer {\n    display: none;\n  }\n\n  .contactsBackArrow {\n    display: none;\n  }\n\n  .contactsInformationContainerSmall {\n    display: flex;\n    flex-direction: column;\n  }\n}\n\n@media screen and (orientation: landscape) and (max-width: 1024px) and (max-height: 512px) {\n  .contactsViewContent {\n    height: 70vh;\n    margin-top: 15vh;\n    margin-bottom: 15vh;\n  }\n\n  h1,\n  .h1 {\n    font-size: calc(1.375rem + 1.5vw) !important;\n  }\n\n  .smallHeadlineContacts {\n    font-size: calc(1rem + 0.5vw) !important;\n  }\n\n  .intitialsContactNameContainer {\n    margin-top: 15px;\n    margin-bottom: 8px;\n  }\n\n  .initialsCircleContactView {\n    height: 40px;\n    width: 40px;\n    font-size: 1rem;\n  }\n\n  .contactsSmallHeadline {\n    display: flex;\n    align-items: center;\n  }\n\n  .contactsDividingLine {\n    display: block;\n    border-right: 3px solid;\n    border-color: #29abe2;\n    height: 32px;\n    padding-bottom: 8px;\n    margin-right: 16px;\n    margin-left: 16px;\n  }\n\n  .contactsUnderline {\n    display: none;\n  }\n\n  .moreIconContainer {\n    bottom: calc(12vh + 16px);\n  }\n\n  .linkContainerContactView {\n    bottom: 17px !important;\n    position: absolute;\n  }\n\n  .contactsInformationContainerSmall {\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n  }\n\n  .contactsEmail {\n    margin-left: 8px;\n  }\n\n  .contactsPhoneHeadline {\n    margin-left: 16px;\n    margin-top: 0px;\n  }\n\n  .contactsPhone {\n    margin-left: 8px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  Contacts                Better with a team                                                                            {{          getInitials(contact?.name)        }}                  {{ contact?.name }}                       Edit             Delete                                      Contact information                  Email          {{ contact?.email }}          Phone          {{ contact?.phone }}                                                                                           Edit                                                                        Delete                                                            '\n    var COMPONENTS = [{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'BoardTaskOverlayComponent', 'selector': 'app-board-task-overlay'},{'name': 'ContactsAddComponent', 'selector': 'app-contacts-add'},{'name': 'ContactsEditComponent', 'selector': 'app-contacts-edit'},{'name': 'ContactsOverviewComponent', 'selector': 'app-contacts-overview'},{'name': 'ContactsViewComponent', 'selector': 'app-contacts-view'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'FooterBarComponent', 'selector': 'app-footer-bar'},{'name': 'HeaderBarMobileComponent', 'selector': 'app-header-bar-mobile'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'SummaryComponent', 'selector': 'app-summary'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContactsViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomDateParserFormatter.html":{"url":"injectables/CustomDateParserFormatter.html","title":"injectable - CustomDateParserFormatter","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CustomDateParserFormatter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/custom-date-parser-formatter.service.ts\n        \n\n\n            \n                Description\n            \n            \n                CustomDateParserFormatter provides a custom date parsing and formatting service\nfor NgbDatePicker, using the \"yyyy-MM-dd\" format.\n\n            \n\n            \n                Extends\n            \n            \n                        NgbDateParserFormatter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                format\n                            \n                            \n                                parse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        format\n                        \n                    \n                \n            \n            \n                \nformat(date: NgbDateStruct | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/custom-date-parser-formatter.service.ts:38\n                        \n                    \n\n\n            \n                \n                        Formats an NgbDateStruct into a string in \"yyyy-MM-dd\" format.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                        NgbDateStruct | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe NgbDateStruct to format.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                A formatted date string or an empty string if the date is null.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parse\n                        \n                    \n                \n            \n            \n                \nparse(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/custom-date-parser-formatter.service.ts:18\n                        \n                    \n\n\n            \n                \n                        Parses a string in \"yyyy-MM-dd\" format into an NgbDateStruct.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe date string to parse.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     NgbDateStruct | null\n\n                        \n                            \n                                An NgbDateStruct if parsing is successful, otherwise null.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { NgbDateParserFormatter, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\n\n\n/**\n * CustomDateParserFormatter provides a custom date parsing and formatting service\n * for NgbDatePicker, using the \"yyyy-MM-dd\" format.\n */\n@Injectable()\nexport class CustomDateParserFormatter extends NgbDateParserFormatter {\n\n\n    /**\n   * Parses a string in \"yyyy-MM-dd\" format into an NgbDateStruct.\n   * @param value - The date string to parse.\n   * @returns An NgbDateStruct if parsing is successful, otherwise null.\n   */\n  parse(value: string): NgbDateStruct | null {\n    if (value) {\n      const dateParts = value.trim().split('-');\n      if (dateParts.length === 3) {\n        return {\n          year: parseInt(dateParts[0], 10),\n          month: parseInt(dateParts[1], 10),\n          day: parseInt(dateParts[2], 10),\n        };\n      }\n    }\n    return null;\n  }\n\n\n    /**\n   * Formats an NgbDateStruct into a string in \"yyyy-MM-dd\" format.\n   * @param date - The NgbDateStruct to format.\n   * @returns A formatted date string or an empty string if the date is null.\n   */\n  format(date: NgbDateStruct | null): string {\n    if (!date) return '';\n    const month = date.month \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomDateParserFormatter-1.html":{"url":"injectables/CustomDateParserFormatter-1.html","title":"injectable - CustomDateParserFormatter-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CustomDateParserFormatter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/custom-dateparser-formatter.ts\n        \n\n\n            \n                Description\n            \n            \n                CustomDateParserFormatter provides custom parsing and formatting for dates in \"dd/MM/yyyy\" format\nto be used with NgbDatePicker.\n\n            \n\n            \n                Extends\n            \n            \n                        NgbDateParserFormatter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                format\n                            \n                            \n                                    Private\n                                pad\n                            \n                            \n                                parse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        format\n                        \n                    \n                \n            \n            \n                \nformat(date: NgbDateStruct | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/custom-dateparser-formatter.ts:38\n                        \n                    \n\n\n            \n                \n                        Formats an NgbDateStruct into a string in \"dd/MM/yyyy\" format.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                        NgbDateStruct | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe NgbDateStruct to format.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                A formatted date string, or an empty string if the date is null.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        pad\n                        \n                    \n                \n            \n            \n                \n                        \n                    pad(number: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/custom-dateparser-formatter.ts:48\n                        \n                    \n\n\n            \n                \n                        Adds a leading zero to numbers less than 10 for consistent two-digit formatting.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                number\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe number to pad.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | number\n\n                        \n                            \n                                A string with the number padded to two digits if needed.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parse\n                        \n                    \n                \n            \n            \n                \nparse(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/custom-dateparser-formatter.ts:18\n                        \n                    \n\n\n            \n                \n                        Parses a date string in \"dd/MM/yyyy\" format and converts it to an NgbDateStruct.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe date string to parse.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     NgbDateStruct | null\n\n                        \n                            \n                                An NgbDateStruct if parsing is successful, otherwise null.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { NgbDateParserFormatter, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\n\n\n/**\n * CustomDateParserFormatter provides custom parsing and formatting for dates in \"dd/MM/yyyy\" format\n * to be used with NgbDatePicker.\n */\n@Injectable()\nexport class CustomDateParserFormatter extends NgbDateParserFormatter {\n\n\n    /**\n   * Parses a date string in \"dd/MM/yyyy\" format and converts it to an NgbDateStruct.\n   * @param value - The date string to parse.\n   * @returns An NgbDateStruct if parsing is successful, otherwise null.\n   */\n  parse(value: string): NgbDateStruct | null {\n    if (value) {\n      const dateParts = value.trim().split('/');\n      if (dateParts.length === 3) {\n        return {\n          day: parseInt(dateParts[0], 10),\n          month: parseInt(dateParts[1], 10),\n          year: parseInt(dateParts[2], 10),\n        };\n      }\n    }\n    return null;\n  }\n\n\n    /**\n   * Formats an NgbDateStruct into a string in \"dd/MM/yyyy\" format.\n   * @param date - The NgbDateStruct to format.\n   * @returns A formatted date string, or an empty string if the date is null.\n   */\n  format(date: NgbDateStruct | null): string {\n    return date ? `${this.pad(date.day)}/${this.pad(date.month)}/${date.year}` : '';\n  }\n\n\n    /**\n   * Adds a leading zero to numbers less than 10 for consistent two-digit formatting.\n   * @param number - The number to pad.\n   * @returns A string with the number padded to two digits if needed.\n   */\n  private pad(number: number) {\n    return number \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterBarComponent.html":{"url":"components/FooterBarComponent.html","title":"component - FooterBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterBarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/footer-bar/footer-bar.component.ts\n\n\n\n    \n        Description\n    \n    \n        FooterBarComponent is responsible for navigation within the footer bar,\nhighlighting the active page and providing shortcuts to key sections.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer-bar\n            \n\n\n\n            \n                styleUrls\n                ./footer-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./footer-bar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isAddTaskPage\n                            \n                            \n                                isBoardPage\n                            \n                            \n                                isContactsPage\n                            \n                            \n                                isSummaryPage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToAddtask\n                            \n                            \n                                goToBoard\n                            \n                            \n                                goToContacts\n                            \n                            \n                                goToSummary\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                resetPageFlags\n                            \n                            \n                                    Private\n                                setPageFlag\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/footer-bar/footer-bar.component.ts:26\n                            \n                        \n\n                \n                    \n                            Constructor to inject the Angular Router for navigation and URL monitoring.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nRouter for navigation and tracking route events.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goToAddtask\n                        \n                    \n                \n            \n            \n                \ngoToAddtask()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/footer-bar/footer-bar.component.ts:87\n                        \n                    \n\n\n            \n                \n                        Navigates to the Add Task page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToBoard\n                        \n                    \n                \n            \n            \n                \ngoToBoard()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/footer-bar/footer-bar.component.ts:93\n                        \n                    \n\n\n            \n                \n                        Navigates to the Board page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToContacts\n                        \n                    \n                \n            \n            \n                \ngoToContacts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/footer-bar/footer-bar.component.ts:75\n                        \n                    \n\n\n            \n                \n                        Navigates to the Contacts page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToSummary\n                        \n                    \n                \n            \n            \n                \ngoToSummary()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/footer-bar/footer-bar.component.ts:81\n                        \n                    \n\n\n            \n                \n                        Navigates to the Summary page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/footer-bar/footer-bar.component.ts:40\n                        \n                    \n\n\n            \n                \n                        Initializes the component by subscribing to router events to set the current active page.\nSets the page flag based on the initial route on component load.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resetPageFlags\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetPageFlags()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/footer-bar/footer-bar.component.ts:54\n                        \n                    \n\n\n            \n                \n                        Resets all page flags to false. Called before setting the active page flag.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setPageFlag\n                        \n                    \n                \n            \n            \n                \n                        \n                    setPageFlag(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/footer-bar/footer-bar.component.ts:66\n                        \n                    \n\n\n            \n                \n                        Sets the appropriate page flag to true based on the current URL.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe current URL to determine the active page.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isAddTaskPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/footer-bar/footer-bar.component.ts:23\n                        \n                    \n\n            \n                \n                    Boolean indicating if the Add Task page is active.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isBoardPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/footer-bar/footer-bar.component.ts:20\n                        \n                    \n\n            \n                \n                    Boolean indicating if the Board page is active.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isContactsPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/footer-bar/footer-bar.component.ts:26\n                        \n                    \n\n            \n                \n                    Boolean indicating if the Contacts page is active.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSummaryPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/footer-bar/footer-bar.component.ts:17\n                        \n                    \n\n            \n                \n                    Boolean indicating if the Summary page is active.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router, NavigationEnd, Event as RouterEvent } from '@angular/router';\n\n\n/**\n * FooterBarComponent is responsible for navigation within the footer bar,\n * highlighting the active page and providing shortcuts to key sections.\n */\n@Component({\n  selector: 'app-footer-bar',\n  templateUrl: './footer-bar.component.html',\n  styleUrls: ['./footer-bar.component.scss'],\n})\nexport class FooterBarComponent implements OnInit {\n\n  /** Boolean indicating if the Summary page is active. */\n  isSummaryPage: boolean = false;\n\n  /** Boolean indicating if the Board page is active. */\n  isBoardPage: boolean = false;\n\n  /** Boolean indicating if the Add Task page is active. */\n  isAddTaskPage: boolean = false;\n\n  /** Boolean indicating if the Contacts page is active. */\n  isContactsPage: boolean = false;\n\n\n   /**\n   * Constructor to inject the Angular Router for navigation and URL monitoring.\n   * @param router - Router for navigation and tracking route events.\n   */\n  constructor(private router: Router) {}\n\n\n    /**\n   * Initializes the component by subscribing to router events to set the current active page.\n   * Sets the page flag based on the initial route on component load.\n   */\n  ngOnInit() {\n    this.router.events.subscribe(event => {\n      if (event instanceof NavigationEnd) {\n        this.resetPageFlags();\n        this.setPageFlag(event.urlAfterRedirects);\n      }\n    });\n    this.setPageFlag(this.router.url);\n  }\n\n\n    /**\n   * Resets all page flags to false. Called before setting the active page flag.\n   */\n  private resetPageFlags() {\n    this.isSummaryPage = false;\n    this.isBoardPage = false;\n    this.isAddTaskPage = false;\n    this.isContactsPage = false;\n  }\n\n\n    /**\n   * Sets the appropriate page flag to true based on the current URL.\n   * @param url - The current URL to determine the active page.\n   */\n  private setPageFlag(url: string) {\n    this.isSummaryPage = url.includes('/summary');\n    this.isBoardPage = url.includes('/board');\n    this.isAddTaskPage = url.includes('/addtask');\n    this.isContactsPage = url.includes('/contacts');\n  }\n\n\n    /** Navigates to the Contacts page. */\n  goToContacts() {\n    this.router.navigate(['/contacts']);\n  }\n\n\n  /** Navigates to the Summary page. */\n  goToSummary() {\n    this.router.navigate(['/summary']);\n  }\n\n\n  /** Navigates to the Add Task page. */\n  goToAddtask() {\n    this.router.navigate(['/addtask']);\n  }\n\n\n  /** Navigates to the Board page. */\n  goToBoard() {\n    this.router.navigate(['/board']);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        \n      \n    \n    \n  \n  \n    \n      \n        \n        \n        \n      \n    \n    \n  \n  \n    \n      \n        \n          \n        \n        \n          \n        \n        \n      \n    \n    \n  \n  \n    \n      \n        \n          \n        \n        \n          \n        \n        \n      \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./footer-bar.component.scss\n                \n                .footerBar {\n  background-color: #2a3647;\n  height: 10vh;\n  width: 100%;\n  position: absolute;\n  bottom: 0;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n}\n\n.iconContainerFooter {\n  height: 100%;\n  display: flex;\n  align-items: center;\n  border-radius: 16px;\n  padding-left: 8px;\n  padding-right: 8px;\n}\n\n.hoverFooterIcons:hover {\n  background-color: #091931;\n  cursor: pointer;\n}\n\n.activeRouteIcon {\n  background-color: #091931 !important;\n}\n\n@media screen and (orientation: landscape) and (max-width: 1024px) and (max-height: 512px) {\n  .footerBar {\n    height: 15vh;\n  }\n\n  svg {\n    height: 50px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                                                                                '\n    var COMPONENTS = [{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'BoardTaskOverlayComponent', 'selector': 'app-board-task-overlay'},{'name': 'ContactsAddComponent', 'selector': 'app-contacts-add'},{'name': 'ContactsEditComponent', 'selector': 'app-contacts-edit'},{'name': 'ContactsOverviewComponent', 'selector': 'app-contacts-overview'},{'name': 'ContactsViewComponent', 'selector': 'app-contacts-view'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'FooterBarComponent', 'selector': 'app-footer-bar'},{'name': 'HeaderBarMobileComponent', 'selector': 'app-header-bar-mobile'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'SummaryComponent', 'selector': 'app-summary'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderBarMobileComponent.html":{"url":"components/HeaderBarMobileComponent.html","title":"component - HeaderBarMobileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderBarMobileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/header-bar-mobile/header-bar-mobile.component.ts\n\n\n\n    \n        Description\n    \n    \n        HeaderBarMobileComponent is responsible for managing the mobile header bar,\ndisplaying user initials, and handling navigation and logout.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header-bar-mobile\n            \n\n\n\n            \n                styleUrls\n                ./header-bar-mobile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header-bar-mobile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isDropdownOpen\n                            \n                            \n                                userInitial\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToSummary\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleDropdown\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/header-bar-mobile/header-bar-mobile.component.ts:22\n                            \n                        \n\n                \n                    \n                            Constructor to inject the Angular Router for navigation and UserService for user data.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nRouter for navigation.\n\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService for fetching user information.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goToSummary\n                        \n                    \n                \n            \n            \n                \ngoToSummary()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/header-bar-mobile/header-bar-mobile.component.ts:70\n                        \n                    \n\n\n            \n                \n                        Navigates to the Summary page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/header-bar-mobile/header-bar-mobile.component.ts:60\n                        \n                    \n\n\n            \n                \n                        Logs the user out by clearing relevant local and session storage data\nand navigating to the login page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/header-bar-mobile/header-bar-mobile.component.ts:40\n                        \n                    \n\n\n            \n                \n                        Initializes the component by fetching the current user and setting the user's initial.\nAssumes name property in User model represents the full name.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleDropdown\n                        \n                    \n                \n            \n            \n                \ntoggleDropdown()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/header-bar-mobile/header-bar-mobile.component.ts:51\n                        \n                    \n\n\n            \n                \n                        Toggles the visibility of the dropdown menu.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isDropdownOpen\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/header-bar-mobile/header-bar-mobile.component.ts:19\n                        \n                    \n\n            \n                \n                    Controls the visibility of the dropdown menu.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userInitial\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/header-bar-mobile/header-bar-mobile.component.ts:22\n                        \n                    \n\n            \n                \n                    Stores the initial of the user's name for display.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router'; // Import Router from '@angular/router'\nimport { UserService } from 'src/app/services/user.service';\nimport { User } from 'src/assets/models/user.model';\n\n\n/**\n * HeaderBarMobileComponent is responsible for managing the mobile header bar,\n * displaying user initials, and handling navigation and logout.\n */\n@Component({\n  selector: 'app-header-bar-mobile',\n  templateUrl: './header-bar-mobile.component.html',\n  styleUrls: ['./header-bar-mobile.component.scss'],\n})\nexport class HeaderBarMobileComponent implements OnInit {\n\n    /** Controls the visibility of the dropdown menu. */\n  isDropdownOpen: boolean = false;\n\n  /** Stores the initial of the user's name for display. */\n  userInitial: string = '';\n\n\n    /**\n   * Constructor to inject the Angular Router for navigation and UserService for user data.\n   * @param router - Router for navigation.\n   * @param userService - Service for fetching user information.\n   */\n  constructor(\n    private router: Router,\n    private userService: UserService,\n  ) {}\n\n\n  /**\n   * Initializes the component by fetching the current user and setting the user's initial.\n   * Assumes `name` property in User model represents the full name.\n   */\n  ngOnInit() {\n    this.userService.getCurrentUser().subscribe(user => {\n      if (user && user.name) {\n        // Assuming 'name' is a property of the User model and contains the full name\n        this.userInitial = user.name.charAt(0).toUpperCase();\n      }\n    });\n  }\n\n\n  /** Toggles the visibility of the dropdown menu. */\n  toggleDropdown() {\n    this.isDropdownOpen = !this.isDropdownOpen;\n  }\n\n\n    /**\n   * Logs the user out by clearing relevant local and session storage data\n   * and navigating to the login page.\n   */\n  logout() {\n    localStorage.removeItem('auth_token');\n    sessionStorage.removeItem('auth_token');\n    localStorage.removeItem('user_details');\n    this.router.navigateByUrl('/login');\n    sessionStorage.removeItem('showOverlay');\n  }\n\n\n  /** Navigates to the Summary page. */\n  goToSummary() {\n    this.router.navigate(['/summary']);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n      \n      \n      \n      \n    \n  \n  Kanban Project Management Tool\n  \n    \n      {{ userInitial }}\n    \n\n    \n      Legal Notice\n      Privacy Policy\n      \n        Log out\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./header-bar-mobile.component.scss\n                \n                .headerContainer {\n  box-shadow: 0px 5px 5px rgba(0, 0, 0, 0.1);\n  height: 10vh;\n  width: 100%;\n  position: absolute;\n  top: 0;\n  background-color: #ffffff;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  z-index: 3;\n}\n\n.iconContainerHeader {\n  margin-left: 16px;\n  display: block;\n}\n\n.logo {\n  cursor: pointer;\n}\n\n.initialsContainer {\n  width: 40px;\n  height: 40px;\n  border: 2px solid #2a3647;\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-right: 16px;\n}\n\n.initials {\n  font-weight: bold;\n  color: #29abe2;\n  text-decoration: none;\n}\n\n.linkContainer {\n  background-color: #2a3647;\n  inset: 56px 4px auto auto !important;\n  border-top-left-radius: 20px;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  transform: none !important;\n}\n\n.link {\n  color: #ffffff;\n}\n\n.link:hover {\n  background-color: #091931;\n  border-radius: 10px;\n}\n\n.headerText {\n  display: none;\n}\n\n@media (min-width: 1025px) {\n  .headerContainer {\n    width: 85vw;\n    right: 0;\n  }\n\n  .iconContainerHeader {\n    display: none;\n  }\n\n  .headerText {\n    display: block;\n    font-weight: 500;\n    margin-left: 48px;\n  }\n}\n\n@media screen and (orientation: landscape) and (max-width: 1024px) and (max-height: 512px) {\n  .headerContainer {\n    height: 15vh;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                  Kanban Project Management Tool            {{ userInitial }}              Legal Notice      Privacy Policy              Log out            '\n    var COMPONENTS = [{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'BoardTaskOverlayComponent', 'selector': 'app-board-task-overlay'},{'name': 'ContactsAddComponent', 'selector': 'app-contacts-add'},{'name': 'ContactsEditComponent', 'selector': 'app-contacts-edit'},{'name': 'ContactsOverviewComponent', 'selector': 'app-contacts-overview'},{'name': 'ContactsViewComponent', 'selector': 'app-contacts-view'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'FooterBarComponent', 'selector': 'app-footer-bar'},{'name': 'HeaderBarMobileComponent', 'selector': 'app-header-bar-mobile'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'SummaryComponent', 'selector': 'app-summary'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderBarMobileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LegalNoticeComponent.html":{"url":"components/LegalNoticeComponent.html","title":"component - LegalNoticeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LegalNoticeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/imprint/legal-notice/legal-notice.component.ts\n\n\n\n    \n        Description\n    \n    \n        LegalNoticeComponent displays the legal notice of the application.\nThis component provides information regarding legal disclosures, ownership,\nand other regulatory information required for user transparency.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-legal-notice\n            \n\n\n\n            \n                styleUrls\n                ./legal-notice.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./legal-notice.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n\n/**\n * LegalNoticeComponent displays the legal notice of the application.\n * This component provides information regarding legal disclosures, ownership,\n * and other regulatory information required for user transparency.\n */\n@Component({\n  selector: 'app-legal-notice',\n  templateUrl: './legal-notice.component.html',\n  styleUrls: ['./legal-notice.component.scss'],\n})\nexport class LegalNoticeComponent {}\n\n    \n\n    \n        \n  \n    \n      \n        \n        \n        \n        \n        \n        \n      \n    \n    Kanban Project Management Tool\n  \n  \n    \n      \n        \n          \n          \n          \n          \n          \n          \n        \n        \n          \n            \n          \n        \n      \n    \n  \n  \n    Impressum\n    \n    \n    Angaben gemäß § 5 TMG\n\n    Fabian Dürr\n    Haubenschloßstr. 13\n    87435 Kempten\n    \n    Kontakt\n    Telefon: +49 (0) 15172536808\n    E-Mail: fabianduerr&#64;web.de\n    \n    Quelle: https://www.e-recht24.de\n  \n\n\n    \n\n    \n                \n                    ./legal-notice.component.scss\n                \n                .legalNoticeContainer {\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n}\n\n.sidebarContnentContainer {\n  display: none;\n}\n\n.legalNoticeContent {\n  background-color: #f6f7f8;\n  width: 100vw;\n  font-weight: bold;\n  padding: 32px;\n  margin-top: 10vh;\n}\n\n.headerContainer {\n  box-shadow: 0px 5px 5px rgba(0, 0, 0, 0.1);\n  height: 10vh;\n  width: 100%;\n  position: absolute;\n  top: 0;\n  background-color: #ffffff;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  z-index: 3;\n}\n\n.iconContainerHeader {\n  margin-left: 16px;\n  display: block;\n}\n\n.initialsContainer {\n  width: 40px;\n  height: 40px;\n  border: 2px solid #2a3647;\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-right: 16px;\n}\n\n.initials {\n  font-weight: bold;\n  color: #29abe2;\n  text-decoration: none;\n}\n\n.linkContainer {\n  background-color: #2a3647;\n  inset: 56px 4px auto auto !important;\n  border-top-left-radius: 20px;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  transform: none !important;\n}\n\n.link {\n  color: #ffffff;\n}\n\n.link:hover {\n  background-color: #091931;\n  border-radius: 10px;\n}\n\n.headerText {\n  display: none;\n}\n\n@media (min-width: 1025px) {\n  .sidebarContnentContainer {\n    background-color: #2a3647;\n    height: 100vh;\n    width: 15vw;\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n  }\n\n  .legalNoticeContent {\n    width: 85vw;\n  }\n\n  .iconContainerSidebar {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding-top: 8px;\n    padding-bottom: 8px;\n    margin-top: 40px;\n    width: 15vw;\n  }\n\n  .boardIcon {\n    padding-right: 16px;\n  }\n\n  .iconText {\n    color: white;\n    font-weight: 500;\n    margin-left: 10px;\n  }\n\n  .hoverSidebarIcons:hover {\n    background-color: #091931;\n    cursor: pointer;\n  }\n\n  .activeRouteIconSidebar {\n    background-color: #091931 !important;\n  }\n\n  .logoContainer {\n    height: 30vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .allIconsContainer {\n    height: 55vh;\n    display: flex;\n    flex-direction: column;\n    width: 15vw;\n  }\n\n  .imprintContainer {\n    height: 10vh;\n    color: #ffffff;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-evenly;\n  }\n\n  .imprintLink {\n    cursor: pointer;\n  }\n\n  .imprintLink:hover {\n    color: #29abe2;\n  }\n\n  .headerContainer {\n    width: 85vw;\n    right: 0;\n  }\n\n  .iconContainerHeader {\n    display: none;\n  }\n\n  .headerText {\n    display: block;\n    font-weight: 500;\n    margin-left: 48px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                          Kanban Project Management Tool                                                                                                                                                            Impressum            Angaben gemäß § 5 TMG    Fabian Dürr    Haubenschloßstr. 13    87435 Kempten        Kontakt    Telefon: +49 (0) 15172536808    E-Mail: fabianduerr@web.de        Quelle: https://www.e-recht24.de  '\n    var COMPONENTS = [{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'BoardTaskOverlayComponent', 'selector': 'app-board-task-overlay'},{'name': 'ContactsAddComponent', 'selector': 'app-contacts-add'},{'name': 'ContactsEditComponent', 'selector': 'app-contacts-edit'},{'name': 'ContactsOverviewComponent', 'selector': 'app-contacts-overview'},{'name': 'ContactsViewComponent', 'selector': 'app-contacts-view'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'FooterBarComponent', 'selector': 'app-footer-bar'},{'name': 'HeaderBarMobileComponent', 'selector': 'app-header-bar-mobile'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'SummaryComponent', 'selector': 'app-summary'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LegalNoticeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n    \n        Description\n    \n    \n        LoginComponent handles user authentication by managing login credentials,\nvisibility of the password, and error messages. It also allows guest login and\nredirects upon successful login.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n\n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                isPasswordWrong\n                            \n                            \n                                isUsernameWrong\n                            \n                            \n                                password\n                            \n                            \n                                passwordVisible\n                            \n                            \n                                rememberMe\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                displayErrorMessage\n                            \n                            \n                                goToLogIn\n                            \n                            \n                                goToSignUp\n                            \n                            \n                                guestLogin\n                            \n                            \n                                login\n                            \n                            \n                                    Private\n                                resetFields\n                            \n                            \n                                    Private\n                                storeToken\n                            \n                            \n                                togglePasswordVisibility\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loginService: LoginService, router: Router, userService: UserService, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:36\n                            \n                        \n\n                \n                    \n                            Constructor to inject necessary services for login, user management, and navigation.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        loginService\n                                                  \n                                                        \n                                                                        LoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService for handling login requests.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nRouter for navigation.\n\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService for managing user data.\n\n\n                                                        \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nHttpClient for making HTTP requests.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        displayErrorMessage\n                        \n                    \n                \n            \n            \n                \ndisplayErrorMessage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:96\n                        \n                    \n\n\n            \n                \n                        Displays an error message indicating incorrect username or password.\nResets the input fields to blank.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToLogIn\n                        \n                    \n                \n            \n            \n                \ngoToLogIn()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:141\n                        \n                    \n\n\n            \n                \n                        Navigates directly to the Summary page after logging in.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToSignUp\n                        \n                    \n                \n            \n            \n                \ngoToSignUp()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:114\n                        \n                    \n\n\n            \n                \n                        Navigates to the sign-up page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        guestLogin\n                        \n                    \n                \n            \n            \n                \nguestLogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:106\n                        \n                    \n\n\n            \n                \n                        Logs in as a guest user by setting predefined credentials.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:64\n                        \n                    \n\n\n            \n                \n                        Attempts to log the user in using the provided credentials.\nUpon successful login, stores the token and navigates to the Summary page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resetFields\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetFields()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:134\n                        \n                    \n\n\n            \n                \n                        Clears the email and password fields.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        storeToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    storeToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:124\n                        \n                    \n\n\n            \n                \n                        Stores the authentication token in either localStorage or sessionStorage,\nbased on the \"Remember Me\" selection.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe authentication token to store.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        togglePasswordVisibility\n                        \n                    \n                \n            \n            \n                \ntogglePasswordVisibility()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:55\n                        \n                    \n\n\n            \n                \n                        Toggles the visibility of the password field.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:21\n                        \n                    \n\n            \n                \n                    Stores the entered email address for login.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isPasswordWrong\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:30\n                        \n                    \n\n            \n                \n                    Tracks if an incorrect password error is displayed.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUsernameWrong\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:33\n                        \n                    \n\n            \n                \n                    Tracks if an incorrect username error is displayed.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:24\n                        \n                    \n\n            \n                \n                    Stores the entered password for login.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordVisible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:27\n                        \n                    \n\n            \n                \n                    Controls visibility of the password field.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rememberMe\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:36\n                        \n                    \n\n            \n                \n                    Determines if the authentication token should be stored persistently.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { LoginService } from 'src/app/auth/login.service';\nimport { UserService } from 'src/app/services/user.service';\n\n\n/**\n * LoginComponent handles user authentication by managing login credentials,\n * visibility of the password, and error messages. It also allows guest login and\n * redirects upon successful login.\n */\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent {\n\n  /** Stores the entered email address for login. */\n  email: string = '';\n\n  /** Stores the entered password for login. */\n  password: string = '';\n\n  /** Controls visibility of the password field. */\n  passwordVisible: boolean = false;\n\n  /** Tracks if an incorrect password error is displayed. */\n  isPasswordWrong: boolean = false;\n\n  /** Tracks if an incorrect username error is displayed. */\n  isUsernameWrong: boolean = false;\n\n  /** Determines if the authentication token should be stored persistently. */\n  rememberMe: boolean = false;\n\n\n    /**\n   * Constructor to inject necessary services for login, user management, and navigation.\n   * @param loginService - Service for handling login requests.\n   * @param router - Router for navigation.\n   * @param userService - Service for managing user data.\n   * @param http - HttpClient for making HTTP requests.\n   */\n  constructor(\n    private loginService: LoginService,\n    private router: Router,\n    private userService: UserService,\n    private http: HttpClient,\n  ) {}\n\n\n    /** Toggles the visibility of the password field. */\n  togglePasswordVisibility(): void {\n    this.passwordVisible = !this.passwordVisible;\n  }\n\n\n    /**\n   * Attempts to log the user in using the provided credentials.\n   * Upon successful login, stores the token and navigates to the Summary page.\n   */\n  login(): void {\n    this.loginService.login(this.email, this.password).subscribe({\n      next: response => {\n        if (response && response.token) {\n          this.storeToken(response.token);\n\n          if (response.user) {\n            this.userService.setCurrentUser(response.user); \n          } else {\n            console.log('No user details in response'); \n          }\n\n          this.router.navigate(['/summary']);\n          this.isPasswordWrong = false;\n          this.isUsernameWrong = false;\n        } else {\n          console.error('Invalid response structure', response);\n          this.displayErrorMessage(); \n        }\n      },\n      error: error => {\n        console.error('Login failed:', error);\n        this.displayErrorMessage(); \n      },\n    });\n  }\n\n\n    /**\n   * Displays an error message indicating incorrect username or password.\n   * Resets the input fields to blank.\n   */\n  displayErrorMessage(): void {\n    this.isPasswordWrong = true;\n    this.isUsernameWrong = true;\n    this.resetFields(); \n  }\n\n\n    /**\n   * Logs in as a guest user by setting predefined credentials.\n   */\n  guestLogin(): void {\n    this.email = 'guest@guest.com';\n    this.password = 'L!9NbQY.3V';\n    this.login();\n  }\n\n\n    /** Navigates to the sign-up page. */\n  goToSignUp(): void {\n    this.router.navigate(['/signup']);\n  }\n\n\n    /**\n   * Stores the authentication token in either localStorage or sessionStorage,\n   * based on the \"Remember Me\" selection.\n   * @param token - The authentication token to store.\n   */\n  private storeToken(token: string): void {\n    if (this.rememberMe) {\n      localStorage.setItem('auth_token', token);\n    } else {\n      sessionStorage.setItem('auth_token', token);\n    }\n  }\n\n\n    /** Clears the email and password fields. */\n  private resetFields(): void {\n    this.email = '';\n    this.password = '';\n  }\n\n\n    /** Navigates directly to the Summary page after logging in. */\n  goToLogIn(): void {\n    this.router.navigate(['/summary']);\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n    \n    \n    \n    \n  \n\n\n\n  \n    \n      \n      \n      \n      \n      \n      \n    \n  \n  \n    \n      Log in\n      \n    \n\n    \n      \n        \n        \n        \n        \n        \n        \n      \n    \n    \n      \n        \n        Email address\n      \n\n      Username or password is wrong! Try again.\n\n      \n        \n        Password\n        \n          \n        \n      \n\n      \n        \n         Remember me \n      \n\n      Log in\n      \n        Guest Log in\n      \n    \n  \n\n  \n    \n      \n        Not a Join user?\n      \n      \n        Sign up\n      \n    \n\n    \n      Privacy Policy\n      Legal notice\n    \n  \n\n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                h1 {\n  display: flex;\n  justify-content: center;\n  margin: 16px;\n}\n\n.headlineContainer {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 16px;\n}\n\n.underline {\n  border-bottom: 3px solid;\n  border-color: #29abe2;\n  width: 60%;\n}\n\n.inputField {\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n}\n\n.inputContainer {\n  width: 90%;\n  display: flex;\n  align-items: center;\n  position: relative;\n}\n\n.h58 {\n  height: 56px;\n}\n\n.borderNone {\n  border: none !important;\n}\n\n.formContainer {\n  width: 100%;\n  height: 80%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n}\n\n.formInput {\n  background-image: url('/assets/img/mail.png');\n  background-repeat: no-repeat;\n  background-position: calc(100% - 18px);\n}\n\n.formInputPassword {\n  background-repeat: no-repeat;\n  background-position: right 10px center;\n  padding-right: 40px;\n}\n\n.loginContainer {\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  height: 100vh;\n}\n\n.logoContainer {\n  height: 20vh;\n  position: relative;\n  top: 16px;\n  width: calc(100% - 32px);\n}\n\n.logoContainerMobile {\n  display: none;\n}\n\n.mainContainer {\n  height: 80vh;\n  background-color: #ffffff;\n  width: min(652px, 90%);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n  border-radius: 30px;\n}\n\n.footerContainer {\n  height: 20vh;\n  width: 90vw;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  flex-direction: column;\n}\n\n.SignupFootercontainer {\n  flex-direction: row;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  width: 90vw;\n}\n\n.btn-toggle-visibility {\n  position: absolute;\n  height: 100%;\n  right: 0px;\n  border: none;\n  background: transparent;\n  cursor: pointer;\n}\n\n.checkboxContainer {\n  width: 80%;\n}\n\n.checkboxInput {\n  border-color: #2a3647;\n  border-width: 2px;\n  box-shadow: none;\n}\n\n.notJoin {\n  font-weight: 400;\n  font-size: 1.5rem;\n}\n\n.linkContainer {\n  flex-direction: row;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  width: 90vw;\n}\n\n.link {\n  cursor: pointer;\n}\n\n@media screen and (orientation: landscape) and (max-width: 1024px) {\n  .logoContainer {\n    display: none;\n  }\n\n  .logoContainerMobile {\n    display: block;\n    position: absolute;\n    top: 16px;\n    left: 16px;\n  }\n\n  .mainContainer {\n    height: 100vh;\n    width: 100vw;\n  }\n}\n\n.overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: white;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 9999; \n  animation: overlayFadeOut 2s ease-in-out forwards;\n}\n\n\n.logo {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%) scale(2); \n  animation: logoMove 2s ease-in-out forwards;\n  transform-origin: center center; \n}\n\n\n@keyframes logoMove {\n  0% {\n    transform: scale(2) translate(-50%, -50%); \n    opacity: 1;\n  }\n  100% {\n    transform: scale(1) translate(0, 0); \n    opacity: 0; \n    top: 16px;\n    left: 16px;\n  }\n}\n\n\n@keyframes overlayFadeOut {\n  0% {\n    opacity: 1;\n  }\n  100% {\n    opacity: 0;\n    visibility: hidden; \n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                        Log in                                                                                                        Email address            Username or password is wrong! Try again.                      Password                                                       Remember me             Log in              Guest Log in                                Not a Join user?                    Sign up                    Privacy Policy      Legal notice      '\n    var COMPONENTS = [{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'BoardTaskOverlayComponent', 'selector': 'app-board-task-overlay'},{'name': 'ContactsAddComponent', 'selector': 'app-contacts-add'},{'name': 'ContactsEditComponent', 'selector': 'app-contacts-edit'},{'name': 'ContactsOverviewComponent', 'selector': 'app-contacts-overview'},{'name': 'ContactsViewComponent', 'selector': 'app-contacts-view'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'FooterBarComponent', 'selector': 'app-footer-bar'},{'name': 'HeaderBarMobileComponent', 'selector': 'app-header-bar-mobile'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'SummaryComponent', 'selector': 'app-summary'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoginService.html":{"url":"injectables/LoginService.html","title":"injectable - LoginService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/login.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service responsible for handling user login, logout, and access to protected data.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loginUrl\n                            \n                            \n                                    Private\n                                protectedUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getProtectedData\n                            \n                            \n                                isLoggedIn\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/login.service.ts:18\n                            \n                        \n\n                \n                    \n                            Constructor that injects HttpClient for making HTTP requests.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAngular's HttpClient for HTTP communication.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getProtectedData\n                        \n                    \n                \n            \n            \n                \ngetProtectedData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/login.service.ts:62\n                        \n                    \n\n\n            \n                \n                        Retrieves protected data from the server, including an authorization token in the request headers.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable - Observable with the server's protected data or null in case of error.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedIn\n                        \n                    \n                \n            \n            \n                \nisLoggedIn()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/login.service.ts:79\n                        \n                    \n\n\n            \n                \n                        Checks if the user is currently logged in by verifying the presence of an auth token.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                boolean - True if the user is logged in, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/login.service.ts:35\n                        \n                    \n\n\n            \n                \n                        Logs in a user with the provided email and password.\nStores the authentication token in local storage upon successful login.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nUser's email address.\n\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nUser's password.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable - Observable with the server response or null in case of error.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/login.service.ts:52\n                        \n                    \n\n\n            \n                \n                        Logs out the user by removing the authentication token from local storage.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loginUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://join.server.fabianduerr.com/login/'\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/login.service.ts:15\n                        \n                    \n\n            \n                \n                    URL for the login endpoint\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        protectedUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://join.server.fabianduerr.com/protected/'\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/login.service.ts:18\n                        \n                    \n\n            \n                \n                    URL for accessing protected resources\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\n\n/**\n * Service responsible for handling user login, logout, and access to protected data.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoginService {\n\n    /** URL for the login endpoint */\n  private loginUrl = 'https://join.server.fabianduerr.com/login/';\n\n  /** URL for accessing protected resources */\n  private protectedUrl = 'https://join.server.fabianduerr.com/protected/';\n\n\n    /**\n   * Constructor that injects HttpClient for making HTTP requests.\n   * @param http - Angular's HttpClient for HTTP communication.\n   */\n  constructor(private http: HttpClient) {}\n\n\n    /**\n   * Logs in a user with the provided email and password.\n   * Stores the authentication token in local storage upon successful login.\n   * @param email - User's email address.\n   * @param password - User's password.\n   * @returns Observable - Observable with the server response or null in case of error.\n   */\n  login(email: string, password: string): Observable {\n    return this.http.post(this.loginUrl, { email, password }).pipe(\n      tap(response => {\n        localStorage.setItem('auth_token', response.token);\n        sessionStorage.setItem('showOverlaySummary', 'true');\n      }),\n      catchError(error => {\n        console.error('Login error:', error);\n        return of(null); \n      }),\n    );\n  }\n\n\n    /**\n   * Logs out the user by removing the authentication token from local storage.\n   */\n  logout(): void {\n    localStorage.removeItem('auth_token');\n    sessionStorage.removeItem('showOverlay');\n  }\n\n\n    /**\n   * Retrieves protected data from the server, including an authorization token in the request headers.\n   * @returns Observable - Observable with the server's protected data or null in case of error.\n   */\n  getProtectedData(): Observable {\n    const headers = new HttpHeaders({\n      Authorization: `Token ${localStorage.getItem('auth_token')}`,\n    });\n    return this.http.get(this.protectedUrl, { headers }).pipe(\n      catchError(error => {\n        console.error('Error fetching protected data:', error);\n        return of(null); \n      }),\n    );\n  }\n\n\n    /**\n   * Checks if the user is currently logged in by verifying the presence of an auth token.\n   * @returns boolean - True if the user is logged in, false otherwise.\n   */\n  isLoggedIn(): boolean {\n    return !!localStorage.getItem('auth_token');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PrivacyPolicyComponent.html":{"url":"components/PrivacyPolicyComponent.html","title":"component - PrivacyPolicyComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PrivacyPolicyComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/imprint/privacy-policy/privacy-policy.component.ts\n\n\n\n    \n        Description\n    \n    \n        PrivacyPolicyComponent displays the privacy policy of the application.\nThis component provides information regarding data handling, user privacy,\nand related policies.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-privacy-policy\n            \n\n\n\n            \n                styleUrls\n                ./privacy-policy.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./privacy-policy.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n\n/**\n * PrivacyPolicyComponent displays the privacy policy of the application.\n * This component provides information regarding data handling, user privacy,\n * and related policies.\n */\n@Component({\n  selector: 'app-privacy-policy',\n  templateUrl: './privacy-policy.component.html',\n  styleUrls: ['./privacy-policy.component.scss'],\n})\nexport class PrivacyPolicyComponent {}\n\n    \n\n    \n        \n  \n    \n      \n        \n        \n        \n        \n        \n        \n      \n    \n    Kanban Project Management Tool\n  \n  \n    \n      \n        \n          \n          \n          \n          \n          \n          \n        \n        \n          \n            \n          \n        \n      \n    \n  \n  \n    Datenschutz&shy;erkl&auml;rung\n    1. Datenschutz auf einen Blick\n    Allgemeine Hinweise\n    \n      Die folgenden Hinweise geben einen einfachen &Uuml;berblick dar&uuml;ber, was mit Ihren\n      personenbezogenen Daten passiert, wenn Sie diese Website besuchen. Personenbezogene Daten sind\n      alle Daten, mit denen Sie pers&ouml;nlich identifiziert werden k&ouml;nnen. Ausf&uuml;hrliche\n      Informationen zum Thema Datenschutz entnehmen Sie unserer unter diesem Text aufgef&uuml;hrten\n      Datenschutzerkl&auml;rung.\n    \n    Datenerfassung auf dieser Website\n    Wer ist verantwortlich f&uuml;r die Datenerfassung auf dieser Website?\n    \n      Die Datenverarbeitung auf dieser Website erfolgt durch den Websitebetreiber. Dessen\n      Kontaktdaten k&ouml;nnen Sie dem Abschnitt &bdquo;Hinweis zur Verantwortlichen Stelle&ldquo;\n      in dieser Datenschutzerkl&auml;rung entnehmen.\n    \n    Wie erfassen wir Ihre Daten?\n    \n      Ihre Daten werden zum einen dadurch erhoben, dass Sie uns diese mitteilen. Hierbei kann es\n      sich z.&nbsp;B. um Daten handeln, die Sie in ein Kontaktformular eingeben.\n    \n    \n      Andere Daten werden automatisch oder nach Ihrer Einwilligung beim Besuch der Website durch\n      unsere IT-Systeme erfasst. Das sind vor allem technische Daten (z.&nbsp;B. Internetbrowser,\n      Betriebssystem oder Uhrzeit des Seitenaufrufs). Die Erfassung dieser Daten erfolgt\n      automatisch, sobald Sie diese Website betreten.\n    \n    Wof&uuml;r nutzen wir Ihre Daten?\n    \n      Ein Teil der Daten wird erhoben, um eine fehlerfreie Bereitstellung der Website zu\n      gew&auml;hrleisten. Andere Daten k&ouml;nnen zur Analyse Ihres Nutzerverhaltens verwendet\n      werden.\n    \n    Welche Rechte haben Sie bez&uuml;glich Ihrer Daten?\n    \n      Sie haben jederzeit das Recht, unentgeltlich Auskunft &uuml;ber Herkunft, Empf&auml;nger und\n      Zweck Ihrer gespeicherten personenbezogenen Daten zu erhalten. Sie haben au&szlig;erdem ein\n      Recht, die Berichtigung oder L&ouml;schung dieser Daten zu verlangen. Wenn Sie eine\n      Einwilligung zur Datenverarbeitung erteilt haben, k&ouml;nnen Sie diese Einwilligung jederzeit\n      f&uuml;r die Zukunft widerrufen. Au&szlig;erdem haben Sie das Recht, unter bestimmten\n      Umst&auml;nden die Einschr&auml;nkung der Verarbeitung Ihrer personenbezogenen Daten zu\n      verlangen. Des Weiteren steht Ihnen ein Beschwerderecht bei der zust&auml;ndigen\n      Aufsichtsbeh&ouml;rde zu.\n    \n    \n      Hierzu sowie zu weiteren Fragen zum Thema Datenschutz k&ouml;nnen Sie sich jederzeit an uns\n      wenden.\n    \n    2. Hosting\n    Wir hosten die Inhalte unserer Website bei folgendem Anbieter:\n    All-Inkl\n    \n      Anbieter ist die ALL-INKL.COM - Neue Medien M&uuml;nnich, Inh. Ren&eacute; M&uuml;nnich,\n      Hauptstra&szlig;e 68, 02742 Friedersdorf (nachfolgend All-Inkl). Details entnehmen Sie der\n      Datenschutzerkl&auml;rung von All-Inkl:\n      https://all-inkl.com/datenschutzinformationen/.\n    \n    \n      Die Verwendung von All-Inkl erfolgt auf Grundlage von Art. 6 Abs. 1 lit. f DSGVO. Wir haben\n      ein berechtigtes Interesse an einer m&ouml;glichst zuverl&auml;ssigen Darstellung unserer\n      Website. Sofern eine entsprechende Einwilligung abgefragt wurde, erfolgt die Verarbeitung\n      ausschlie&szlig;lich auf Grundlage von Art. 6 Abs. 1 lit. a DSGVO und &sect; 25 Abs. 1 TTDSG,\n      soweit die Einwilligung die Speicherung von Cookies oder den Zugriff auf Informationen im\n      Endger&auml;t des Nutzers (z.&nbsp;B. Device-Fingerprinting) im Sinne des TTDSG umfasst. Die\n      Einwilligung ist jederzeit widerrufbar.\n    \n\n    3. Allgemeine Hinweise und Pflicht&shy;informationen\n    Datenschutz\n    \n      Die Betreiber dieser Seiten nehmen den Schutz Ihrer pers&ouml;nlichen Daten sehr ernst. Wir\n      behandeln Ihre personenbezogenen Daten vertraulich und entsprechend den gesetzlichen\n      Datenschutzvorschriften sowie dieser Datenschutzerkl&auml;rung.\n    \n    \n      Wenn Sie diese Website benutzen, werden verschiedene personenbezogene Daten erhoben.\n      Personenbezogene Daten sind Daten, mit denen Sie pers&ouml;nlich identifiziert werden\n      k&ouml;nnen. Die vorliegende Datenschutzerkl&auml;rung erl&auml;utert, welche Daten wir\n      erheben und wof&uuml;r wir sie nutzen. Sie erl&auml;utert auch, wie und zu welchem Zweck das\n      geschieht.\n    \n    \n      Wir weisen darauf hin, dass die Daten&uuml;bertragung im Internet (z.&nbsp;B. bei der\n      Kommunikation per E-Mail) Sicherheitsl&uuml;cken aufweisen kann. Ein l&uuml;ckenloser Schutz\n      der Daten vor dem Zugriff durch Dritte ist nicht m&ouml;glich.\n    \n    Hinweis zur verantwortlichen Stelle\n    Die verantwortliche Stelle f&uuml;r die Datenverarbeitung auf dieser Website ist:\n    \n      Fabian Dürr\n      Haubenschloßstr. 13\n      87435 Kempten\n    \n\n    \n      Telefon: +49 (0) 15172536808\n      E-Mail: fabianduerr&#64;web.de\n    \n    \n      Verantwortliche Stelle ist die nat&uuml;rliche oder juristische Person, die allein oder\n      gemeinsam mit anderen &uuml;ber die Zwecke und Mittel der Verarbeitung von personenbezogenen\n      Daten (z.&nbsp;B. Namen, E-Mail-Adressen o. &Auml;.) entscheidet.\n    \n\n    Speicherdauer\n    \n      Soweit innerhalb dieser Datenschutzerkl&auml;rung keine speziellere Speicherdauer genannt\n      wurde, verbleiben Ihre personenbezogenen Daten bei uns, bis der Zweck f&uuml;r die\n      Datenverarbeitung entf&auml;llt. Wenn Sie ein berechtigtes L&ouml;schersuchen geltend machen\n      oder eine Einwilligung zur Datenverarbeitung widerrufen, werden Ihre Daten gel&ouml;scht,\n      sofern wir keine anderen rechtlich zul&auml;ssigen Gr&uuml;nde f&uuml;r die Speicherung Ihrer\n      personenbezogenen Daten haben (z.&nbsp;B. steuer- oder handelsrechtliche\n      Aufbewahrungsfristen); im letztgenannten Fall erfolgt die L&ouml;schung nach Fortfall dieser\n      Gr&uuml;nde.\n    \n    Allgemeine Hinweise zu den Rechtsgrundlagen der Datenverarbeitung auf dieser Website\n    \n      Sofern Sie in die Datenverarbeitung eingewilligt haben, verarbeiten wir Ihre personenbezogenen\n      Daten auf Grundlage von Art. 6 Abs. 1 lit. a DSGVO bzw. Art. 9 Abs. 2 lit. a DSGVO, sofern\n      besondere Datenkategorien nach Art. 9 Abs. 1 DSGVO verarbeitet werden. Im Falle einer\n      ausdr&uuml;cklichen Einwilligung in die &Uuml;bertragung personenbezogener Daten in\n      Drittstaaten erfolgt die Datenverarbeitung au&szlig;erdem auf Grundlage von Art. 49 Abs. 1\n      lit. a DSGVO. Sofern Sie in die Speicherung von Cookies oder in den Zugriff auf Informationen\n      in Ihr Endger&auml;t (z.&nbsp;B. via Device-Fingerprinting) eingewilligt haben, erfolgt die\n      Datenverarbeitung zus&auml;tzlich auf Grundlage von &sect; 25 Abs. 1 TTDSG. Die Einwilligung\n      ist jederzeit widerrufbar. Sind Ihre Daten zur Vertragserf&uuml;llung oder zur\n      Durchf&uuml;hrung vorvertraglicher Ma&szlig;nahmen erforderlich, verarbeiten wir Ihre Daten\n      auf Grundlage des Art. 6 Abs. 1 lit. b DSGVO. Des Weiteren verarbeiten wir Ihre Daten, sofern\n      diese zur Erf&uuml;llung einer rechtlichen Verpflichtung erforderlich sind auf Grundlage von\n      Art. 6 Abs. 1 lit. c DSGVO. Die Datenverarbeitung kann ferner auf Grundlage unseres\n      berechtigten Interesses nach Art. 6 Abs. 1 lit. f DSGVO erfolgen. &Uuml;ber die jeweils im\n      Einzelfall einschl&auml;gigen Rechtsgrundlagen wird in den folgenden Abs&auml;tzen dieser\n      Datenschutzerkl&auml;rung informiert.\n    \n    Empfänger von personenbezogenen Daten\n    \n      Im Rahmen unserer Gesch&auml;ftst&auml;tigkeit arbeiten wir mit verschiedenen externen Stellen\n      zusammen. Dabei ist teilweise auch eine &Uuml;bermittlung von personenbezogenen Daten an diese\n      externen Stellen erforderlich. Wir geben personenbezogene Daten nur dann an externe Stellen\n      weiter, wenn dies im Rahmen einer Vertragserf&uuml;llung erforderlich ist, wenn wir gesetzlich\n      hierzu verpflichtet sind (z.&nbsp;B. Weitergabe von Daten an Steuerbeh&ouml;rden), wenn wir\n      ein berechtigtes Interesse nach Art. 6 Abs. 1 lit. f DSGVO an der Weitergabe haben oder wenn\n      eine sonstige Rechtsgrundlage die Datenweitergabe erlaubt. Beim Einsatz von\n      Auftragsverarbeitern geben wir personenbezogene Daten unserer Kunden nur auf Grundlage eines\n      g&uuml;ltigen Vertrags &uuml;ber Auftragsverarbeitung weiter. Im Falle einer gemeinsamen\n      Verarbeitung wird ein Vertrag &uuml;ber gemeinsame Verarbeitung geschlossen.\n    \n\n    Widerruf Ihrer Einwilligung zur Datenverarbeitung\n    \n      Viele Datenverarbeitungsvorg&auml;nge sind nur mit Ihrer ausdr&uuml;cklichen Einwilligung\n      m&ouml;glich. Sie k&ouml;nnen eine bereits erteilte Einwilligung jederzeit widerrufen. Die\n      Rechtm&auml;&szlig;igkeit der bis zum Widerruf erfolgten Datenverarbeitung bleibt vom Widerruf\n      unber&uuml;hrt.\n    \n    \n      Widerspruchsrecht gegen die Datenerhebung in besonderen F&auml;llen sowie gegen Direktwerbung\n      (Art. 21 DSGVO)\n    \n    \n      WENN DIE DATENVERARBEITUNG AUF GRUNDLAGE VON ART. 6 ABS. 1 LIT. E ODER F DSGVO ERFOLGT, HABEN\n      SIE JEDERZEIT DAS RECHT, AUS GR&Uuml;NDEN, DIE SICH AUS IHRER BESONDEREN SITUATION ERGEBEN,\n      GEGEN DIE VERARBEITUNG IHRER PERSONENBEZOGENEN DATEN WIDERSPRUCH EINZULEGEN; DIES GILT AUCH\n      F&Uuml;R EIN AUF DIESE BESTIMMUNGEN GEST&Uuml;TZTES PROFILING. DIE JEWEILIGE RECHTSGRUNDLAGE,\n      AUF DENEN EINE VERARBEITUNG BERUHT, ENTNEHMEN SIE DIESER DATENSCHUTZERKL&Auml;RUNG. WENN SIE\n      WIDERSPRUCH EINLEGEN, WERDEN WIR IHRE BETROFFENEN PERSONENBEZOGENEN DATEN NICHT MEHR\n      VERARBEITEN, ES SEI DENN, WIR K&Ouml;NNEN ZWINGENDE SCHUTZW&Uuml;RDIGE GR&Uuml;NDE F&Uuml;R\n      DIE VERARBEITUNG NACHWEISEN, DIE IHRE INTERESSEN, RECHTE UND FREIHEITEN &Uuml;BERWIEGEN ODER\n      DIE VERARBEITUNG DIENT DER GELTENDMACHUNG, AUS&Uuml;BUNG ODER VERTEIDIGUNG VON\n      RECHTSANSPR&Uuml;CHEN (WIDERSPRUCH NACH ART. 21 ABS. 1 DSGVO).\n    \n    \n      WERDEN IHRE PERSONENBEZOGENEN DATEN VERARBEITET, UM DIREKTWERBUNG ZU BETREIBEN, SO HABEN SIE\n      DAS RECHT, JEDERZEIT WIDERSPRUCH GEGEN DIE VERARBEITUNG SIE BETREFFENDER PERSONENBEZOGENER\n      DATEN ZUM ZWECKE DERARTIGER WERBUNG EINZULEGEN; DIES GILT AUCH F&Uuml;R DAS PROFILING, SOWEIT\n      ES MIT SOLCHER DIREKTWERBUNG IN VERBINDUNG STEHT. WENN SIE WIDERSPRECHEN, WERDEN IHRE\n      PERSONENBEZOGENEN DATEN ANSCHLIESSEND NICHT MEHR ZUM ZWECKE DER DIREKTWERBUNG VERWENDET\n      (WIDERSPRUCH NACH ART. 21 ABS. 2 DSGVO).\n    \n    Beschwerde&shy;recht bei der zust&auml;ndigen Aufsichts&shy;beh&ouml;rde\n    \n      Im Falle von Verst&ouml;&szlig;en gegen die DSGVO steht den Betroffenen ein Beschwerderecht\n      bei einer Aufsichtsbeh&ouml;rde, insbesondere in dem Mitgliedstaat ihres gew&ouml;hnlichen\n      Aufenthalts, ihres Arbeitsplatzes oder des Orts des mutma&szlig;lichen Versto&szlig;es zu. Das\n      Beschwerderecht besteht unbeschadet anderweitiger verwaltungsrechtlicher oder gerichtlicher\n      Rechtsbehelfe.\n    \n    Recht auf Daten&shy;&uuml;bertrag&shy;barkeit\n    \n      Sie haben das Recht, Daten, die wir auf Grundlage Ihrer Einwilligung oder in Erf&uuml;llung\n      eines Vertrags automatisiert verarbeiten, an sich oder an einen Dritten in einem\n      g&auml;ngigen, maschinenlesbaren Format aush&auml;ndigen zu lassen. Sofern Sie die direkte\n      &Uuml;bertragung der Daten an einen anderen Verantwortlichen verlangen, erfolgt dies nur,\n      soweit es technisch machbar ist.\n    \n    Auskunft, Berichtigung und L&ouml;schung\n    \n      Sie haben im Rahmen der geltenden gesetzlichen Bestimmungen jederzeit das Recht auf\n      unentgeltliche Auskunft &uuml;ber Ihre gespeicherten personenbezogenen Daten, deren Herkunft\n      und Empf&auml;nger und den Zweck der Datenverarbeitung und ggf. ein Recht auf Berichtigung\n      oder L&ouml;schung dieser Daten. Hierzu sowie zu weiteren Fragen zum Thema personenbezogene\n      Daten k&ouml;nnen Sie sich jederzeit an uns wenden.\n    \n    Recht auf Einschr&auml;nkung der Verarbeitung\n    \n      Sie haben das Recht, die Einschr&auml;nkung der Verarbeitung Ihrer personenbezogenen Daten zu\n      verlangen. Hierzu k&ouml;nnen Sie sich jederzeit an uns wenden. Das Recht auf\n      Einschr&auml;nkung der Verarbeitung besteht in folgenden F&auml;llen:\n    \n    \n      \n        Wenn Sie die Richtigkeit Ihrer bei uns gespeicherten personenbezogenen Daten bestreiten,\n        ben&ouml;tigen wir in der Regel Zeit, um dies zu &uuml;berpr&uuml;fen. F&uuml;r die Dauer\n        der Pr&uuml;fung haben Sie das Recht, die Einschr&auml;nkung der Verarbeitung Ihrer\n        personenbezogenen Daten zu verlangen.\n      \n      \n        Wenn die Verarbeitung Ihrer personenbezogenen Daten unrechtm&auml;&szlig;ig\n        geschah/geschieht, k&ouml;nnen Sie statt der L&ouml;schung die Einschr&auml;nkung der\n        Datenverarbeitung verlangen.\n      \n      \n        Wenn wir Ihre personenbezogenen Daten nicht mehr ben&ouml;tigen, Sie sie jedoch zur\n        Aus&uuml;bung, Verteidigung oder Geltendmachung von Rechtsanspr&uuml;chen ben&ouml;tigen,\n        haben Sie das Recht, statt der L&ouml;schung die Einschr&auml;nkung der Verarbeitung Ihrer\n        personenbezogenen Daten zu verlangen.\n      \n      \n        Wenn Sie einen Widerspruch nach Art. 21 Abs. 1 DSGVO eingelegt haben, muss eine\n        Abw&auml;gung zwischen Ihren und unseren Interessen vorgenommen werden. Solange noch nicht\n        feststeht, wessen Interessen &uuml;berwiegen, haben Sie das Recht, die Einschr&auml;nkung\n        der Verarbeitung Ihrer personenbezogenen Daten zu verlangen.\n      \n    \n    \n      Wenn Sie die Verarbeitung Ihrer personenbezogenen Daten eingeschr&auml;nkt haben, d&uuml;rfen\n      diese Daten &ndash; von ihrer Speicherung abgesehen &ndash; nur mit Ihrer Einwilligung oder\n      zur Geltendmachung, Aus&uuml;bung oder Verteidigung von Rechtsanspr&uuml;chen oder zum Schutz\n      der Rechte einer anderen nat&uuml;rlichen oder juristischen Person oder aus Gr&uuml;nden eines\n      wichtigen &ouml;ffentlichen Interesses der Europ&auml;ischen Union oder eines Mitgliedstaats\n      verarbeitet werden.\n    \n    SSL- bzw. TLS-Verschl&uuml;sselung\n    \n      Diese Seite nutzt aus Sicherheitsgr&uuml;nden und zum Schutz der &Uuml;bertragung\n      vertraulicher Inhalte, wie zum Beispiel Bestellungen oder Anfragen, die Sie an uns als\n      Seitenbetreiber senden, eine SSL- bzw. TLS-Verschl&uuml;sselung. Eine verschl&uuml;sselte\n      Verbindung erkennen Sie daran, dass die Adresszeile des Browsers von &bdquo;http://&ldquo; auf\n      &bdquo;https://&ldquo; wechselt und an dem Schloss-Symbol in Ihrer Browserzeile.\n    \n    \n      Wenn die SSL- bzw. TLS-Verschl&uuml;sselung aktiviert ist, k&ouml;nnen die Daten, die Sie an\n      uns &uuml;bermitteln, nicht von Dritten mitgelesen werden.\n    \n    4. Datenerfassung auf dieser Website\n    Kontaktformular\n    \n      Wenn Sie uns per Kontaktformular Anfragen zukommen lassen, werden Ihre Angaben aus dem\n      Anfrageformular inklusive der von Ihnen dort angegebenen Kontaktdaten zwecks Bearbeitung der\n      Anfrage und f&uuml;r den Fall von Anschlussfragen bei uns gespeichert. Diese Daten geben wir\n      nicht ohne Ihre Einwilligung weiter.\n    \n    \n      Die Verarbeitung dieser Daten erfolgt auf Grundlage von Art. 6 Abs. 1 lit. b DSGVO, sofern\n      Ihre Anfrage mit der Erf&uuml;llung eines Vertrags zusammenh&auml;ngt oder zur\n      Durchf&uuml;hrung vorvertraglicher Ma&szlig;nahmen erforderlich ist. In allen &uuml;brigen\n      F&auml;llen beruht die Verarbeitung auf unserem berechtigten Interesse an der effektiven\n      Bearbeitung der an uns gerichteten Anfragen (Art. 6 Abs. 1 lit. f DSGVO) oder auf Ihrer\n      Einwilligung (Art. 6 Abs. 1 lit. a DSGVO) sofern diese abgefragt wurde; die Einwilligung ist\n      jederzeit widerrufbar.\n    \n    \n      Die von Ihnen im Kontaktformular eingegebenen Daten verbleiben bei uns, bis Sie uns zur\n      L&ouml;schung auffordern, Ihre Einwilligung zur Speicherung widerrufen oder der Zweck f&uuml;r\n      die Datenspeicherung entf&auml;llt (z.&nbsp;B. nach abgeschlossener Bearbeitung Ihrer\n      Anfrage). Zwingende gesetzliche Bestimmungen &ndash; insbesondere Aufbewahrungsfristen &ndash;\n      bleiben unber&uuml;hrt.\n    \n    Quelle: https://www.e-recht24.de\n  \n\n\n    \n\n    \n                \n                    ./privacy-policy.component.scss\n                \n                .privacyPolicyContainer {\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n}\n\n.sidebarContnentContainer {\n  display: none;\n}\n\n.privacyPolicyContent {\n  background-color: #f6f7f8;\n  width: 100vw;\n  font-weight: bold;\n  padding: 32px;\n  overflow-y: auto;\n  margin-top: 10vh;\n}\n\n.headerContainer {\n  box-shadow: 0px 5px 5px rgba(0, 0, 0, 0.1);\n  height: 10vh;\n  width: 100%;\n  position: absolute;\n  top: 0;\n  background-color: #ffffff;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  z-index: 3;\n}\n\n.iconContainerHeader {\n  margin-left: 16px;\n  display: block;\n}\n\n.initialsContainer {\n  width: 40px;\n  height: 40px;\n  border: 2px solid #2a3647;\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-right: 16px;\n}\n\n.initials {\n  font-weight: bold;\n  color: #29abe2;\n  text-decoration: none;\n}\n\n.linkContainer {\n  background-color: #2a3647;\n  inset: 56px 4px auto auto !important;\n  border-top-left-radius: 20px;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  transform: none !important;\n}\n\n.link {\n  color: #ffffff;\n}\n\n.link:hover {\n  background-color: #091931;\n  border-radius: 10px;\n}\n\n.headerText {\n  display: none;\n}\n\n@media (min-width: 1025px) {\n  .sidebarContnentContainer {\n    background-color: #2a3647;\n    height: 100%;\n    width: 15vw;\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n  }\n\n  .iconContainerSidebar {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding-top: 8px;\n    padding-bottom: 8px;\n    margin-top: 40px;\n    width: 15vw;\n  }\n\n  .privacyPolicyContent {\n    width: 85vw;\n  }\n\n  .boardIcon {\n    padding-right: 16px;\n  }\n\n  .iconText {\n    color: white;\n    font-weight: 500;\n    margin-left: 10px;\n  }\n\n  .hoverSidebarIcons:hover {\n    background-color: #091931;\n    cursor: pointer;\n  }\n\n  .activeRouteIconSidebar {\n    background-color: #091931 !important;\n  }\n\n  .logoContainer {\n    height: 30vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .allIconsContainer {\n    height: 55vh;\n    display: flex;\n    flex-direction: column;\n    width: 15vw;\n  }\n\n  .imprintContainer {\n    height: 10vh;\n    color: #ffffff;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-evenly;\n  }\n\n  .imprintLink {\n    cursor: pointer;\n  }\n\n  .imprintLink:hover {\n    color: #29abe2;\n  }\n\n  .headerContainer {\n    width: 85vw;\n    right: 0;\n  }\n\n  .iconContainerHeader {\n    display: none;\n  }\n\n  .headerText {\n    display: block;\n    font-weight: 500;\n    margin-left: 48px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                          Kanban Project Management Tool                                                                                                                                                            Datenschutz­erklärung    1. Datenschutz auf einen Blick    Allgemeine Hinweise          Die folgenden Hinweise geben einen einfachen Überblick darüber, was mit Ihren      personenbezogenen Daten passiert, wenn Sie diese Website besuchen. Personenbezogene Daten sind      alle Daten, mit denen Sie persönlich identifiziert werden können. Ausführliche      Informationen zum Thema Datenschutz entnehmen Sie unserer unter diesem Text aufgeführten      Datenschutzerklärung.        Datenerfassung auf dieser Website    Wer ist verantwortlich für die Datenerfassung auf dieser Website?          Die Datenverarbeitung auf dieser Website erfolgt durch den Websitebetreiber. Dessen      Kontaktdaten können Sie dem Abschnitt „Hinweis zur Verantwortlichen Stelle“      in dieser Datenschutzerklärung entnehmen.        Wie erfassen wir Ihre Daten?          Ihre Daten werden zum einen dadurch erhoben, dass Sie uns diese mitteilen. Hierbei kann es      sich z. B. um Daten handeln, die Sie in ein Kontaktformular eingeben.              Andere Daten werden automatisch oder nach Ihrer Einwilligung beim Besuch der Website durch      unsere IT-Systeme erfasst. Das sind vor allem technische Daten (z. B. Internetbrowser,      Betriebssystem oder Uhrzeit des Seitenaufrufs). Die Erfassung dieser Daten erfolgt      automatisch, sobald Sie diese Website betreten.        Wofür nutzen wir Ihre Daten?          Ein Teil der Daten wird erhoben, um eine fehlerfreie Bereitstellung der Website zu      gewährleisten. Andere Daten können zur Analyse Ihres Nutzerverhaltens verwendet      werden.        Welche Rechte haben Sie bezüglich Ihrer Daten?          Sie haben jederzeit das Recht, unentgeltlich Auskunft über Herkunft, Empfänger und      Zweck Ihrer gespeicherten personenbezogenen Daten zu erhalten. Sie haben außerdem ein      Recht, die Berichtigung oder Löschung dieser Daten zu verlangen. Wenn Sie eine      Einwilligung zur Datenverarbeitung erteilt haben, können Sie diese Einwilligung jederzeit      für die Zukunft widerrufen. Außerdem haben Sie das Recht, unter bestimmten      Umständen die Einschränkung der Verarbeitung Ihrer personenbezogenen Daten zu      verlangen. Des Weiteren steht Ihnen ein Beschwerderecht bei der zuständigen      Aufsichtsbehörde zu.              Hierzu sowie zu weiteren Fragen zum Thema Datenschutz können Sie sich jederzeit an uns      wenden.        2. Hosting    Wir hosten die Inhalte unserer Website bei folgendem Anbieter:    All-Inkl          Anbieter ist die ALL-INKL.COM - Neue Medien Münnich, Inh. René Münnich,      Hauptstraße 68, 02742 Friedersdorf (nachfolgend All-Inkl). Details entnehmen Sie der      Datenschutzerklärung von All-Inkl:      https://all-inkl.com/datenschutzinformationen/.              Die Verwendung von All-Inkl erfolgt auf Grundlage von Art. 6 Abs. 1 lit. f DSGVO. Wir haben      ein berechtigtes Interesse an einer möglichst zuverlässigen Darstellung unserer      Website. Sofern eine entsprechende Einwilligung abgefragt wurde, erfolgt die Verarbeitung      ausschließlich auf Grundlage von Art. 6 Abs. 1 lit. a DSGVO und § 25 Abs. 1 TTDSG,      soweit die Einwilligung die Speicherung von Cookies oder den Zugriff auf Informationen im      Endgerät des Nutzers (z. B. Device-Fingerprinting) im Sinne des TTDSG umfasst. Die      Einwilligung ist jederzeit widerrufbar.        3. Allgemeine Hinweise und Pflicht­informationen    Datenschutz          Die Betreiber dieser Seiten nehmen den Schutz Ihrer persönlichen Daten sehr ernst. Wir      behandeln Ihre personenbezogenen Daten vertraulich und entsprechend den gesetzlichen      Datenschutzvorschriften sowie dieser Datenschutzerklärung.              Wenn Sie diese Website benutzen, werden verschiedene personenbezogene Daten erhoben.      Personenbezogene Daten sind Daten, mit denen Sie persönlich identifiziert werden      können. Die vorliegende Datenschutzerklärung erläutert, welche Daten wir      erheben und wofür wir sie nutzen. Sie erläutert auch, wie und zu welchem Zweck das      geschieht.              Wir weisen darauf hin, dass die Datenübertragung im Internet (z. B. bei der      Kommunikation per E-Mail) Sicherheitslücken aufweisen kann. Ein lückenloser Schutz      der Daten vor dem Zugriff durch Dritte ist nicht möglich.        Hinweis zur verantwortlichen Stelle    Die verantwortliche Stelle für die Datenverarbeitung auf dieser Website ist:          Fabian Dürr      Haubenschloßstr. 13      87435 Kempten              Telefon: +49 (0) 15172536808      E-Mail: fabianduerr@web.de              Verantwortliche Stelle ist die natürliche oder juristische Person, die allein oder      gemeinsam mit anderen über die Zwecke und Mittel der Verarbeitung von personenbezogenen      Daten (z. B. Namen, E-Mail-Adressen o. Ä.) entscheidet.        Speicherdauer          Soweit innerhalb dieser Datenschutzerklärung keine speziellere Speicherdauer genannt      wurde, verbleiben Ihre personenbezogenen Daten bei uns, bis der Zweck für die      Datenverarbeitung entfällt. Wenn Sie ein berechtigtes Löschersuchen geltend machen      oder eine Einwilligung zur Datenverarbeitung widerrufen, werden Ihre Daten gelöscht,      sofern wir keine anderen rechtlich zulässigen Gründe für die Speicherung Ihrer      personenbezogenen Daten haben (z. B. steuer- oder handelsrechtliche      Aufbewahrungsfristen); im letztgenannten Fall erfolgt die Löschung nach Fortfall dieser      Gründe.        Allgemeine Hinweise zu den Rechtsgrundlagen der Datenverarbeitung auf dieser Website          Sofern Sie in die Datenverarbeitung eingewilligt haben, verarbeiten wir Ihre personenbezogenen      Daten auf Grundlage von Art. 6 Abs. 1 lit. a DSGVO bzw. Art. 9 Abs. 2 lit. a DSGVO, sofern      besondere Datenkategorien nach Art. 9 Abs. 1 DSGVO verarbeitet werden. Im Falle einer      ausdrücklichen Einwilligung in die Übertragung personenbezogener Daten in      Drittstaaten erfolgt die Datenverarbeitung außerdem auf Grundlage von Art. 49 Abs. 1      lit. a DSGVO. Sofern Sie in die Speicherung von Cookies oder in den Zugriff auf Informationen      in Ihr Endgerät (z. B. via Device-Fingerprinting) eingewilligt haben, erfolgt die      Datenverarbeitung zusätzlich auf Grundlage von § 25 Abs. 1 TTDSG. Die Einwilligung      ist jederzeit widerrufbar. Sind Ihre Daten zur Vertragserfüllung oder zur      Durchführung vorvertraglicher Maßnahmen erforderlich, verarbeiten wir Ihre Daten      auf Grundlage des Art. 6 Abs. 1 lit. b DSGVO. Des Weiteren verarbeiten wir Ihre Daten, sofern      diese zur Erfüllung einer rechtlichen Verpflichtung erforderlich sind auf Grundlage von      Art. 6 Abs. 1 lit. c DSGVO. Die Datenverarbeitung kann ferner auf Grundlage unseres      berechtigten Interesses nach Art. 6 Abs. 1 lit. f DSGVO erfolgen. Über die jeweils im      Einzelfall einschlägigen Rechtsgrundlagen wird in den folgenden Absätzen dieser      Datenschutzerklärung informiert.        Empfänger von personenbezogenen Daten          Im Rahmen unserer Geschäftstätigkeit arbeiten wir mit verschiedenen externen Stellen      zusammen. Dabei ist teilweise auch eine Übermittlung von personenbezogenen Daten an diese      externen Stellen erforderlich. Wir geben personenbezogene Daten nur dann an externe Stellen      weiter, wenn dies im Rahmen einer Vertragserfüllung erforderlich ist, wenn wir gesetzlich      hierzu verpflichtet sind (z. B. Weitergabe von Daten an Steuerbehörden), wenn wir      ein berechtigtes Interesse nach Art. 6 Abs. 1 lit. f DSGVO an der Weitergabe haben oder wenn      eine sonstige Rechtsgrundlage die Datenweitergabe erlaubt. Beim Einsatz von      Auftragsverarbeitern geben wir personenbezogene Daten unserer Kunden nur auf Grundlage eines      gültigen Vertrags über Auftragsverarbeitung weiter. Im Falle einer gemeinsamen      Verarbeitung wird ein Vertrag über gemeinsame Verarbeitung geschlossen.        Widerruf Ihrer Einwilligung zur Datenverarbeitung          Viele Datenverarbeitungsvorgänge sind nur mit Ihrer ausdrücklichen Einwilligung      möglich. Sie können eine bereits erteilte Einwilligung jederzeit widerrufen. Die      Rechtmäßigkeit der bis zum Widerruf erfolgten Datenverarbeitung bleibt vom Widerruf      unberührt.              Widerspruchsrecht gegen die Datenerhebung in besonderen Fällen sowie gegen Direktwerbung      (Art. 21 DSGVO)              WENN DIE DATENVERARBEITUNG AUF GRUNDLAGE VON ART. 6 ABS. 1 LIT. E ODER F DSGVO ERFOLGT, HABEN      SIE JEDERZEIT DAS RECHT, AUS GRÜNDEN, DIE SICH AUS IHRER BESONDEREN SITUATION ERGEBEN,      GEGEN DIE VERARBEITUNG IHRER PERSONENBEZOGENEN DATEN WIDERSPRUCH EINZULEGEN; DIES GILT AUCH      FÜR EIN AUF DIESE BESTIMMUNGEN GESTÜTZTES PROFILING. DIE JEWEILIGE RECHTSGRUNDLAGE,      AUF DENEN EINE VERARBEITUNG BERUHT, ENTNEHMEN SIE DIESER DATENSCHUTZERKLÄRUNG. WENN SIE      WIDERSPRUCH EINLEGEN, WERDEN WIR IHRE BETROFFENEN PERSONENBEZOGENEN DATEN NICHT MEHR      VERARBEITEN, ES SEI DENN, WIR KÖNNEN ZWINGENDE SCHUTZWÜRDIGE GRÜNDE FÜR      DIE VERARBEITUNG NACHWEISEN, DIE IHRE INTERESSEN, RECHTE UND FREIHEITEN ÜBERWIEGEN ODER      DIE VERARBEITUNG DIENT DER GELTENDMACHUNG, AUSÜBUNG ODER VERTEIDIGUNG VON      RECHTSANSPRÜCHEN (WIDERSPRUCH NACH ART. 21 ABS. 1 DSGVO).              WERDEN IHRE PERSONENBEZOGENEN DATEN VERARBEITET, UM DIREKTWERBUNG ZU BETREIBEN, SO HABEN SIE      DAS RECHT, JEDERZEIT WIDERSPRUCH GEGEN DIE VERARBEITUNG SIE BETREFFENDER PERSONENBEZOGENER      DATEN ZUM ZWECKE DERARTIGER WERBUNG EINZULEGEN; DIES GILT AUCH FÜR DAS PROFILING, SOWEIT      ES MIT SOLCHER DIREKTWERBUNG IN VERBINDUNG STEHT. WENN SIE WIDERSPRECHEN, WERDEN IHRE      PERSONENBEZOGENEN DATEN ANSCHLIESSEND NICHT MEHR ZUM ZWECKE DER DIREKTWERBUNG VERWENDET      (WIDERSPRUCH NACH ART. 21 ABS. 2 DSGVO).        Beschwerde­recht bei der zuständigen Aufsichts­behörde          Im Falle von Verstößen gegen die DSGVO steht den Betroffenen ein Beschwerderecht      bei einer Aufsichtsbehörde, insbesondere in dem Mitgliedstaat ihres gewöhnlichen      Aufenthalts, ihres Arbeitsplatzes oder des Orts des mutmaßlichen Verstoßes zu. Das      Beschwerderecht besteht unbeschadet anderweitiger verwaltungsrechtlicher oder gerichtlicher      Rechtsbehelfe.        Recht auf Daten­übertrag­barkeit          Sie haben das Recht, Daten, die wir auf Grundlage Ihrer Einwilligung oder in Erfüllung      eines Vertrags automatisiert verarbeiten, an sich oder an einen Dritten in einem      gängigen, maschinenlesbaren Format aushändigen zu lassen. Sofern Sie die direkte      Übertragung der Daten an einen anderen Verantwortlichen verlangen, erfolgt dies nur,      soweit es technisch machbar ist.        Auskunft, Berichtigung und Löschung          Sie haben im Rahmen der geltenden gesetzlichen Bestimmungen jederzeit das Recht auf      unentgeltliche Auskunft über Ihre gespeicherten personenbezogenen Daten, deren Herkunft      und Empfänger und den Zweck der Datenverarbeitung und ggf. ein Recht auf Berichtigung      oder Löschung dieser Daten. Hierzu sowie zu weiteren Fragen zum Thema personenbezogene      Daten können Sie sich jederzeit an uns wenden.        Recht auf Einschränkung der Verarbeitung          Sie haben das Recht, die Einschränkung der Verarbeitung Ihrer personenbezogenen Daten zu      verlangen. Hierzu können Sie sich jederzeit an uns wenden. Das Recht auf      Einschränkung der Verarbeitung besteht in folgenden Fällen:                      Wenn Sie die Richtigkeit Ihrer bei uns gespeicherten personenbezogenen Daten bestreiten,        benötigen wir in der Regel Zeit, um dies zu überprüfen. Für die Dauer        der Prüfung haben Sie das Recht, die Einschränkung der Verarbeitung Ihrer        personenbezogenen Daten zu verlangen.                    Wenn die Verarbeitung Ihrer personenbezogenen Daten unrechtmäßig        geschah/geschieht, können Sie statt der Löschung die Einschränkung der        Datenverarbeitung verlangen.                    Wenn wir Ihre personenbezogenen Daten nicht mehr benötigen, Sie sie jedoch zur        Ausübung, Verteidigung oder Geltendmachung von Rechtsansprüchen benötigen,        haben Sie das Recht, statt der Löschung die Einschränkung der Verarbeitung Ihrer        personenbezogenen Daten zu verlangen.                    Wenn Sie einen Widerspruch nach Art. 21 Abs. 1 DSGVO eingelegt haben, muss eine        Abwägung zwischen Ihren und unseren Interessen vorgenommen werden. Solange noch nicht        feststeht, wessen Interessen überwiegen, haben Sie das Recht, die Einschränkung        der Verarbeitung Ihrer personenbezogenen Daten zu verlangen.                    Wenn Sie die Verarbeitung Ihrer personenbezogenen Daten eingeschränkt haben, dürfen      diese Daten – von ihrer Speicherung abgesehen – nur mit Ihrer Einwilligung oder      zur Geltendmachung, Ausübung oder Verteidigung von Rechtsansprüchen oder zum Schutz      der Rechte einer anderen natürlichen oder juristischen Person oder aus Gründen eines      wichtigen öffentlichen Interesses der Europäischen Union oder eines Mitgliedstaats      verarbeitet werden.        SSL- bzw. TLS-Verschlüsselung          Diese Seite nutzt aus Sicherheitsgründen und zum Schutz der Übertragung      vertraulicher Inhalte, wie zum Beispiel Bestellungen oder Anfragen, die Sie an uns als      Seitenbetreiber senden, eine SSL- bzw. TLS-Verschlüsselung. Eine verschlüsselte      Verbindung erkennen Sie daran, dass die Adresszeile des Browsers von „http://“ auf      „https://“ wechselt und an dem Schloss-Symbol in Ihrer Browserzeile.              Wenn die SSL- bzw. TLS-Verschlüsselung aktiviert ist, können die Daten, die Sie an      uns übermitteln, nicht von Dritten mitgelesen werden.        4. Datenerfassung auf dieser Website    Kontaktformular          Wenn Sie uns per Kontaktformular Anfragen zukommen lassen, werden Ihre Angaben aus dem      Anfrageformular inklusive der von Ihnen dort angegebenen Kontaktdaten zwecks Bearbeitung der      Anfrage und für den Fall von Anschlussfragen bei uns gespeichert. Diese Daten geben wir      nicht ohne Ihre Einwilligung weiter.              Die Verarbeitung dieser Daten erfolgt auf Grundlage von Art. 6 Abs. 1 lit. b DSGVO, sofern      Ihre Anfrage mit der Erfüllung eines Vertrags zusammenhängt oder zur      Durchführung vorvertraglicher Maßnahmen erforderlich ist. In allen übrigen      Fällen beruht die Verarbeitung auf unserem berechtigten Interesse an der effektiven      Bearbeitung der an uns gerichteten Anfragen (Art. 6 Abs. 1 lit. f DSGVO) oder auf Ihrer      Einwilligung (Art. 6 Abs. 1 lit. a DSGVO) sofern diese abgefragt wurde; die Einwilligung ist      jederzeit widerrufbar.              Die von Ihnen im Kontaktformular eingegebenen Daten verbleiben bei uns, bis Sie uns zur      Löschung auffordern, Ihre Einwilligung zur Speicherung widerrufen oder der Zweck für      die Datenspeicherung entfällt (z. B. nach abgeschlossener Bearbeitung Ihrer      Anfrage). Zwingende gesetzliche Bestimmungen – insbesondere Aufbewahrungsfristen –      bleiben unberührt.        Quelle: https://www.e-recht24.de  '\n    var COMPONENTS = [{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'BoardTaskOverlayComponent', 'selector': 'app-board-task-overlay'},{'name': 'ContactsAddComponent', 'selector': 'app-contacts-add'},{'name': 'ContactsEditComponent', 'selector': 'app-contacts-edit'},{'name': 'ContactsOverviewComponent', 'selector': 'app-contacts-overview'},{'name': 'ContactsViewComponent', 'selector': 'app-contacts-view'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'FooterBarComponent', 'selector': 'app-footer-bar'},{'name': 'HeaderBarMobileComponent', 'selector': 'app-header-bar-mobile'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'SummaryComponent', 'selector': 'app-summary'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PrivacyPolicyComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetPasswordComponent.html":{"url":"components/ResetPasswordComponent.html","title":"component - ResetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ResetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/reset-password/reset-password.component.ts\n\n\n\n    \n        Description\n    \n    \n        ResetPasswordComponent handles the password reset functionality for the application.\nThis component allows users to request or complete the process of resetting their password.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reset-password\n            \n\n\n\n            \n                styleUrls\n                ./reset-password.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./reset-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n\n/**\n * ResetPasswordComponent handles the password reset functionality for the application.\n * This component allows users to request or complete the process of resetting their password.\n */\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.scss'],\n})\nexport class ResetPasswordComponent {}\n\n    \n\n    \n        reset-password works!\n\n    \n\n    \n                \n                    ./reset-password.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'reset-password works!'\n    var COMPONENTS = [{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'BoardTaskOverlayComponent', 'selector': 'app-board-task-overlay'},{'name': 'ContactsAddComponent', 'selector': 'app-contacts-add'},{'name': 'ContactsEditComponent', 'selector': 'app-contacts-edit'},{'name': 'ContactsOverviewComponent', 'selector': 'app-contacts-overview'},{'name': 'ContactsViewComponent', 'selector': 'app-contacts-view'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'FooterBarComponent', 'selector': 'app-footer-bar'},{'name': 'HeaderBarMobileComponent', 'selector': 'app-header-bar-mobile'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'SummaryComponent', 'selector': 'app-summary'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ScreenSizeService.html":{"url":"injectables/ScreenSizeService.html","title":"injectable - ScreenSizeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ScreenSizeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/screen-size.service.ts\n        \n\n\n            \n                Description\n            \n            \n                ScreenSizeService provides an observable to detect screen size changes,\nspecifically for identifying handset or tablet devices based on custom breakpoints.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handsetOrTabletBreakpoints\n                            \n                            \n                                isHandsetOrTablet$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(breakpointObserver: BreakpointObserver)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/screen-size.service.ts:29\n                            \n                        \n\n                \n                    \n                            Constructor to inject the BreakpointObserver, which observes screen size changes.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        breakpointObserver\n                                                  \n                                                        \n                                                                    BreakpointObserver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAngular CDK BreakpointObserver for monitoring screen size.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handsetOrTabletBreakpoints\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    Breakpoints.Handset,\n    '(max-width: 1024px)',\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/services/screen-size.service.ts:17\n                        \n                    \n\n            \n                \n                    Custom breakpoints that define handset or tablet screen sizes.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isHandsetOrTablet$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.breakpointObserver\n    .observe(this.handsetOrTabletBreakpoints)\n    .pipe(map((state: BreakpointState) => state.matches))\n                    \n                \n                    \n                        \n                                Defined in src/app/services/screen-size.service.ts:27\n                        \n                    \n\n            \n                \n                    Observable that emits a boolean indicating if the screen size matches\nthe handset or tablet breakpoints.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n/**\n * ScreenSizeService provides an observable to detect screen size changes,\n * specifically for identifying handset or tablet devices based on custom breakpoints.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ScreenSizeService {\n\n  /** Custom breakpoints that define handset or tablet screen sizes. */\n  private handsetOrTabletBreakpoints = [\n    Breakpoints.Handset,\n    '(max-width: 1024px)',\n  ];\n\n\n  /**\n   * Observable that emits a boolean indicating if the screen size matches\n   * the handset or tablet breakpoints.\n   */\n  isHandsetOrTablet$: Observable = this.breakpointObserver\n    .observe(this.handsetOrTabletBreakpoints)\n    .pipe(map((state: BreakpointState) => state.matches));\n\n\n    /**\n   * Constructor to inject the BreakpointObserver, which observes screen size changes.\n   * @param breakpointObserver - Angular CDK BreakpointObserver for monitoring screen size.\n   */\n  constructor(private breakpointObserver: BreakpointObserver) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarComponent.html":{"url":"components/SidebarComponent.html","title":"component - SidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/sidebar/sidebar.component.ts\n\n\n\n    \n        Description\n    \n    \n        SidebarComponent manages the sidebar navigation and highlights the active page.\nIt includes navigation methods to various sections and external links.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidebar\n            \n\n\n\n            \n                styleUrls\n                ./sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isAddTaskPage\n                            \n                            \n                                isBoardPage\n                            \n                            \n                                isContactsPage\n                            \n                            \n                                isSummaryPage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToAddtask\n                            \n                            \n                                goToBoard\n                            \n                            \n                                goToContacts\n                            \n                            \n                                goToLegal\n                            \n                            \n                                goToPolicy\n                            \n                            \n                                goToSummary\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                resetPageFlags\n                            \n                            \n                                    Private\n                                setPageFlag\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/sidebar/sidebar.component.ts:26\n                            \n                        \n\n                \n                    \n                            Constructor that injects the Angular Router for navigation.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nRouter for navigation and monitoring route changes.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goToAddtask\n                        \n                    \n                \n            \n            \n                \ngoToAddtask()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/sidebar/sidebar.component.ts:87\n                        \n                    \n\n\n            \n                \n                        Navigates to the Add Task page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToBoard\n                        \n                    \n                \n            \n            \n                \ngoToBoard()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/sidebar/sidebar.component.ts:93\n                        \n                    \n\n\n            \n                \n                        Navigates to the Board page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToContacts\n                        \n                    \n                \n            \n            \n                \ngoToContacts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/sidebar/sidebar.component.ts:75\n                        \n                    \n\n\n            \n                \n                        Navigates to the Contacts page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToLegal\n                        \n                    \n                \n            \n            \n                \ngoToLegal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/sidebar/sidebar.component.ts:105\n                        \n                    \n\n\n            \n                \n                        Opens the Legal Notice page in a new tab.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToPolicy\n                        \n                    \n                \n            \n            \n                \ngoToPolicy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/sidebar/sidebar.component.ts:99\n                        \n                    \n\n\n            \n                \n                        Opens the Privacy Policy page in a new tab.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToSummary\n                        \n                    \n                \n            \n            \n                \ngoToSummary()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/sidebar/sidebar.component.ts:81\n                        \n                    \n\n\n            \n                \n                        Navigates to the Summary page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/sidebar/sidebar.component.ts:40\n                        \n                    \n\n\n            \n                \n                        Initializes the component by subscribing to router events\nto set the active page and update page flags.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resetPageFlags\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetPageFlags()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/sidebar/sidebar.component.ts:54\n                        \n                    \n\n\n            \n                \n                        Resets all page flags to false, called before setting the active page flag.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setPageFlag\n                        \n                    \n                \n            \n            \n                \n                        \n                    setPageFlag(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/sidebar/sidebar.component.ts:66\n                        \n                    \n\n\n            \n                \n                        Sets the appropriate page flag to true based on the current URL.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe current URL to determine the active page.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isAddTaskPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/sidebar/sidebar.component.ts:23\n                        \n                    \n\n            \n                \n                    Indicates if the Add Task page is currently active.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isBoardPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/sidebar/sidebar.component.ts:20\n                        \n                    \n\n            \n                \n                    Indicates if the Board page is currently active.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isContactsPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/sidebar/sidebar.component.ts:26\n                        \n                    \n\n            \n                \n                    Indicates if the Contacts page is currently active.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSummaryPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/sidebar/sidebar.component.ts:17\n                        \n                    \n\n            \n                \n                    Indicates if the Summary page is currently active.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router, NavigationEnd, Event as RouterEvent } from '@angular/router';\n\n\n/**\n * SidebarComponent manages the sidebar navigation and highlights the active page.\n * It includes navigation methods to various sections and external links.\n */\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss'],\n})\nexport class SidebarComponent implements OnInit {\n\n  /** Indicates if the Summary page is currently active. */\n  isSummaryPage: boolean = false;\n\n  /** Indicates if the Board page is currently active. */\n  isBoardPage: boolean = false;\n\n  /** Indicates if the Add Task page is currently active. */\n  isAddTaskPage: boolean = false;\n\n  /** Indicates if the Contacts page is currently active. */\n  isContactsPage: boolean = false;\n\n\n    /**\n   * Constructor that injects the Angular Router for navigation.\n   * @param router - Router for navigation and monitoring route changes.\n   */\n  constructor(private router: Router) {}\n\n\n    /**\n   * Initializes the component by subscribing to router events\n   * to set the active page and update page flags.\n   */\n  ngOnInit() {\n    this.router.events.subscribe(event => {\n      if (event instanceof NavigationEnd) {\n        this.resetPageFlags();\n        this.setPageFlag(event.urlAfterRedirects);\n      }\n    });\n    this.setPageFlag(this.router.url);\n  }\n\n\n    /**\n   * Resets all page flags to false, called before setting the active page flag.\n   */\n  private resetPageFlags() {\n    this.isSummaryPage = false;\n    this.isBoardPage = false;\n    this.isAddTaskPage = false;\n    this.isContactsPage = false;\n  }\n\n\n    /**\n   * Sets the appropriate page flag to true based on the current URL.\n   * @param url - The current URL to determine the active page.\n   */\n  private setPageFlag(url: string) {\n    this.isSummaryPage = url.includes('/summary');\n    this.isBoardPage = url.includes('/board');\n    this.isAddTaskPage = url.includes('/addtask');\n    this.isContactsPage = url.includes('/contacts');\n  }\n\n\n    /** Navigates to the Contacts page. */\n  goToContacts() {\n    this.router.navigate(['/contacts']);\n  }\n\n\n    /** Navigates to the Summary page. */\n  goToSummary() {\n    this.router.navigate(['/summary']);\n  }\n\n\n    /** Navigates to the Add Task page. */\n  goToAddtask() {\n    this.router.navigate(['/addtask']);\n  }\n\n\n    /** Navigates to the Board page. */\n  goToBoard() {\n    this.router.navigate(['/board']);\n  }\n\n\n    /** Opens the Privacy Policy page in a new tab. */\n  goToPolicy() {\n    window.open('/privacy-policy', '_blank');\n  }\n\n\n    /** Opens the Legal Notice page in a new tab. */\n  goToLegal() {\n    window.open('/legal-notice', '_blank');\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        \n        \n        \n        \n        \n      \n      \n        \n          \n        \n      \n    \n  \n  \n    \n      \n        \n          \n        \n      \n      Summary\n    \n    \n      \n        \n          \n          \n        \n      \n      Board\n    \n    \n      \n        \n          \n            \n          \n          \n            \n          \n        \n      \n      Add Task\n    \n    \n      \n        \n          \n            \n          \n          \n            \n          \n        \n      \n      Contacts\n    \n  \n  \n    Privacy Policy\n    Legal Notice\n  \n\n\n    \n\n    \n                \n                    ./sidebar.component.scss\n                \n                .sidebarContnentContainer {\n  background-color: #2a3647;\n  height: 100vh;\n  width: 15vw;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n}\n\n.iconContainerSidebar {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  margin-top: 40px;\n  width: 15vw;\n}\n\n.boardIcon {\n  padding-right: 16px;\n}\n\n.iconText {\n  color: white;\n  font-weight: 500;\n  margin-left: 10px;\n}\n\n.hoverSidebarIcons:hover {\n  background-color: #091931;\n  cursor: pointer;\n}\n\n.activeRouteIconSidebar {\n  background-color: #091931 !important;\n}\n\n.logoContainer {\n  height: 30vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.logo {\n  cursor: pointer;\n}\n\n.allIconsContainer {\n  height: 55vh;\n  display: flex;\n  flex-direction: column;\n  width: 15vw;\n}\n\n.imprintContainer {\n  height: 10vh;\n  color: #ffffff;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n}\n\n.imprintLink {\n  cursor: pointer;\n}\n\n.imprintLink:hover {\n  color: #29abe2;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                Summary                                                              Board                                                                                                          Add Task                                                                                                          Contacts            Privacy Policy    Legal Notice  '\n    var COMPONENTS = [{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'BoardTaskOverlayComponent', 'selector': 'app-board-task-overlay'},{'name': 'ContactsAddComponent', 'selector': 'app-contacts-add'},{'name': 'ContactsEditComponent', 'selector': 'app-contacts-edit'},{'name': 'ContactsOverviewComponent', 'selector': 'app-contacts-overview'},{'name': 'ContactsViewComponent', 'selector': 'app-contacts-view'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'FooterBarComponent', 'selector': 'app-footer-bar'},{'name': 'HeaderBarMobileComponent', 'selector': 'app-header-bar-mobile'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'SummaryComponent', 'selector': 'app-summary'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignUpComponent.html":{"url":"components/SignUpComponent.html","title":"component - SignUpComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SignUpComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/sign-up/sign-up.component.ts\n\n\n\n    \n        Description\n    \n    \n        SignUpComponent handles user registration, including form validation,\npassword visibility toggling, and submission to the server.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sign-up\n            \n\n\n\n            \n                styleUrls\n                ./sign-up.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sign-up.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                passwordVisible\n                            \n                            \n                                signupSuccess\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToLogIn\n                            \n                            \n                                onSubmit\n                            \n                            \n                                passwordsMatch\n                            \n                            \n                                togglePasswordVisibility\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userRegistrationService: UserRegistrationService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/sign-up/sign-up.component.ts:32\n                            \n                        \n\n                \n                    \n                            Constructor to inject the UserRegistrationService and Router for navigation.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userRegistrationService\n                                                  \n                                                        \n                                                                        UserRegistrationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService to handle user registration.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nRouter to navigate after registration.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goToLogIn\n                        \n                    \n                \n            \n            \n                \ngoToLogIn()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/sign-up/sign-up.component.ts:94\n                        \n                    \n\n\n            \n                \n                        Navigates to the Summary page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/sign-up/sign-up.component.ts:50\n                        \n                    \n\n\n            \n                \n                        Submits the signup form if the privacy policy is accepted.\nOn successful registration, navigates to the login page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordsMatch\n                        \n                    \n                \n            \n            \n                \npasswordsMatch()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/sign-up/sign-up.component.ts:88\n                        \n                    \n\n\n            \n                \n                        Checks if the password and confirm password fields match.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                Boolean indicating if passwords match.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        togglePasswordVisibility\n                        \n                    \n                \n            \n            \n                \ntogglePasswordVisibility()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/sign-up/sign-up.component.ts:79\n                        \n                    \n\n\n            \n                \n                        Toggles the visibility of the password field.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        passwordVisible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/sign-up/sign-up.component.ts:32\n                        \n                    \n\n            \n                \n                    Controls the visibility of the password field.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signupSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/sign-up/sign-up.component.ts:20\n                        \n                    \n\n            \n                \n                    Indicates if the signup was successful, used to show success message.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    name: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n    acceptsPrivacyPolicy: false,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/sign-up/sign-up.component.ts:23\n                        \n                    \n\n            \n                \n                    Object to hold user registration data.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { UserRegistrationService } from 'src/app/services/auth.service';\nimport { Router } from '@angular/router';\n\n\n/**\n * SignUpComponent handles user registration, including form validation,\n * password visibility toggling, and submission to the server.\n */\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.scss'],\n})\nexport class SignUpComponent {\n\n\n    /** Indicates if the signup was successful, used to show success message. */\n  signupSuccess = false;\n\n  /** Object to hold user registration data. */\n  user = {\n    name: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n    acceptsPrivacyPolicy: false,\n  };\n\n    /** Controls the visibility of the password field. */\n  passwordVisible: boolean = false;\n\n\n    /**\n   * Constructor to inject the UserRegistrationService and Router for navigation.\n   * @param userRegistrationService - Service to handle user registration.\n   * @param router - Router to navigate after registration.\n   */\n  constructor(\n    private userRegistrationService: UserRegistrationService,\n    private router: Router,\n  ) {}\n\n\n    /**\n   * Submits the signup form if the privacy policy is accepted.\n   * On successful registration, navigates to the login page.\n   */\n  onSubmit(): void {\n    if (this.user.acceptsPrivacyPolicy) {\n      const userDataToSend = {\n        name: this.user.name, \n        email: this.user.email,\n        password: this.user.password,\n        confirmPassword: this.user.confirmPassword,\n      };\n\n      this.userRegistrationService.registerUser(userDataToSend).subscribe({\n        next: response => {\n          this.signupSuccess = true;\n          setTimeout(() => {\n            this.router.navigate(['/login']);\n          }, 3000);\n        },\n        error: error => {\n          console.error('There was an error!', error);\n          console.error('Error response body:', error.error);\n          console.error(`Error status: ${error.status}, Message: ${error.message}`);\n        },\n      });\n    } else {\n      console.error('Privacy policy not accepted');\n    }\n  }\n\n\n  /** Toggles the visibility of the password field. */\n  togglePasswordVisibility(): void {\n    this.passwordVisible = !this.passwordVisible;\n  }\n\n\n  /**\n   * Checks if the password and confirm password fields match.\n   * @returns Boolean indicating if passwords match.\n   */\n  passwordsMatch(): boolean {\n    return this.user.password === this.user.confirmPassword;\n  }\n\n\n    /** Navigates to the Summary page. */\n  goToLogIn(): void {\n    this.router.navigate(['/summary']);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n      \n      \n      \n      \n    \n  \n  \n    \n      Sign up\n      \n    \n\n    \n      \n        \n        \n        \n        \n        \n        \n      \n    \n\n    \n      \n        \n        Name\n      \n\n      \n        \n        Email\n      \n\n      \n        \n        Password\n        \n          \n        \n      \n\n      \n        \n        Confirm Password\n        \n          \n        \n        Wrong password! Try again.\n      \n\n      \n        \n        \n          I accept the Privacy policy\n        \n      \n\n      \n        You must accept the privacy policy to proceed.\n      \n\n      \n        Sign up\n      \n    \n\n    You Signed Up successfully\n  \n\n  \n    \n      Privacy Policy\n      Legal notice\n    \n  \n\n\n    \n\n    \n                \n                    ./sign-up.component.scss\n                \n                h1 {\n  display: flex;\n  justify-content: center;\n  margin: 16px;\n}\n\n.headlineContainer {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 16px;\n}\n\n.underline {\n  border-bottom: 3px solid;\n  border-color: #29abe2;\n  width: 60%;\n}\n\n.inputField {\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n}\n\n.inputContainer {\n  width: 90%;\n  display: flex;\n  align-items: center;\n  position: relative;\n}\n\n.h58 {\n  height: 56px;\n}\n\n.borderNone {\n  border: none !important;\n}\n\n.formContainer {\n  width: 100%;\n  height: 80%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n}\n\n.formInput {\n  background-image: url('/assets/img/mail.png');\n  background-repeat: no-repeat;\n  background-position: calc(100% - 18px);\n}\n\n.formInputName {\n  background-image: url('/assets/img/person.png');\n  background-repeat: no-repeat;\n  background-position: calc(100% - 18px);\n}\n\n.formInputPassword {\n  background-repeat: no-repeat;\n  background-position: right 10px center;\n  padding-right: 40px;\n}\n\n.loginContainer {\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  height: 100vh;\n}\n\n.logoContainer {\n  height: 20vh;\n  position: relative;\n  top: 16px;\n  width: calc(100% - 32px);\n}\n\n.logoContainerMobile {\n  display: none;\n}\n\n.mainContainer {\n  height: 80vh;\n  background-color: #ffffff;\n  width: min(652px, 90%);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n  border-radius: 30px;\n}\n\n.footerContainer {\n  height: 20vh;\n  width: 90vw;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  flex-direction: column;\n}\n\n.SignupFootercontainer {\n  flex-direction: row;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  width: 90vw;\n}\n\n.btn-toggle-visibility {\n  position: absolute;\n  height: 100%;\n  right: 0px;\n  border: none;\n  background: transparent;\n  cursor: pointer;\n}\n\n.checkboxContainer {\n  width: 80%;\n}\n\n.checkboxInput {\n  border-color: #2a3647;\n  border-width: 2px;\n  box-shadow: none;\n}\n\n.signedSuccessContainer {\n  position: fixed;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  background-color: #2a3647;\n  border-radius: 20px;\n  height: 72px;\n  width: min(652px, 80%);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  font-size: 1.25rem;\n  z-index: 3;\n  animation: slideInFromBottom 0.5s ease forwards;\n}\n\n.notJoin {\n  font-weight: 400;\n  font-size: 1.5rem;\n}\n\n.privacyLink {\n  color: #29abe2;\n  cursor: pointer;\n}\n\n.linkContainer {\n  flex-direction: row;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  width: 90vw;\n}\n\n.link {\n  cursor: pointer;\n}\n\n@media screen and (orientation: landscape) and (max-width: 1024px) {\n  .logoContainer {\n    display: none;\n  }\n\n  .logoContainerMobile {\n    display: block;\n    position: absolute;\n    top: 16px;\n    left: 16px;\n  }\n\n  .mainContainer {\n    height: 100vh;\n    width: 100vw;\n  }\n}\n\n@keyframes slideInFromBottom {\n  0% {\n    transform: translateY(100vh);\n    opacity: 0;\n  }\n  100% {\n    transform: translateY(0);\n    opacity: 1;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            Sign up                                                                                                        Name                            Email                            Password                                                      Confirm Password                                  Wrong password! Try again.                                      I accept the Privacy policy                            You must accept the privacy policy to proceed.                    Sign up              You Signed Up successfully              Privacy Policy      Legal notice      '\n    var COMPONENTS = [{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'BoardTaskOverlayComponent', 'selector': 'app-board-task-overlay'},{'name': 'ContactsAddComponent', 'selector': 'app-contacts-add'},{'name': 'ContactsEditComponent', 'selector': 'app-contacts-edit'},{'name': 'ContactsOverviewComponent', 'selector': 'app-contacts-overview'},{'name': 'ContactsViewComponent', 'selector': 'app-contacts-view'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'FooterBarComponent', 'selector': 'app-footer-bar'},{'name': 'HeaderBarMobileComponent', 'selector': 'app-header-bar-mobile'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'SummaryComponent', 'selector': 'app-summary'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignUpComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Subtask.html":{"url":"interfaces/Subtask.html","title":"interface - Subtask","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Subtask\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/subtask.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a subtask with optional ID, text, and completion status.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            completed\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        completed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        completed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Boolean indicating if the subtask is completed.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Unique identifier for the subtask.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Text description of the subtask.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\n\n\n/**\n * Interface representing a subtask with optional ID, text, and completion status.\n */\nexport interface Subtask {\n\n  /** Unique identifier for the subtask. */\n  id?: number; \n\n  /** Text description of the subtask. */\n  text: string;\n\n  /** Boolean indicating if the subtask is completed. */\n  completed: boolean;\n}\n\n\n/**\n * SubtaskService provides methods to create, retrieve, update, and delete subtasks.\n * It communicates with the server API and handles any HTTP errors that occur during requests.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class SubtaskService {\n\n  /** Base URL for the subtasks API. */\n  private apiUrl = `${environment.apiUrl}/subtasks/`;\n\n\n  /**\n   * Constructor to inject HttpClient for making HTTP requests.\n   * @param http - HttpClient instance for handling HTTP requests.\n   */\n  constructor(private http: HttpClient) {}\n\n\n    /**\n   * Retrieves the list of all subtasks from the server.\n   * @returns An Observable that emits an array of Subtask objects.\n   */\n  getSubtasks(): Observable {\n    return this.http.get(this.apiUrl).pipe(catchError(this.handleError));\n  }\n\n\n  /**\n   * Retrieves a specific subtask by ID.\n   * @param id - The ID of the subtask to retrieve.\n   * @returns An Observable that emits the requested Subtask.\n   */\n  getSubtask(id: number): Observable {\n    return this.http.get(`${this.apiUrl}/${id}`).pipe(catchError(this.handleError));\n  }\n\n\n    /**\n   * Creates a new subtask on the server.\n   * @param subtask - The Subtask object to create.\n   * @returns An Observable that emits the created Subtask.\n   */\n  createSubtask(subtask: Subtask): Observable {\n    return this.http.post(this.apiUrl, subtask).pipe(\n      catchError(error => {\n        console.error('Error creating subtask:', error);\n        return throwError(() => new Error('Error creating subtask'));\n      }),\n    );\n  }\n\n\n    /**\n   * Updates an existing subtask by its ID.\n   * @param id - The ID of the subtask to update.\n   * @param subtask - The updated Subtask object.\n   * @returns An Observable that emits the updated Subtask.\n   */\n  updateSubtask(id: number, subtask: Subtask): Observable {\n    const url = `${this.apiUrl.replace(/\\/+$/, '')}/${id}/`; // Ensure trailing slash\n\n    return this.http.put(url, subtask).pipe(catchError(this.handleError));\n  }\n\n\n    /**\n   * Deletes a subtask by its ID.\n   * @param id - The ID of the subtask to delete.\n   * @returns An Observable that completes when the subtask is deleted.\n   */\n  deleteSubtask(id: number): Observable {\n    return this.http.delete(`${this.apiUrl}/${id}`).pipe(catchError(this.handleError));\n  }\n\n\n    /**\n   * Handles HTTP errors that occur during requests, logging error details to the console.\n   * @param error - The error response received.\n   * @returns An Observable that emits an error message.\n   */\n  private handleError(error: any) {\n    let errorMessage = 'An unknown error occurred!';\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = `Error: ${error.error.message}`;\n    } else {\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    console.error(errorMessage);\n    return throwError(errorMessage);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Subtask-1.html":{"url":"interfaces/Subtask-1.html","title":"interface - Subtask-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Subtask\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/task.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a subtask, with optional ID, text description, and completion status.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            completed\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        completed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        completed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Boolean indicating if the subtask is completed.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Unique identifier for the subtask.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Text description of the subtask.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\n\n\n/**\n * Interface representing a subtask, with optional ID, text description, and completion status.\n */\nexport interface Subtask {\n\n  /** Unique identifier for the subtask. */\n  id?: number;\n\n/** Text description of the subtask. */\n  text: string;\n\n  /** Boolean indicating if the subtask is completed. */\n  completed: boolean;\n}\n\n\n/**\n * Interface representing a task, with optional ID, title, priority, due date, category, and more.\n * Includes subtasks and contacts associated with the task.\n */\nexport interface Task {\n\n  /** Unique identifier for the task. */\n  id?: number;\n\n  /** Title of the task. */\n  title: string;\n\n  /** Optional description of the task. */\n  description?: string;\n\n  /** Priority level of the task (e.g., high, medium, low). */\n  priority: string;\n\n  /** Optional due date for the task, represented as a string. */\n  due_date?: string;\n\n  /** Optional ID of the category associated with the task. */\n  category?: number;\n\n  /** Array of user IDs assigned to the task. */\n  assigned_to: number[];\n\n  /** Array of subtasks associated with the task. */\n  subtasks: Subtask[];\n\n  /** Optional status of the task (e.g., todo, in progress, done). */\n  status?: string; \n\n  /** Array of contact IDs associated with the task. */\n  contacts: number[]; \n\n  /** Optional ID of the user who created the task. */\n  creator?: number; \n\n  /** Optional boolean to toggle the visibility of the status dropdown. */\n  showStatusDropdown?: boolean;\n}\n\n\n/**\n * TaskService manages tasks by providing methods to create, retrieve, update, and delete tasks.\n * It also includes error handling for HTTP requests.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class TaskService {\n\n  /** Base URL for task-related API endpoints. */\n  private baseUrl = environment.apiUrl; \n\n\n    /**\n   * Constructor to inject HttpClient for making HTTP requests.\n   * @param http - HttpClient instance for sending requests to the server.\n   */\n  constructor(private http: HttpClient) {}\n\n\n    /**\n   * Handles errors from HTTP requests, logging the error and providing a generic error message.\n   * @param error - The error response from the HTTP request.\n   * @returns An observable that emits an error message.\n   */\n  private handleError(error: HttpErrorResponse) {\n    if (error.status === 0) {\n      console.error('An error occurred:', error.error); \n    } else {\n      console.error(`Backend returned code ${error.status}, body was: `, error.error); \n    }\n    return throwError('Something bad happened; please try again later.'); \n  }\n\n\n    /**\n   * Retrieves all tasks from the server.\n   * @returns An Observable that emits an array of Task objects.\n   */\n  getTasks(): Observable {\n    return this.http.get(`${this.baseUrl}/tasks/`).pipe(\n      retry(3), \n      catchError(this.handleError), \n    );\n  }\n\n\n    /**\n   * Retrieves a specific task by its ID.\n   * @param id - The ID of the task to retrieve.\n   * @returns An Observable that emits the requested Task object.\n   */\n  getTask(id: number): Observable {\n    return this.http.get(`${this.baseUrl}/tasks/${id}/`).pipe(catchError(this.handleError));\n  }\n\n\n    /**\n   * Adds a new task with a default status of 'todo'.\n   * @param task - The Task object to be added.\n   * @returns An Observable that emits the created Task object.\n   */\n  addTask(task: Task): Observable {\n    task.status = 'todo'; \n    return this.http.post(`${this.baseUrl}/tasks/`, task).pipe(catchError(this.handleError));\n  }\n\n\n    /**\n   * Updates an existing task by its ID, ensuring unique subtasks.\n   * @param id - The ID of the task to update.\n   * @param task - The updated Task object.\n   * @returns An Observable that emits the updated Task object.\n   */\n  updateTask(id: number, task: Task): Observable {\n    const uniqueSubtasks = task.subtasks.filter(\n      (subtask, index, self) =>\n        index === self.findIndex(t => t.id === subtask.id && t.text === subtask.text),\n    );\n\n    const updatedTask = { ...task, subtasks: uniqueSubtasks };\n\n    return this.http\n      .put(`${this.baseUrl}/tasks/${id}/`, updatedTask)\n      .pipe(catchError(this.handleError));\n  }\n\n\n    /**\n   * Deletes a task by its ID.\n   * @param id - The ID of the task to delete.\n   * @returns An Observable that completes when the task is deleted.\n   */\n  deleteTask(id: number): Observable {\n    return this.http.delete(`${this.baseUrl}/tasks/${id}/`).pipe(catchError(this.handleError));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SubtaskService.html":{"url":"injectables/SubtaskService.html","title":"injectable - SubtaskService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SubtaskService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/subtask.service.ts\n        \n\n\n            \n                Description\n            \n            \n                SubtaskService provides methods to create, retrieve, update, and delete subtasks.\nIt communicates with the server API and handles any HTTP errors that occur during requests.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createSubtask\n                            \n                            \n                                deleteSubtask\n                            \n                            \n                                getSubtask\n                            \n                            \n                                getSubtasks\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                updateSubtask\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/subtask.service.ts:34\n                            \n                        \n\n                \n                    \n                            Constructor to inject HttpClient for making HTTP requests.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nHttpClient instance for handling HTTP requests.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createSubtask\n                        \n                    \n                \n            \n            \n                \ncreateSubtask(subtask: Subtask)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/subtask.service.ts:68\n                        \n                    \n\n\n            \n                \n                        Creates a new subtask on the server.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                subtask\n                                            \n                                                            Subtask\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe Subtask object to create.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that emits the created Subtask.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteSubtask\n                        \n                    \n                \n            \n            \n                \ndeleteSubtask(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/subtask.service.ts:96\n                        \n                    \n\n\n            \n                \n                        Deletes a subtask by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the subtask to delete.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that completes when the subtask is deleted.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSubtask\n                        \n                    \n                \n            \n            \n                \ngetSubtask(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/subtask.service.ts:58\n                        \n                    \n\n\n            \n                \n                        Retrieves a specific subtask by ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the subtask to retrieve.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that emits the requested Subtask.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSubtasks\n                        \n                    \n                \n            \n            \n                \ngetSubtasks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/subtask.service.ts:48\n                        \n                    \n\n\n            \n                \n                        Retrieves the list of all subtasks from the server.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that emits an array of Subtask objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleError(error: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/subtask.service.ts:106\n                        \n                    \n\n\n            \n                \n                        Handles HTTP errors that occur during requests, logging error details to the console.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe error response received.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                An Observable that emits an error message.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateSubtask\n                        \n                    \n                \n            \n            \n                \nupdateSubtask(id: number, subtask: Subtask)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/subtask.service.ts:84\n                        \n                    \n\n\n            \n                \n                        Updates an existing subtask by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the subtask to update.\n\n\n                                            \n                                        \n                                        \n                                                subtask\n                                            \n                                                            Subtask\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe updated Subtask object.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that emits the updated Subtask.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${environment.apiUrl}/subtasks/`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/subtask.service.ts:34\n                        \n                    \n\n            \n                \n                    Base URL for the subtasks API.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\n\n\n/**\n * Interface representing a subtask with optional ID, text, and completion status.\n */\nexport interface Subtask {\n\n  /** Unique identifier for the subtask. */\n  id?: number; \n\n  /** Text description of the subtask. */\n  text: string;\n\n  /** Boolean indicating if the subtask is completed. */\n  completed: boolean;\n}\n\n\n/**\n * SubtaskService provides methods to create, retrieve, update, and delete subtasks.\n * It communicates with the server API and handles any HTTP errors that occur during requests.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class SubtaskService {\n\n  /** Base URL for the subtasks API. */\n  private apiUrl = `${environment.apiUrl}/subtasks/`;\n\n\n  /**\n   * Constructor to inject HttpClient for making HTTP requests.\n   * @param http - HttpClient instance for handling HTTP requests.\n   */\n  constructor(private http: HttpClient) {}\n\n\n    /**\n   * Retrieves the list of all subtasks from the server.\n   * @returns An Observable that emits an array of Subtask objects.\n   */\n  getSubtasks(): Observable {\n    return this.http.get(this.apiUrl).pipe(catchError(this.handleError));\n  }\n\n\n  /**\n   * Retrieves a specific subtask by ID.\n   * @param id - The ID of the subtask to retrieve.\n   * @returns An Observable that emits the requested Subtask.\n   */\n  getSubtask(id: number): Observable {\n    return this.http.get(`${this.apiUrl}/${id}`).pipe(catchError(this.handleError));\n  }\n\n\n    /**\n   * Creates a new subtask on the server.\n   * @param subtask - The Subtask object to create.\n   * @returns An Observable that emits the created Subtask.\n   */\n  createSubtask(subtask: Subtask): Observable {\n    return this.http.post(this.apiUrl, subtask).pipe(\n      catchError(error => {\n        console.error('Error creating subtask:', error);\n        return throwError(() => new Error('Error creating subtask'));\n      }),\n    );\n  }\n\n\n    /**\n   * Updates an existing subtask by its ID.\n   * @param id - The ID of the subtask to update.\n   * @param subtask - The updated Subtask object.\n   * @returns An Observable that emits the updated Subtask.\n   */\n  updateSubtask(id: number, subtask: Subtask): Observable {\n    const url = `${this.apiUrl.replace(/\\/+$/, '')}/${id}/`; // Ensure trailing slash\n\n    return this.http.put(url, subtask).pipe(catchError(this.handleError));\n  }\n\n\n    /**\n   * Deletes a subtask by its ID.\n   * @param id - The ID of the subtask to delete.\n   * @returns An Observable that completes when the subtask is deleted.\n   */\n  deleteSubtask(id: number): Observable {\n    return this.http.delete(`${this.apiUrl}/${id}`).pipe(catchError(this.handleError));\n  }\n\n\n    /**\n   * Handles HTTP errors that occur during requests, logging error details to the console.\n   * @param error - The error response received.\n   * @returns An Observable that emits an error message.\n   */\n  private handleError(error: any) {\n    let errorMessage = 'An unknown error occurred!';\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = `Error: ${error.error.message}`;\n    } else {\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    console.error(errorMessage);\n    return throwError(errorMessage);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SummaryComponent.html":{"url":"components/SummaryComponent.html","title":"component - SummaryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SummaryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/summary/summary.component.ts\n\n\n\n    \n        Description\n    \n    \n        SummaryComponent displays a summary view for the user, including\na greeting, tasks overview, and nearest task due date.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-summary\n            \n\n\n\n            \n                styleUrls\n                ./summary.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./summary.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentDate\n                            \n                            \n                                currentUser\n                            \n                            \n                                greeting$\n                            \n                            \n                                nearestDueDate\n                            \n                            \n                                showOverlaySummary\n                            \n                            \n                                tasks\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                countTasksByPriority\n                            \n                            \n                                countTasksByStatus\n                            \n                            \n                                findNearestDueDate\n                            \n                            \n                                    Private\n                                generateGreeting\n                            \n                            \n                                goToBoardSummary\n                            \n                            \n                                loadTasks\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, taskService: TaskService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/summary/summary.component.ts:37\n                            \n                        \n\n                \n                    \n                            Constructor to inject necessary services, including UserService, TaskService, and Router.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService to manage user data.\n\n\n                                                        \n                                                \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService to manage tasks data.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nRouter for navigation within the app.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        countTasksByPriority\n                        \n                    \n                \n            \n            \n                \ncountTasksByPriority(priority: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/summary/summary.component.ts:136\n                        \n                    \n\n\n            \n                \n                        Counts tasks by their priority level (e.g., \"high\", \"medium\").\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                priority\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe priority level of tasks to filter by.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                The count of tasks with the specified priority.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        countTasksByStatus\n                        \n                    \n                \n            \n            \n                \ncountTasksByStatus(status: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/summary/summary.component.ts:125\n                        \n                    \n\n\n            \n                \n                        Counts tasks by their status (e.g., \"todo\", \"done\").\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                status\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe status of tasks to filter by.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                The count of tasks with the specified status.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findNearestDueDate\n                        \n                    \n                \n            \n            \n                \nfindNearestDueDate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/summary/summary.component.ts:146\n                        \n                    \n\n\n            \n                \n                        Finds the nearest due date among the tasks and sets it as nearestDueDate.\nIf no tasks are available, sets nearestDueDate to null.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generateGreeting\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateGreeting(user: User | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/summary/summary.component.ts:86\n                        \n                    \n\n\n            \n                \n                        Generates a greeting message based on the current time of day.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                        User | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe current user to personalize the greeting.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                A greeting string (e.g., \"Good morning,\").\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToBoardSummary\n                        \n                    \n                \n            \n            \n                \ngoToBoardSummary()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/summary/summary.component.ts:169\n                        \n                    \n\n\n            \n                \n                        Navigates to the Board page when the summary button is clicked.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadTasks\n                        \n                    \n                \n            \n            \n                \nloadTasks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/summary/summary.component.ts:107\n                        \n                    \n\n\n            \n                \n                        Loads tasks from the server and calculates the nearest due date.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/summary/summary.component.ts:56\n                        \n                    \n\n\n            \n                \n                        Initializes the component, loads tasks, sets up greeting, and manages the overlay.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentDate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                    \n                        \n                                Defined in src/app/summary/summary.component.ts:22\n                        \n                    \n\n            \n                \n                    Current date displayed in the summary view.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :     User | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/summary/summary.component.ts:28\n                        \n                    \n\n            \n                \n                    The currently logged-in user, retrieved from the UserService.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        greeting$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/summary/summary.component.ts:25\n                        \n                    \n\n            \n                \n                    Observable to dynamically display a greeting based on the time of day.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nearestDueDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/summary/summary.component.ts:34\n                        \n                    \n\n            \n                \n                    Nearest task due date among all tasks, calculated after loading tasks.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showOverlaySummary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/summary/summary.component.ts:37\n                        \n                    \n\n            \n                \n                    Boolean to control the display of an introductory overlay in the summary.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tasks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Task[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/summary/summary.component.ts:31\n                        \n                    \n\n            \n                \n                    List of tasks retrieved from the TaskService.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport { User } from 'src/assets/models/user.model';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { TaskService, Task } from 'src/app/services/task.service';\nimport { Router, NavigationEnd, Event as RouterEvent } from '@angular/router';\n\n\n/**\n * SummaryComponent displays a summary view for the user, including\n * a greeting, tasks overview, and nearest task due date.\n */\n@Component({\n  selector: 'app-summary',\n  templateUrl: './summary.component.html',\n  styleUrls: ['./summary.component.scss'],\n})\nexport class SummaryComponent implements OnInit {\n\n    /** Current date displayed in the summary view. */\n  currentDate = new Date();\n\n    /** Observable to dynamically display a greeting based on the time of day. */\n  greeting$: Observable | undefined;\n\n    /** The currently logged-in user, retrieved from the UserService. */\n  currentUser: User | null = null;\n\n    /** List of tasks retrieved from the TaskService. */\n  tasks: Task[] = [];\n\n    /** Nearest task due date among all tasks, calculated after loading tasks. */\n  nearestDueDate: Date | null = null;\n\n    /** Boolean to control the display of an introductory overlay in the summary. */\n  showOverlaySummary: boolean = true;\n\n\n    /**\n   * Constructor to inject necessary services, including UserService, TaskService, and Router.\n   * @param userService - Service to manage user data.\n   * @param taskService - Service to manage tasks data.\n   * @param router - Router for navigation within the app.\n   */\n  constructor(\n    private userService: UserService,\n    private taskService: TaskService,\n    private router: Router,\n  ) {}\n\n\n    /**\n   * Initializes the component, loads tasks, sets up greeting, and manages the overlay.\n   */\n  ngOnInit(): void {\n    const showOverlayStored = sessionStorage.getItem('showOverlaySummary');\n    console.log(this.showOverlaySummary);\n    this.loadTasks();\n    this.greeting$ = this.userService\n      .getCurrentUser()\n      .pipe(map(user => this.generateGreeting(user)));\n\n    this.userService.getCurrentUser().subscribe(user => {\n      this.currentUser = user;\n    });\n\n    if (showOverlayStored === 'true') {\n      this.showOverlaySummary = true;\n\n      setTimeout(() => {\n        sessionStorage.setItem('showOverlaySummary', 'false');\n        this.showOverlaySummary = false;\n      }, 5000);\n    } else {\n      this.showOverlaySummary = false;\n    }\n  }\n\n\n    /**\n   * Generates a greeting message based on the current time of day.\n   * @param user - The current user to personalize the greeting.\n   * @returns A greeting string (e.g., \"Good morning,\").\n   */\n  private generateGreeting(user: User | null): string {\n    const now = new Date();\n    const hour = now.getHours();\n\n    let greeting = 'Hello,';\n\n    if (hour >= 5 && hour = 12 && hour  {\n        this.tasks = tasks;\n        this.findNearestDueDate();\n      },\n      error => {\n        console.error('Error loading tasks:', error);\n      },\n    );\n  }\n\n\n    /**\n   * Counts tasks by their status (e.g., \"todo\", \"done\").\n   * @param status - The status of tasks to filter by.\n   * @returns The count of tasks with the specified status.\n   */\n  countTasksByStatus(status: string): number {\n    const filteredTasks = this.tasks.filter(task => task.status === status);\n    return filteredTasks.length;\n  }\n\n\n    /**\n   * Counts tasks by their priority level (e.g., \"high\", \"medium\").\n   * @param priority - The priority level of tasks to filter by.\n   * @returns The count of tasks with the specified priority.\n   */\n  countTasksByPriority(priority: string): number {\n    const filteredTasks = this.tasks.filter(task => task.priority === priority);\n    return filteredTasks.length;\n  }\n\n\n    /**\n   * Finds the nearest due date among the tasks and sets it as nearestDueDate.\n   * If no tasks are available, sets nearestDueDate to null.\n   */\n  findNearestDueDate(): void {\n    if (this.tasks.length === 0) {\n      this.nearestDueDate = null;\n      return;\n    }\n\n    const now = new Date().getTime();\n    let nearestTask = this.tasks[0];\n    let minDifference = Math.abs(new Date(nearestTask.due_date!).getTime() - now);\n\n    this.tasks.forEach(task => {\n      const difference = Math.abs(new Date(task.due_date!).getTime() - now);\n      if (difference \n    \n\n    \n        \n  \n    {{ greeting$ | async }}\n    {{ currentUser?.name }}\n  \n\n\n\n  \n    \n  \n\n  \n    \n    \n      \n        Join\n        \n        Key Metrics at a Glance\n        \n      \n\n      \n        \n          \n            \n              \n                \n                \n                  \n                \n                \n                  \n                \n              \n            \n            \n              {{ countTasksByStatus('todo') }}\n              To-do\n            \n          \n\n          \n            \n              \n                \n                \n              \n            \n            \n              {{ countTasksByStatus('done') }}\n              Done\n            \n          \n        \n\n        \n          \n            \n              \n                \n                  \n                  \n                    \n                    \n                  \n                  \n                    \n                      \n                    \n                  \n                \n              \n              \n                {{ countTasksByPriority('Urgent') }}\n                Urgent\n              \n            \n            \n            \n              {{ nearestDueDate | date: 'longDate' }}\n              Upcoming Deadline\n            \n          \n        \n\n        \n          \n            {{ tasks.length }}\n            Tasks in Board\n          \n          \n            {{ countTasksByStatus('inProgress') }}\n            Tasks in Progress\n          \n          \n            {{ countTasksByStatus('awaitFeedback') }}\n            Awaiting Feedback\n          \n        \n      \n    \n    \n      \n        {{ greeting$ | async }}\n        {{ currentUser?.name }}\n      \n    \n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./summary.component.scss\n                \n                .summaryContainer {\n  width: 100vw;\n  height: 100vh;\n  background-color: #f6f7f8;\n  display: flex;\n  flex-direction: column;\n}\n\n.summaryContent {\n  height: 80vh;\n  position: absolute;\n  top: 10vh;\n}\n\n.headlinesContainer {\n  height: 15vh;\n  margin-left: 16px;\n}\n\n.smallHeadline {\n  font-size: calc(1.175rem + 0.5vw) !important;\n}\n\n.summaryUnderline {\n  display: block;\n  border-bottom: 3px solid;\n  border-color: #29abe2;\n  width: min(120px, 50%);\n}\n\n.footerComponent {\n  bottom: 0;\n  left: 0;\n}\n\n.cardContainer {\n  height: 65vh;\n  width: min(1024px, 100vw);\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n  flex-direction: column;\n}\n\n.cardsStyle {\n  background-color: #ffffff;\n  border-radius: 20px;\n  height: 110px;\n  box-shadow: 0px 0px 4px 0px rgba(0, 0, 0, 0.2);\n}\n\n.firstRow {\n  width: min(264px, 47vw);\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n  flex-direction: row;\n}\n\n.secondRow {\n  width: min(560px, 96vw);\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n  flex-direction: row;\n}\n\n.cardsFirstRow {\n  display: flex;\n  justify-content: space-between;\n  width: min(560px, 96vw);\n}\n\n.thirdRow {\n  width: min(168px, 31vw);\n  display: flex;\n  align-items: center;\n}\n\n.cardsThirdRow {\n  display: flex;\n  justify-content: space-between;\n  width: min(560px, 96vw);\n}\n\n.numberTextContainer {\n  height: 110px;\n}\n\n.numberStyle {\n  font-weight: bold;\n  font-size: 2.5rem;\n}\n\n.hoverDone {\n  transition: transform 0.2s ease-in-out;\n}\n\n.textCenter {\n  text-align: center;\n}\n\n.hoverDone:hover {\n  color: white;\n  background-color: #2a3647;\n  cursor: pointer;\n  transform: scale(1.05);\n\n  .tickIcon circle {\n    fill: white;\n  }\n\n  .tickIcon path {\n    stroke: #2a3647;\n  }\n}\n\n.hoverTodo {\n  transition: transform 0.2s ease-in-out;\n}\n\n.hoverTodo:hover {\n  color: white;\n  background-color: #2a3647;\n  cursor: pointer;\n  transform: scale(1.05);\n\n  .pencilIcon circle {\n    fill: white;\n  }\n\n  .pencilIcon path {\n    fill: #2a3647;\n  }\n}\n\n.hoverUrgent {\n  transition: transform 0.2s ease-in-out;\n}\n\n.hoverUrgent:hover {\n  color: white;\n  background-color: #2a3647;\n  cursor: pointer;\n  transform: scale(1.02);\n\n  .urgentShadow {\n    border-color: white;\n  }\n}\n\n.hoverthirdRow {\n  transition: transform 0.2s ease-in-out;\n}\n\n.hoverthirdRow:hover {\n  color: white;\n  background-color: #2a3647;\n  cursor: pointer;\n  transform: scale(1.05);\n}\n\n.urgentIconTextContainer {\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n  flex-direction: row;\n  width: 150px;\n}\n\n.urgentShadow {\n  border: 2px solid;\n  width: 2px;\n  height: 80px;\n  border-color: #d1d1d1;\n}\n\n.urgentDate {\n  font-weight: bold;\n}\n\n@media screen and (orientation: landscape) and (max-width: 1024px) {\n  .cardsStyle {\n    height: 15vh;\n  }\n\n  .headlinesContainer {\n    display: flex;\n    align-items: center;\n  }\n\n  .summaryUnderline {\n    display: none;\n  }\n\n  .summaryDividingLine {\n    display: block;\n    border-right: 3px solid;\n    border-color: #29abe2;\n    height: 32px;\n    padding-bottom: 8px;\n    margin-right: 16px;\n    margin-left: 16px;\n  }\n\n  .summaryContent {\n    top: 15vh;\n  }\n\n  .numberTextContainer {\n    height: 15vh;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n  }\n\n  .numberStyle {\n    font-size: 1rem;\n  }\n\n  .cardContainer {\n    height: 50vh;\n    width: 100vw;\n    display: flex;\n    justify-content: space-between;\n    flex-direction: column;\n    align-items: center;\n  }\n\n  .urgentShadow {\n    height: 12vh;\n  }\n\n  .iconLandscape {\n    width: 48px;\n    height: 48px;\n  }\n}\n\n@media (min-width: 1025px) {\n  .summaryDesktopContainer {\n    display: flex;\n  }\n\n  .summaryContent {\n    width: 55vw;\n    position: relative;\n    margin-left: 48px;\n  }\n\n  .headlinesContainer {\n    display: flex;\n    align-items: center;\n  }\n\n  .smallHeadline {\n    display: flex;\n    align-items: center;\n  }\n\n  .summaryUnderline {\n    display: none;\n  }\n\n  .summaryDividingLine {\n    display: block;\n    border-right: 3px solid;\n    border-color: #29abe2;\n    height: 48px;\n    padding-bottom: 8px;\n    margin-right: 16px;\n    margin-left: 16px;\n  }\n\n  .cardContainer {\n    width: 560px;\n  }\n\n  .greetingContainer {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: calc(1.475rem + 0.5vw);\n    height: 90vh;\n    margin-top: 10vh;\n  }\n\n  .greetingNameContainer {\n    display: flex;\n    flex-direction: column;\n  }\n\n  .greetingContainerGreeting {\n    font-weight: 500;\n  }\n\n  .greetingContainerName {\n    color: #29abe2;\n    font-weight: 700;\n  }\n}\n\n.overlaySummary {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: white;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 9999; \n  animation: overlayFadeOut 3s ease-in-out forwards;\n  animation-delay: 2s;\n}\n\n.greetingContainerGreetingOverlay {\n  font-size: 2rem;\n  font-weight: 500;\n}\n\n.greetingContainerNameOverlay {\n  color: #29abe2;\n  font-weight: 700;\n  font-size: 2rem;\n}\n\n.greetingNameContainerOverlay {\n  animation: overlayFadeOutGreeting 1.5s ease-in-out forwards;\n  animation-delay: 1s;\n  display: flex;\n  flex-direction: column;\n}\n\n@keyframes overlayFadeOutGreeting {\n  0% {\n    opacity: 1;\n  }\n  100% {\n    opacity: 0;\n    visibility: hidden; \n  }\n}\n\n@keyframes overlayFadeOut {\n  0% {\n    opacity: 1;\n  }\n  100% {\n    opacity: 0;\n    visibility: hidden;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ greeting$ | async }}    {{ currentUser?.name }}                                  Join                Key Metrics at a Glance                                                                                                                                                                                                                                        {{ countTasksByStatus(\\'todo\\') }}              To-do                                                                                                                                              {{ countTasksByStatus(\\'done\\') }}              Done                                                                                                                                                                                                                                                                                                                                                      {{ countTasksByPriority(\\'Urgent\\') }}                Urgent                                                                {{ nearestDueDate | date: \\'longDate\\' }}              Upcoming Deadline                                                            {{ tasks.length }}            Tasks in Board                                {{ countTasksByStatus(\\'inProgress\\') }}            Tasks in Progress                                {{ countTasksByStatus(\\'awaitFeedback\\') }}            Awaiting Feedback                                              {{ greeting$ | async }}        {{ currentUser?.name }}                    '\n    var COMPONENTS = [{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'BoardTaskOverlayComponent', 'selector': 'app-board-task-overlay'},{'name': 'ContactsAddComponent', 'selector': 'app-contacts-add'},{'name': 'ContactsEditComponent', 'selector': 'app-contacts-edit'},{'name': 'ContactsOverviewComponent', 'selector': 'app-contacts-overview'},{'name': 'ContactsViewComponent', 'selector': 'app-contacts-view'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'FooterBarComponent', 'selector': 'app-footer-bar'},{'name': 'HeaderBarMobileComponent', 'selector': 'app-header-bar-mobile'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'SummaryComponent', 'selector': 'app-summary'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SummaryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Task.html":{"url":"interfaces/Task.html","title":"interface - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/task.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a task, with optional ID, title, priority, due date, category, and more.\nIncludes subtasks and contacts associated with the task.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            assigned_to\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            category\n                                        \n                                \n                                \n                                        \n                                            contacts\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            creator\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            due_date\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            priority\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            showStatusDropdown\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            subtasks\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        assigned_to\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        assigned_to:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Array of user IDs assigned to the task.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional ID of the category associated with the task.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contacts\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contacts:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Array of contact IDs associated with the task.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creator:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional ID of the user who created the task.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional description of the task.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        due_date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        due_date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional due date for the task, represented as a string.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Unique identifier for the task.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        priority\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        priority:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Priority level of the task (e.g., high, medium, low).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showStatusDropdown\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showStatusDropdown:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional boolean to toggle the visibility of the status dropdown.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional status of the task (e.g., todo, in progress, done).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subtasks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subtasks:     Subtask[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Subtask[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Array of subtasks associated with the task.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Title of the task.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\n\n\n/**\n * Interface representing a subtask, with optional ID, text description, and completion status.\n */\nexport interface Subtask {\n\n  /** Unique identifier for the subtask. */\n  id?: number;\n\n/** Text description of the subtask. */\n  text: string;\n\n  /** Boolean indicating if the subtask is completed. */\n  completed: boolean;\n}\n\n\n/**\n * Interface representing a task, with optional ID, title, priority, due date, category, and more.\n * Includes subtasks and contacts associated with the task.\n */\nexport interface Task {\n\n  /** Unique identifier for the task. */\n  id?: number;\n\n  /** Title of the task. */\n  title: string;\n\n  /** Optional description of the task. */\n  description?: string;\n\n  /** Priority level of the task (e.g., high, medium, low). */\n  priority: string;\n\n  /** Optional due date for the task, represented as a string. */\n  due_date?: string;\n\n  /** Optional ID of the category associated with the task. */\n  category?: number;\n\n  /** Array of user IDs assigned to the task. */\n  assigned_to: number[];\n\n  /** Array of subtasks associated with the task. */\n  subtasks: Subtask[];\n\n  /** Optional status of the task (e.g., todo, in progress, done). */\n  status?: string; \n\n  /** Array of contact IDs associated with the task. */\n  contacts: number[]; \n\n  /** Optional ID of the user who created the task. */\n  creator?: number; \n\n  /** Optional boolean to toggle the visibility of the status dropdown. */\n  showStatusDropdown?: boolean;\n}\n\n\n/**\n * TaskService manages tasks by providing methods to create, retrieve, update, and delete tasks.\n * It also includes error handling for HTTP requests.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class TaskService {\n\n  /** Base URL for task-related API endpoints. */\n  private baseUrl = environment.apiUrl; \n\n\n    /**\n   * Constructor to inject HttpClient for making HTTP requests.\n   * @param http - HttpClient instance for sending requests to the server.\n   */\n  constructor(private http: HttpClient) {}\n\n\n    /**\n   * Handles errors from HTTP requests, logging the error and providing a generic error message.\n   * @param error - The error response from the HTTP request.\n   * @returns An observable that emits an error message.\n   */\n  private handleError(error: HttpErrorResponse) {\n    if (error.status === 0) {\n      console.error('An error occurred:', error.error); \n    } else {\n      console.error(`Backend returned code ${error.status}, body was: `, error.error); \n    }\n    return throwError('Something bad happened; please try again later.'); \n  }\n\n\n    /**\n   * Retrieves all tasks from the server.\n   * @returns An Observable that emits an array of Task objects.\n   */\n  getTasks(): Observable {\n    return this.http.get(`${this.baseUrl}/tasks/`).pipe(\n      retry(3), \n      catchError(this.handleError), \n    );\n  }\n\n\n    /**\n   * Retrieves a specific task by its ID.\n   * @param id - The ID of the task to retrieve.\n   * @returns An Observable that emits the requested Task object.\n   */\n  getTask(id: number): Observable {\n    return this.http.get(`${this.baseUrl}/tasks/${id}/`).pipe(catchError(this.handleError));\n  }\n\n\n    /**\n   * Adds a new task with a default status of 'todo'.\n   * @param task - The Task object to be added.\n   * @returns An Observable that emits the created Task object.\n   */\n  addTask(task: Task): Observable {\n    task.status = 'todo'; \n    return this.http.post(`${this.baseUrl}/tasks/`, task).pipe(catchError(this.handleError));\n  }\n\n\n    /**\n   * Updates an existing task by its ID, ensuring unique subtasks.\n   * @param id - The ID of the task to update.\n   * @param task - The updated Task object.\n   * @returns An Observable that emits the updated Task object.\n   */\n  updateTask(id: number, task: Task): Observable {\n    const uniqueSubtasks = task.subtasks.filter(\n      (subtask, index, self) =>\n        index === self.findIndex(t => t.id === subtask.id && t.text === subtask.text),\n    );\n\n    const updatedTask = { ...task, subtasks: uniqueSubtasks };\n\n    return this.http\n      .put(`${this.baseUrl}/tasks/${id}/`, updatedTask)\n      .pipe(catchError(this.handleError));\n  }\n\n\n    /**\n   * Deletes a task by its ID.\n   * @param id - The ID of the task to delete.\n   * @returns An Observable that completes when the task is deleted.\n   */\n  deleteTask(id: number): Observable {\n    return this.http.delete(`${this.baseUrl}/tasks/${id}/`).pipe(catchError(this.handleError));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskService.html":{"url":"injectables/TaskService.html","title":"injectable - TaskService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TaskService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/task.service.ts\n        \n\n\n            \n                Description\n            \n            \n                TaskService manages tasks by providing methods to create, retrieve, update, and delete tasks.\nIt also includes error handling for HTTP requests.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTask\n                            \n                            \n                                deleteTask\n                            \n                            \n                                getTask\n                            \n                            \n                                getTasks\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                updateTask\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/task.service.ts:78\n                            \n                        \n\n                \n                    \n                            Constructor to inject HttpClient for making HTTP requests.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nHttpClient instance for sending requests to the server.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addTask\n                        \n                    \n                \n            \n            \n                \naddTask(task: Task)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/task.service.ts:130\n                        \n                    \n\n\n            \n                \n                        Adds a new task with a default status of 'todo'.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                task\n                                            \n                                                            Task\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe Task object to be added.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits the created Task object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTask\n                        \n                    \n                \n            \n            \n                \ndeleteTask(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/task.service.ts:161\n                        \n                    \n\n\n            \n                \n                        Deletes a task by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the task to delete.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that completes when the task is deleted.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTask\n                        \n                    \n                \n            \n            \n                \ngetTask(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/task.service.ts:120\n                        \n                    \n\n\n            \n                \n                        Retrieves a specific task by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the task to retrieve.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits the requested Task object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTasks\n                        \n                    \n                \n            \n            \n                \ngetTasks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/task.service.ts:107\n                        \n                    \n\n\n            \n                \n                        Retrieves all tasks from the server.\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits an array of Task objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/task.service.ts:93\n                        \n                    \n\n\n            \n                \n                        Handles errors from HTTP requests, logging the error and providing a generic error message.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        HttpErrorResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe error response from the HTTP request.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                An observable that emits an error message.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateTask\n                        \n                    \n                \n            \n            \n                \nupdateTask(id: number, task: Task)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/task.service.ts:142\n                        \n                    \n\n\n            \n                \n                        Updates an existing task by its ID, ensuring unique subtasks.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the task to update.\n\n\n                                            \n                                        \n                                        \n                                                task\n                                            \n                                                            Task\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe updated Task object.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits the updated Task object.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.apiUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/services/task.service.ts:78\n                        \n                    \n\n            \n                \n                    Base URL for task-related API endpoints.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\n\n\n/**\n * Interface representing a subtask, with optional ID, text description, and completion status.\n */\nexport interface Subtask {\n\n  /** Unique identifier for the subtask. */\n  id?: number;\n\n/** Text description of the subtask. */\n  text: string;\n\n  /** Boolean indicating if the subtask is completed. */\n  completed: boolean;\n}\n\n\n/**\n * Interface representing a task, with optional ID, title, priority, due date, category, and more.\n * Includes subtasks and contacts associated with the task.\n */\nexport interface Task {\n\n  /** Unique identifier for the task. */\n  id?: number;\n\n  /** Title of the task. */\n  title: string;\n\n  /** Optional description of the task. */\n  description?: string;\n\n  /** Priority level of the task (e.g., high, medium, low). */\n  priority: string;\n\n  /** Optional due date for the task, represented as a string. */\n  due_date?: string;\n\n  /** Optional ID of the category associated with the task. */\n  category?: number;\n\n  /** Array of user IDs assigned to the task. */\n  assigned_to: number[];\n\n  /** Array of subtasks associated with the task. */\n  subtasks: Subtask[];\n\n  /** Optional status of the task (e.g., todo, in progress, done). */\n  status?: string; \n\n  /** Array of contact IDs associated with the task. */\n  contacts: number[]; \n\n  /** Optional ID of the user who created the task. */\n  creator?: number; \n\n  /** Optional boolean to toggle the visibility of the status dropdown. */\n  showStatusDropdown?: boolean;\n}\n\n\n/**\n * TaskService manages tasks by providing methods to create, retrieve, update, and delete tasks.\n * It also includes error handling for HTTP requests.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class TaskService {\n\n  /** Base URL for task-related API endpoints. */\n  private baseUrl = environment.apiUrl; \n\n\n    /**\n   * Constructor to inject HttpClient for making HTTP requests.\n   * @param http - HttpClient instance for sending requests to the server.\n   */\n  constructor(private http: HttpClient) {}\n\n\n    /**\n   * Handles errors from HTTP requests, logging the error and providing a generic error message.\n   * @param error - The error response from the HTTP request.\n   * @returns An observable that emits an error message.\n   */\n  private handleError(error: HttpErrorResponse) {\n    if (error.status === 0) {\n      console.error('An error occurred:', error.error); \n    } else {\n      console.error(`Backend returned code ${error.status}, body was: `, error.error); \n    }\n    return throwError('Something bad happened; please try again later.'); \n  }\n\n\n    /**\n   * Retrieves all tasks from the server.\n   * @returns An Observable that emits an array of Task objects.\n   */\n  getTasks(): Observable {\n    return this.http.get(`${this.baseUrl}/tasks/`).pipe(\n      retry(3), \n      catchError(this.handleError), \n    );\n  }\n\n\n    /**\n   * Retrieves a specific task by its ID.\n   * @param id - The ID of the task to retrieve.\n   * @returns An Observable that emits the requested Task object.\n   */\n  getTask(id: number): Observable {\n    return this.http.get(`${this.baseUrl}/tasks/${id}/`).pipe(catchError(this.handleError));\n  }\n\n\n    /**\n   * Adds a new task with a default status of 'todo'.\n   * @param task - The Task object to be added.\n   * @returns An Observable that emits the created Task object.\n   */\n  addTask(task: Task): Observable {\n    task.status = 'todo'; \n    return this.http.post(`${this.baseUrl}/tasks/`, task).pipe(catchError(this.handleError));\n  }\n\n\n    /**\n   * Updates an existing task by its ID, ensuring unique subtasks.\n   * @param id - The ID of the task to update.\n   * @param task - The updated Task object.\n   * @returns An Observable that emits the updated Task object.\n   */\n  updateTask(id: number, task: Task): Observable {\n    const uniqueSubtasks = task.subtasks.filter(\n      (subtask, index, self) =>\n        index === self.findIndex(t => t.id === subtask.id && t.text === subtask.text),\n    );\n\n    const updatedTask = { ...task, subtasks: uniqueSubtasks };\n\n    return this.http\n      .put(`${this.baseUrl}/tasks/${id}/`, updatedTask)\n      .pipe(catchError(this.handleError));\n  }\n\n\n    /**\n   * Deletes a task by its ID.\n   * @param id - The ID of the task to delete.\n   * @returns An Observable that completes when the task is deleted.\n   */\n  deleteTask(id: number): Observable {\n    return this.http.delete(`${this.baseUrl}/tasks/${id}/`).pipe(catchError(this.handleError));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/assets/models/user.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a user with essential identifying information.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Email address of the user.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique identifier for the user.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Full name of the user.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n\n    /** Unique identifier for the user. */\n  id: number;\n\n  /** Full name of the user. */\n  name: string;\n\n  /** Email address of the user. */\n  email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User-1.html":{"url":"interfaces/User-1.html","title":"interface - User-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            dist/join2.0_angular/assets/models/user.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a user with essential identifying information.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Email address of the user.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique identifier for the user.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Full name of the user.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n\n    /** Unique identifier for the user. */\n  id: number;\n\n  /** Full name of the user. */\n  name: string;\n\n  /** Email address of the user. */\n  email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserRegistrationService.html":{"url":"injectables/UserRegistrationService.html","title":"injectable - UserRegistrationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserRegistrationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n\n            \n                Description\n            \n            \n                UserRegistrationService handles user registration requests to the server.\nIt sends user data to the API and manages error handling during the registration process.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                registrationUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                registerUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.service.ts:17\n                            \n                        \n\n                \n                    \n                            Constructor to inject HttpClient for making HTTP requests.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe HttpClient instance for sending registration data.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleError(error: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:51\n                        \n                    \n\n\n            \n                \n                        Handles errors that occur during the registration process.\nLogs the error to the console and rethrows it for further handling.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe error response object.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                An Observable that emits an error notification.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerUser\n                        \n                    \n                \n            \n            \n                \nregisterUser(userData: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:32\n                        \n                    \n\n\n            \n                \n                        Registers a new user by sending user data to the registration API.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userData\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nObject containing user details: name, email, password, and confirmPassword.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that emits the server's response or an error if the registration fails.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registrationUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://join.server.fabianduerr.com/signup/'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:17\n                        \n                    \n\n            \n                \n                    URL endpoint for user registration.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n\n/**\n * UserRegistrationService handles user registration requests to the server.\n * It sends user data to the API and manages error handling during the registration process.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserRegistrationService {\n\n    /** URL endpoint for user registration. */\n  private registrationUrl = 'https://join.server.fabianduerr.com/signup/';\n\n\n    /**\n   * Constructor to inject HttpClient for making HTTP requests.\n   * @param http - The HttpClient instance for sending registration data.\n   */\n  constructor(private http: HttpClient) {}\n\n\n    /**\n   * Registers a new user by sending user data to the registration API.\n   * @param userData - Object containing user details: name, email, password, and confirmPassword.\n   * @returns An Observable that emits the server's response or an error if the registration fails.\n   */\n  registerUser(userData: {\n    name: string;\n    email: string;\n    password: string;\n    confirmPassword: string;\n  }): Observable {\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    return this.http\n      .post(this.registrationUrl, userData, { headers: headers })\n      .pipe(catchError(this.handleError));\n  }\n\n\n    /**\n   * Handles errors that occur during the registration process.\n   * Logs the error to the console and rethrows it for further handling.\n   * @param error - The error response object.\n   * @returns An Observable that emits an error notification.\n   */\n  private handleError(error: any) {\n    console.error('There was an error in Service!', error);\n    return throwError(error);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user.service.ts\n        \n\n\n            \n                Description\n            \n            \n                UserService manages user data, including fetching and setting the current user.\nIt uses local storage to persist user information and a BehaviorSubject to provide the current user as an observable.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                currentUserSubject\n                            \n                            \n                                    Private\n                                userDetailsUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchCurrentUser\n                            \n                            \n                                getCurrentUser\n                            \n                            \n                                setCurrentUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user.service.ts:21\n                            \n                        \n\n                \n                    \n                            Initializes the service by checking local storage for existing user details.\nIf found, sets them as the current user.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nHttpClient for making HTTP requests.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        fetchCurrentUser\n                        \n                    \n                \n            \n            \n                \nfetchCurrentUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:42\n                        \n                    \n\n\n            \n                \n                        Fetches the current user details from the server using the stored authentication token.\nUpdates the current user in the service if successful.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable emitting the User object or null if the request fails.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentUser\n                        \n                    \n                \n            \n            \n                \ngetCurrentUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:65\n                        \n                    \n\n\n            \n                \n                        Retrieves the current user as an observable.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable emitting the current User object or null if no user is set.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCurrentUser\n                        \n                    \n                \n            \n            \n                \nsetCurrentUser(user: User | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:75\n                        \n                    \n\n\n            \n                \n                        Sets the current user both in the BehaviorSubject and in local storage.\nIf the user is null, it clears the user details from local storage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                        User | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe User object to set as the current user or null to clear.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentUserSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user.service.ts:21\n                        \n                    \n\n            \n                \n                    BehaviorSubject to hold the current user details.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userDetailsUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://join.server.fabianduerr.com/user/details'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user.service.ts:18\n                        \n                    \n\n            \n                \n                    URL to retrieve user details from the server.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of, BehaviorSubject } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { User } from 'src/assets/models/user.model';\n\n\n/**\n * UserService manages user data, including fetching and setting the current user.\n * It uses local storage to persist user information and a BehaviorSubject to provide the current user as an observable.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n\n  /** URL to retrieve user details from the server. */\n  private userDetailsUrl = 'https://join.server.fabianduerr.com/user/details';\n\n  /** BehaviorSubject to hold the current user details. */\n  private currentUserSubject = new BehaviorSubject(null);\n\n\n  /**\n   * Initializes the service by checking local storage for existing user details.\n   * If found, sets them as the current user.\n   * @param http - HttpClient for making HTTP requests.\n   */\n  constructor(private http: HttpClient) {\n    const storedUser = localStorage.getItem('user_details')\n      ? JSON.parse(localStorage.getItem('user_details') || '{}')\n      : null;\n    this.currentUserSubject = new BehaviorSubject(storedUser);\n  }\n\n\n  /**\n   * Fetches the current user details from the server using the stored authentication token.\n   * Updates the current user in the service if successful.\n   * @returns An Observable emitting the User object or null if the request fails.\n   */\n  fetchCurrentUser(): Observable {\n    const token = localStorage.getItem('auth_token') || sessionStorage.getItem('auth_token');\n    if (!token) {\n      console.error('No token found');\n      return of(null); \n    }\n    const headers = new HttpHeaders({ Authorization: `Token ${token}` });\n    return this.http.get(this.userDetailsUrl, { headers: headers }).pipe(\n      tap(user => {\n        this.setCurrentUser(user); \n      }),\n      catchError(error => {\n        console.error('Error fetching user details:', error);\n        return of(null); \n      }),\n    );\n  }\n\n\n  /**\n   * Retrieves the current user as an observable.\n   * @returns An Observable emitting the current User object or null if no user is set.\n   */\n  getCurrentUser(): Observable {\n    return this.currentUserSubject.asObservable();\n  }\n\n\n  /**\n   * Sets the current user both in the BehaviorSubject and in local storage.\n   * If the user is null, it clears the user details from local storage.\n   * @param user - The User object to set as the current user or null to clear.\n   */\n  setCurrentUser(user: User | null): void {\n    this.currentUserSubject.next(user);\n    if (user) {\n      localStorage.setItem('user_details', JSON.stringify(user));\n    } else {\n      localStorage.removeItem('user_details');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                dist/join2.0_angular/assets/models/contact.model.ts\n            \n            interface\n            Contact\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                dist/join2.0_angular/assets/models/user.model.ts\n            \n            interface\n            User\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/add-task/add-task.component.ts\n            \n            component\n            AddTaskComponent\n            \n                97 %\n                (43/44)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/auth.interceptor.ts\n            \n            interceptor\n            AuthInterceptor\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/auth/login.service.ts\n            \n            injectable\n            LoginService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/board-task-overlay/board-task-overlay.component.ts\n            \n            component\n            BoardTaskOverlayComponent\n            \n                90 %\n                (30/33)\n            \n        \n        \n            \n                \n                src/app/board/board.component.ts\n            \n            component\n            BoardComponent\n            \n                100 %\n                (47/47)\n            \n        \n        \n            \n                \n                src/app/contacts/contacts-add/contacts-add.component.ts\n            \n            component\n            ContactsAddComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/contacts/contacts-edit/contacts-edit.component.ts\n            \n            component\n            ContactsEditComponent\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                src/app/contacts/contacts-overview/contacts-overview.component.ts\n            \n            component\n            ContactsOverviewComponent\n            \n                95 %\n                (22/23)\n            \n        \n        \n            \n                \n                src/app/contacts/contacts-view/contacts-view.component.ts\n            \n            component\n            ContactsViewComponent\n            \n                100 %\n                (18/18)\n            \n        \n        \n            \n                \n                src/app/custom-date-parser-formatter.service.ts\n            \n            injectable\n            CustomDateParserFormatter\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/custom-dateparser-formatter.ts\n            \n            injectable\n            CustomDateParserFormatter\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/edit-task/edit-task.component.ts\n            \n            component\n            EditTaskComponent\n            \n                100 %\n                (53/53)\n            \n        \n        \n            \n                \n                src/app/footer-bar/footer-bar.component.ts\n            \n            component\n            FooterBarComponent\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/app/header-bar-mobile/header-bar-mobile.component.ts\n            \n            component\n            HeaderBarMobileComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/imprint/legal-notice/legal-notice.component.ts\n            \n            component\n            LegalNoticeComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/imprint/privacy-policy/privacy-policy.component.ts\n            \n            component\n            PrivacyPolicyComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                100 %\n                (16/16)\n            \n        \n        \n            \n                \n                src/app/reset-password/reset-password.component.ts\n            \n            component\n            ResetPasswordComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/add-contact.service.ts\n            \n            injectable\n            AddContactService\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/services/auth-interceptor.service.ts\n            \n            interceptor\n            AuthInterceptorService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            injectable\n            UserRegistrationService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/services/category.service.ts\n            \n            injectable\n            CategoryService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/services/category.service.ts\n            \n            interface\n            Category\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/services/contact.service.ts\n            \n            injectable\n            ContactService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/services/contacts-overlay-service.service.ts\n            \n            injectable\n            ContactsOverlayService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/services/screen-size.service.ts\n            \n            injectable\n            ScreenSizeService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/services/subtask.service.ts\n            \n            injectable\n            SubtaskService\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/services/subtask.service.ts\n            \n            interface\n            Subtask\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/services/task.service.ts\n            \n            injectable\n            TaskService\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/services/task.service.ts\n            \n            interface\n            Subtask\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/services/task.service.ts\n            \n            interface\n            Task\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/app/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/sidebar/sidebar.component.ts\n            \n            component\n            SidebarComponent\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                src/app/sign-up/sign-up.component.ts\n            \n            component\n            SignUpComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/summary/summary.component.ts\n            \n            component\n            SummaryComponent\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                src/assets/models/contact.model.ts\n            \n            interface\n            Contact\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/assets/models/user.model.ts\n            \n            interface\n            User\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                        src/environments/environment.development.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/environments/environment.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^16.1.0\n        \n            @angular/cdk : ^16.2.0\n        \n            @angular/common : ^16.1.0\n        \n            @angular/compiler : ^16.1.0\n        \n            @angular/core : ^16.1.0\n        \n            @angular/forms : ^16.1.0\n        \n            @angular/platform-browser : ^16.1.0\n        \n            @angular/platform-browser-dynamic : ^16.1.0\n        \n            @angular/router : ^16.1.0\n        \n            @fortawesome/fontawesome-free : ^6.5.1\n        \n            @ng-bootstrap/ng-bootstrap : ^15.1.2\n        \n            @popperjs/core : ^2.11.6\n        \n            bootstrap : ^5.3.3\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.13.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nJoin20Angular\nThis project was generated with Angular CLI version 16.1.2.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://http://127.0.0.1:4200//. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAddTaskComponent\n\nAddTaskComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddTaskComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBoardComponent\n\nBoardComponent\n\nAppModule -->\n\nBoardComponent->AppModule\n\n\n\n\n\nBoardTaskOverlayComponent\n\nBoardTaskOverlayComponent\n\nAppModule -->\n\nBoardTaskOverlayComponent->AppModule\n\n\n\n\n\nContactsAddComponent\n\nContactsAddComponent\n\nAppModule -->\n\nContactsAddComponent->AppModule\n\n\n\n\n\nContactsEditComponent\n\nContactsEditComponent\n\nAppModule -->\n\nContactsEditComponent->AppModule\n\n\n\n\n\nContactsOverviewComponent\n\nContactsOverviewComponent\n\nAppModule -->\n\nContactsOverviewComponent->AppModule\n\n\n\n\n\nContactsViewComponent\n\nContactsViewComponent\n\nAppModule -->\n\nContactsViewComponent->AppModule\n\n\n\n\n\nEditTaskComponent\n\nEditTaskComponent\n\nAppModule -->\n\nEditTaskComponent->AppModule\n\n\n\n\n\nFooterBarComponent\n\nFooterBarComponent\n\nAppModule -->\n\nFooterBarComponent->AppModule\n\n\n\n\n\nHeaderBarMobileComponent\n\nHeaderBarMobileComponent\n\nAppModule -->\n\nHeaderBarMobileComponent->AppModule\n\n\n\n\n\nLegalNoticeComponent\n\nLegalNoticeComponent\n\nAppModule -->\n\nLegalNoticeComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nPrivacyPolicyComponent\n\nPrivacyPolicyComponent\n\nAppModule -->\n\nPrivacyPolicyComponent->AppModule\n\n\n\n\n\nResetPasswordComponent\n\nResetPasswordComponent\n\nAppModule -->\n\nResetPasswordComponent->AppModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nAppModule -->\n\nSidebarComponent->AppModule\n\n\n\n\n\nSignUpComponent\n\nSignUpComponent\n\nAppModule -->\n\nSignUpComponent->AppModule\n\n\n\n\n\nSummaryComponent\n\nSummaryComponent\n\nAppModule -->\n\nSummaryComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\n\n\nUserRegistrationService\n\nUserRegistrationService\n\nAppModule -->\n\nUserRegistrationService->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nAppModule -->\n\nUserService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    18 Components\n                \n            \n        \n        \n            \n                \n                    \n                    12 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    8 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        10 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.development.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.development.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\n  /** Indicates whether the application is running in production mode. */\n  production: false,\n\n  /** Base URL for the API endpoint used by the application in development. */\n  apiUrl: 'https://join.server.fabianduerr.com',\n}\n                    \n                \n\n            \n                \n                    Environment configuration for the development environment.\nContains settings specific to the development build of the application.\n\n                \n            \n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\n  /** Flag indicating whether the build is for production. */\n  production: false,\n\n  /** Base URL for the API used by the application in development. */\n  apiUrl: 'https://join.server.fabianduerr.com',\n}\n                    \n                \n\n            \n                \n                    Environment configuration for the development environment.\nContains settings specific to the development build of the application.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
