var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/AddContactService.html",[0,0.403,1,1.918]],["body/injectables/AddContactService.html",[0,0.519,1,3.08,2,1.211,3,0.186,4,0.162,5,0.162,6,3.842,7,2.822,8,1.143,9,2.885,10,2.472,11,2.498,12,2.264,13,2.472,14,0.924,15,1.07,16,5.75,17,2.872,18,2.872,19,1.578,20,2.885,21,3.595,22,1.723,23,3.935,24,2.306,25,0.211,26,0.561,27,1.143,28,3.63,29,4.616,30,5.75,31,3.487,32,4.616,33,5.75,34,4.616,35,0.97,36,1.773,37,2.545,38,1.124,39,4.616,40,1.133,41,2.232,42,2.3,43,1.986,44,1.104,45,0.023,46,0.526,47,0.508,48,0.91,49,2.157,50,4.616,51,3.31,52,2.885,53,1.572,54,2.663,55,4.953,56,2.163,57,3.915,58,3.928,59,3.317,60,1.034,61,1.975,62,2.33,63,2.432,64,3.153,65,3.31,66,3.487,67,3.78,68,2.885,69,3.239,70,4.278,71,4.616,72,1.832,73,3.31,74,2.306,75,2.26,76,4.549,77,4.616,78,3.31,79,3.487,80,3.31,81,1.792,82,2.522,83,4.616,84,3.31,85,2.157,86,2.472,87,2.306,88,0.532,89,0.642,90,0.642,91,3.935,92,2.663,93,1.594,94,3.153,95,0.526,96,0.262,97,1.079,98,4.732,99,1.2,100,1.451,101,2.501,102,1.365,103,1.653,104,1.02,105,0.964,106,0.186,107,0.288,108,1.143,109,1.02,110,1.452,111,4.216,112,6.048,113,1.323,114,3.31,115,3.78,116,2.306,117,3.489,118,2.261,119,1.761,120,5.156,121,3.31,122,2.885,123,2.069,124,2.261,125,1.143,126,2.822,127,3.31,128,4.531,129,3.31,130,2.501,131,3.31,132,2.501,133,0.014,134,0.014]],["title/components/AppComponent.html",[135,0.435,136,0.985]],["body/components/AppComponent.html",[3,0.271,4,0.236,5,0.236,15,1.115,19,1.633,22,1.323,25,0.306,26,0.717,38,0.825,45,0.022,46,0.513,47,0.38,88,0.773,89,0.934,90,0.934,95,0.419,96,0.38,105,1.718,106,0.271,107,0.419,133,0.018,134,0.018,135,0.775,136,1.83,137,1.818,138,1.662,139,1.662,140,1.662,141,1.662,142,4.102,143,1.662,144,2.559,145,2.416,146,2.038,147,6.381,148,2.038,149,5.899,150,4.358,151,5.899,152,4.811,153,1.482,154,2.038,155,2.038,156,1.662,157,2.298,158,1.662,159,1.323,160,2.038,161,1.662,162,1.323,163,1.662,164,1.401,165,1.482,166,1.181,167,1.662,168,1.323,169,1.662,170,1.323,171,1.662,172,1.25,173,1.662,174,1.25,175,1.662,176,1.401,177,1.569,178,1.323,179,1.569,180,1.662,181,1.323,182,1.482,183,1.662,184,1.25,185,1.569,186,1.662,187,1.25,188,1.662,189,1.25,190,1.569,191,1.662,192,1.323,193,1.482,194,1.662,195,1.323,196,1.662,197,1.25,198,1.482,199,1.662,200,1.25,201,1.569,202,1.662,203,1.662]],["title/modules/AppModule.html",[204,2.446,205,2.446]],["body/modules/AppModule.html",[3,0.209,4,0.182,5,0.182,15,0.861,22,1.022,45,0.023,95,0.642,96,0.294,97,1.212,106,0.209,107,0.323,133,0.015,134,0.015,136,1.928,145,1.212,153,1.145,159,1.785,162,1.785,164,1.889,165,1.145,166,1.227,168,1.785,170,1.785,172,1.686,174,1.686,176,1.889,177,1.212,178,1.785,179,1.212,181,1.785,182,1.539,184,1.686,187,1.686,189,1.686,192,1.785,193,1.539,195,1.785,197,1.686,198,1.145,200,1.686,204,2.538,205,5.098,206,2.323,207,2.538,208,4.813,209,3.938,210,4.813,211,2.807,212,3.168,213,3.168,214,3.168,215,3.168,216,3.168,217,4.055,218,4.055,219,3.743,220,3.24,221,4.26,222,1.99,223,3.716,224,4.26,225,4.26,226,4.996,227,3.168,228,2.807,229,4.996,230,3.413,231,3.716,232,3.716,233,3.168,234,2.538,235,3.168,236,2.807,237,3.716,238,4.996,239,2.807,240,3.716,241,3.716,242,3.168,243,2.807,244,3.716,245,2.807,246,4.26,247,4.996,248,3.775,249,3.123,250,3.413,251,4.996,252,2.883,253,3.168,254,2.807,255,3.716,256,4.996,257,4.996,258,2.538,259,3.168,260,5.147,261,2.538,262,3.168,263,2.538,264,3.168,265,2.807,266,3.716,267,2.807,268,3.716,269,3.168,270,2.538,271,2.807,272,3.716,273,3.168,274,3.168,275,3.716,276,3.168,277,4.996,278,3.716,279,3.716,280,3.168,281,2.538,282,3.168,283,3.168,284,2.538,285,3.168,286,4.26,287,4.996,288,3.716,289,1.532]],["title/modules/AppRoutingModule.html",[204,2.446,217,2.238]],["body/modules/AppRoutingModule.html",[3,0.269,4,0.235,5,0.235,15,1.109,19,1.444,45,0.023,95,0.632,96,0.378,106,0.269,107,0.417,110,1.109,133,0.018,134,0.018,135,0.869,159,1.618,162,1.618,165,1.475,172,1.528,174,1.528,184,1.528,185,1.561,187,1.528,189,1.528,190,1.561,197,1.528,198,1.475,200,1.528,201,1.561,206,2.992,211,3.616,217,3.676,224,4.08,225,5.014,233,4.08,234,3.269,235,4.08,242,4.08,245,3.616,246,4.08,260,5.014,261,3.269,262,4.08,263,3.269,264,4.08,270,4.916,273,4.08,280,4.08,281,3.269,282,4.08,283,4.08,284,3.269,285,4.08,290,4.786,291,4.786,292,5.881,293,4.348,294,1.653,295,4.739,296,4.786,297,4.786,298,2.937,299,4.786,300,3.616,301,3.616,302,5.811,303,4.08,304,4.786,305,2.761,306,2.761,307,4.786]],["title/guards/AuthGuard.html",[295,2.446,308,2.705]],["body/guards/AuthGuard.html",[0,0.687,3,0.286,4,0.249,5,0.249,14,0.981,25,0.324,35,0.928,38,1.046,44,1.114,45,0.023,46,0.531,47,0.482,48,0.918,60,0.765,61,1.799,69,3.269,95,0.569,96,0.402,99,1.322,104,1.567,105,1.481,106,0.286,107,0.443,109,1.567,110,1.179,113,1.184,123,3.18,124,3.475,133,0.018,134,0.018,289,2.097,294,1.757,295,4.168,298,2.541,302,5.911,309,5.087,310,4.337,311,3.18,312,2.733,313,5.087,314,5.087,315,6.779,316,4.939,317,6.779,318,5.087,319,3.521,320,6.103,321,1.586,322,6.538,323,2.097,324,5.087,325,2.231,326,4.337,327,1.975]],["title/interceptors/AuthInterceptor.html",[218,2.238,328,2.446]],["body/interceptors/AuthInterceptor.html",[0,0.672,3,0.276,4,0.241,5,0.241,14,0.96,22,1.771,24,3.215,25,0.312,35,1.175,38,1.024,43,1.695,44,0.896,45,0.023,46,0.427,47,0.388,48,0.738,60,0.738,61,1.771,67,4.187,69,3.588,82,2.152,93,1.695,95,0.56,96,0.388,97,1.601,99,1.276,106,0.276,107,0.427,110,1.492,113,1.249,118,4.079,123,3.068,124,3.352,133,0.018,134,0.018,218,3.733,298,2.452,301,3.708,323,2.024,329,4.185,330,4.185,331,5.092,332,4.908,333,5.972,334,5.711,335,3.215,336,5.711,337,4.908,338,4.908,339,4.185,340,5.092,341,5.972,342,4.908,343,4.908,344,4.185,345,4.185,346,4.908,347,4.908,348,4.908,349,5.092,350,4.863,351,5.972,352,4.908,353,2.152,354,4.185,355,3.708,356,4.185,357,6.437,358,4.908,359,4.908,360,4.185,361,4.908,362,4.908,363,4.185,364,4.908,365,4.908]],["title/interceptors/AuthInterceptorService.html",[328,2.446,366,2.705]],["body/interceptors/AuthInterceptorService.html",[0,0.62,3,0.243,4,0.212,5,0.212,8,1.108,14,0.886,15,1.483,21,3.445,22,1.516,24,3.302,25,0.275,35,1.108,38,0.945,40,1.353,42,2.403,43,2.21,44,1.006,45,0.023,46,0.48,47,0.436,48,0.829,60,0.829,61,1.819,67,4.295,69,3.793,95,0.557,96,0.341,97,1.407,99,1.121,100,1.892,103,2.753,104,1.329,105,1.256,106,0.243,107,0.376,108,1.108,109,1.329,110,1,111,3.445,113,1.069,119,1.604,133,0.017,134,0.017,294,1.49,298,3.196,311,2.697,312,2.767,323,1.779,325,2.417,328,3.764,329,3.679,331,4.699,334,5.455,335,3.377,336,5.455,339,3.679,340,4.699,363,3.679,366,4.834,367,5.177,368,3.679,369,6.398,370,4.699,371,1.698,372,6.76,373,6.61,374,4.315,375,2.272,376,4.164,377,4.699,378,2.417,379,3.764,380,4.699,381,5.511,382,4.315,383,3.999,384,2.017,385,3.427,386,4.699,387,5.511,388,5.511,389,5.511,390,5.511,391,5.511,392,5.511,393,5.511,394,2.952,395,5.511,396,3.764,397,4.315,398,4.315,399,4.315,400,4.315,401,4.699,402,2.697,403,4.315,404,3.679]],["title/interfaces/Category.html",[405,0.879,406,1.918]],["body/interfaces/Category.html",[0,0.659,3,0.267,4,0.233,5,0.233,8,0.867,12,1.641,13,2.545,25,0.302,26,0.712,27,0.867,35,0.867,37,2.571,40,1.166,41,1.845,42,2.192,43,2.022,45,0.023,46,0.617,47,0.501,49,2.221,60,0.715,61,1.822,62,2.022,64,2.736,72,1.746,75,2.259,81,1.845,82,2.567,88,1.139,93,1.641,95,0.577,96,0.375,97,1.55,99,1.235,104,1.464,105,1.383,106,0.329,107,0.414,108,0.867,109,1.464,113,0.922,133,0.018,134,0.018,384,1.739,405,1.166,406,3.888,407,2.221,408,3.59,409,4.423,410,4.14,411,2.184,412,3.66,413,3.136,414,2.924,415,2.221,416,2.545,417,3.999,418,3.59,419,5.41,420,2.143,421,2.97,422,2.97,423,4.051,424,2.741,425,2.373,426,2.545,427,4.051,428,4.051]],["title/injectables/CategoryService.html",[0,0.403,417,2.446]],["body/injectables/CategoryService.html",[0,0.646,2,1.685,3,0.259,4,0.226,5,0.226,8,1.048,12,1.983,13,3.075,14,0.923,25,0.293,26,0.698,27,1.142,35,1.142,36,2.466,37,2.736,38,1.072,40,1.409,41,2.229,42,2.328,43,2.262,44,0.84,45,0.023,46,0.57,47,0.364,48,0.692,49,2.683,60,0.864,61,1.918,62,2.262,64,3.062,72,1.267,75,1.873,81,2.229,82,2.872,88,1.006,89,0.893,90,0.893,93,1.983,95,0.57,96,0.364,97,1.502,99,1.197,104,1.419,105,1.34,106,0.323,107,0.401,108,0.84,109,1.419,113,0.893,133,0.017,134,0.017,384,2.101,405,1.13,406,3.806,408,3.478,409,3.478,410,3.589,411,1.928,412,2.878,413,2.466,414,2.3,415,2.152,416,2.466,417,4.474,418,4.338,419,5.86,420,2.397,421,3.589,422,3.911,423,4.895,424,3.312,425,2.868,426,3.075,427,5.585,428,3.925,429,5.741,430,4.604]],["title/interfaces/Contact.html",[11,1.237,405,0.879]],["body/interfaces/Contact.html",[3,0.301,4,0.263,5,0.263,11,2.174,25,0.341,26,0.765,45,0.022,46,0.6,47,0.563,72,1.839,75,2.249,88,1.192,106,0.301,133,0.019,134,0.019,405,1.316,407,2.505,411,2.125,431,4.57,432,2.843,433,3.445,434,4.311]],["title/interfaces/Contact-1.html",[11,1.035,405,0.736,435,1.236]],["body/interfaces/Contact-1.html",[3,0.301,4,0.263,5,0.263,11,2.174,25,0.341,26,0.765,45,0.022,46,0.6,47,0.563,72,1.839,75,2.249,88,1.192,106,0.301,133,0.019,134,0.019,405,1.316,407,2.505,411,2.125,432,2.843,433,3.445,434,4.311,436,4.57]],["title/injectables/ContactService.html",[0,0.403,437,2.705]],["body/injectables/ContactService.html",[0,0.65,2,1.702,3,0.262,4,0.228,5,0.228,8,1.054,9,3.611,10,3.094,11,2.565,14,1.057,25,0.296,26,0.702,27,1.147,38,1.077,44,0.849,45,0.023,46,0.405,47,0.368,48,0.699,53,1.502,56,2.27,60,0.945,61,1.922,62,1.995,81,2.243,89,0.902,90,0.902,95,0.547,96,0.368,99,1.209,104,1.433,105,1.354,106,0.262,107,0.405,108,0.849,113,0.902,132,4.365,133,0.017,134,0.017,269,3.965,270,3.176,316,4.365,353,2.533,437,4.966,438,3.965,439,6.89,440,5.334,441,3.611,442,4.307,443,3.442,444,4.966,445,6.76,446,6.574,447,5.777,448,4.65,449,2.7,450,5.777,451,4.65,452,3.094,453,1.995,454,4.926,455,4.65,456,4.748,457,4.926,458,3.611,459,3.176,460,2.683,461,4.65,462,4.65]],["title/components/ContactsAddComponent.html",[135,0.435,168,0.985]],["body/components/ContactsAddComponent.html",[1,3.083,3,0.131,4,0.114,5,0.114,6,1.345,8,0.652,11,2.414,12,1.91,14,0.574,15,1.411,19,1.626,22,0.641,25,0.309,26,0.434,27,0.652,35,0.888,38,1.018,40,0.876,44,0.425,45,0.023,46,0.53,47,0.384,48,0.351,53,1.438,54,2.06,55,3.279,56,0.805,59,2.06,60,0.732,62,1.91,63,0.905,72,1.338,88,0.782,89,0.693,90,0.944,95,0.378,96,0.184,106,0.131,107,0.203,108,0.652,110,1.127,113,0.693,118,3.581,119,1.416,125,1.988,133,0.011,134,0.011,135,0.74,136,0.641,137,1.1,138,0.805,139,0.805,140,0.805,141,0.805,143,0.805,144,2.365,145,2.233,146,1.233,148,1.233,153,0.718,154,1.233,155,1.233,156,0.805,157,1.68,158,0.805,159,0.641,160,1.233,161,0.805,162,0.641,163,0.805,164,0.679,165,0.718,166,0.572,167,0.805,168,1.338,169,0.805,170,0.641,171,0.805,172,0.606,173,0.805,174,0.606,175,0.805,176,0.679,177,0.76,178,0.641,179,0.76,180,0.805,181,0.641,182,0.718,183,0.805,184,0.606,185,0.76,186,0.805,187,0.606,188,0.805,189,0.606,190,0.76,191,0.805,192,0.641,193,0.718,194,0.805,195,0.641,196,0.805,197,0.606,198,0.718,199,0.805,200,0.606,201,0.76,202,0.805,203,0.805,265,4.6,289,0.961,294,0.805,312,2.412,321,0.928,327,1.386,335,1.164,375,2.005,378,1.566,394,2.963,411,2.098,432,2.448,434,3.712,435,0.961,453,1.233,463,3.806,464,1.987,465,1.566,466,4.487,467,3.044,468,3.322,469,3.712,470,3.457,471,4.179,472,4.34,473,3.57,474,4.34,475,4.863,476,4.863,477,4.863,478,2.697,479,3.961,480,3.7,481,1.987,482,3.57,483,2.06,484,2.232,485,1.472,486,3.961,487,3.674,488,2.331,489,3.044,490,2.331,491,3.57,492,2.331,493,3.04,494,4.863,495,5.531,496,5.757,497,2.439,498,3.57,499,3.57,500,2.331,501,2.697,502,2.67,503,3.044,504,2.331,505,2.697,506,1.307,507,2.331,508,2.439,509,3.57,510,3.279,511,1.592,512,3.57,513,2.331,514,2.331,515,2.331,516,2.331,517,1.761,518,3.044,519,1.987,520,1.761,521,3.57,522,4.34,523,1.888,524,3.57,525,2.697,526,2.331,527,2.331,528,2.331,529,1.68,530,1.457,531,2.232,532,2.697,533,2.697,534,5.531,535,3.322,536,4.863,537,4.147,538,2.697,539,3.57,540,3.57,541,2.06,542,2.06,543,2.331,544,2.676,545,2.426,546,2.364,547,2.562,548,2.462,549,1.089,550,2.592,551,1.566,552,2.592,553,1.987,554,1.987,555,1.987,556,1.457,557,2.168,558,1.457,559,3.7,560,1.912,561,2.439,562,1.022,563,2.753,564,2.643,565,3.932,566,1.912,567,2.846,568,2.028,569,2.964,570,2.331,571,3.7,572,1.457,573,1.386,574,2.162,575,2.644,576,2.571,577,2.364,578,2.364,579,2.52,580,1.912,581,2.235,582,1.789,583,1.685,584,3.044,585,1.669,586,1.386,587,1.386,588,3.044,589,2.364,590,2.324,591,1.903,592,0.961,593,1.592,594,1.669,595,3.044,596,1.472,597,1.783,598,1.457,599,1.457,600,1.386,601,4.147,602,2.964,603,2.235,604,4.147,605,1.987,606,3.7,607,3.674,608,1.987,609,1.987,610,2.964,611,1.761,612,3.778,613,2.964,614,2.964,615,1.987,616,1.592,617,1.987,618,1.987,619,2.439,620,1.987,621,1.789,622,1.903,623,3.044,624,1.022,625,1.457,626,1.987,627,1.164,628,1.761,629,1.592,630,2.232,631,1.089,632,1.761,633,1.164,634,1.457,635,1.761,636,1.761,637,1.457,638,1.457,639,3.57,640,3.57,641,1.789,642,1.566,643,1.903,644,1.987,645,2.697,646,1.761,647,1.248,648,1.248,649,3.57,650,1.783,651,1.164,652,3.57,653,2.331,654,2.331,655,2.331,656,1.987,657,1.089,658,1.089,659,1.022,660,1.345,661,1.987,662,1.592]],["title/components/ContactsEditComponent.html",[135,0.435,170,0.985]],["body/components/ContactsEditComponent.html",[1,3.129,3,0.125,4,0.109,5,0.109,6,1.279,8,0.864,10,2.537,11,2.492,12,2.155,14,0.552,15,0.514,17,2.1,18,2.366,19,1.532,22,0.61,25,0.268,26,0.417,27,0.767,31,3.578,35,0.864,38,1.07,40,0.843,44,1.032,45,0.023,46,0.588,47,0.447,48,0.632,53,0.893,54,3.127,55,2.595,57,2.147,58,3.702,59,2.732,60,0.85,62,1.872,72,0.945,74,1.716,75,2.067,76,3.862,82,1.506,87,1.716,88,0.824,89,0.666,90,0.919,95,0.446,96,0.175,106,0.125,107,0.193,108,0.935,110,0.514,113,0.666,119,1.646,125,1.953,130,2.595,132,2.595,133,0.01,134,0.01,135,0.758,136,0.61,137,1.058,138,0.766,139,0.766,140,0.766,141,0.766,143,0.766,144,2.347,145,2.216,146,1.186,148,1.186,153,0.683,154,1.186,155,1.186,156,0.766,157,1.636,158,0.766,159,0.61,160,1.186,161,0.766,162,0.61,163,0.766,164,0.645,165,0.683,166,0.544,167,0.766,168,0.61,169,0.766,170,1.303,171,0.766,172,0.576,173,0.766,174,0.576,175,0.766,176,0.645,177,2.035,178,0.61,179,0.723,180,0.766,181,0.61,182,0.683,183,0.766,184,0.576,185,0.723,186,0.766,187,0.576,188,0.766,189,0.576,190,0.723,191,0.766,192,0.61,193,0.683,194,0.766,195,0.61,196,0.766,197,0.576,198,0.683,199,0.766,200,0.576,201,0.723,202,0.766,203,0.766,230,1.514,267,4.787,294,0.766,312,2.379,319,3.262,321,0.893,323,1.416,335,2.1,350,1.675,360,1.89,375,1.952,377,2.928,378,1.506,394,3.129,401,1.89,411,1.923,421,2.147,432,1.952,433,2.824,434,2.96,440,4.095,444,2.595,449,2.395,453,2.072,459,1.514,460,1.981,463,3.961,466,3.578,468,2.346,469,2.96,471,3.578,478,2.595,479,3.871,483,1.981,485,2.409,486,3.871,487,3.578,489,2.928,493,2.147,501,2.595,502,2.077,508,2.346,510,3.177,511,1.514,518,1.89,523,0.86,529,1.872,530,1.386,537,1.89,544,2.647,545,2.377,546,2.268,547,2.331,548,2.377,549,1.036,550,2.492,551,1.506,552,2.521,553,1.89,554,1.89,555,1.89,556,1.386,557,1.716,558,1.386,559,2.928,560,1.84,561,2.346,562,0.972,563,2.612,564,2.409,565,3.5,566,1.84,567,2.876,568,2.214,569,3.235,571,2.928,572,1.386,573,1.333,574,1.952,575,2.568,576,2.492,577,2.268,578,2.268,579,2.46,580,1.84,581,1.632,582,1.416,583,1.632,584,1.89,586,0.86,587,0.86,588,2.928,589,2.268,590,2.252,591,1.844,592,0.914,593,1.514,594,1.605,595,2.928,596,1.734,597,2.1,598,1.386,599,1.386,600,0.86,601,3.585,602,2.346,603,2.195,604,4.038,605,2.928,606,2.928,607,1.675,608,1.89,609,1.89,610,2.872,611,1.675,612,3.702,613,2.872,614,2.872,615,1.89,616,1.514,617,1.89,618,1.89,619,1.514,620,1.89,621,1.416,622,1.506,623,2.928,624,1.506,625,2.147,626,1.89,627,1.107,628,1.675,629,1.514,630,1.386,631,1.036,632,1.675,633,1.107,634,1.386,635,1.675,636,1.675,637,1.386,638,1.386,641,1.416,642,1.506,643,1.844,644,1.89,645,3.177,646,1.675,657,1.036,658,1.036,659,0.972,660,1.279,661,1.89,662,1.514,663,1.89,664,2.214,665,2.595,666,2.252,667,4.205,668,3.435,669,4.736,670,2.595,671,4.736,672,2.537,673,2.928,674,2.928,675,3.585,676,1.89,677,4.621,678,3.435,679,2.216,680,3.578,681,2.216,682,2.216,683,2.928,684,2.216,685,2.595,686,1.605,687,2.595,688,2.872,689,2.216,690,2.928,691,2.216,692,2.595,693,3.435,694,2.595,695,2.216,696,1.716,697,2.346,698,1.716,699,3.435,700,4.736,701,2.216,702,1.981,703,3.435,704,2.216,705,3.435,706,2.216,707,2.216,708,2.216,709,2.928,710,2.216,711,1.89,712,2.928,713,2.216,714,1.89,715,1.89,716,1.89,717,1.89,718,3.585,719,2.216,720,2.216,721,2.216,722,2.216,723,2.216,724,1.89,725,2.216,726,1.675,727,2.216,728,2.216,729,1.386,730,2.216,731,1.89,732,3.435,733,3.435,734,2.216,735,3.435,736,2.216,737,1.675,738,2.216,739,1.675,740,2.216,741,2.216,742,2.216]],["title/injectables/ContactsOverlayService.html",[0,0.403,743,2.238]],["body/injectables/ContactsOverlayService.html",[0,0.641,2,1.665,3,0.256,4,0.223,5,0.223,8,1.04,14,1.048,19,1.682,25,0.289,26,0.693,27,1.136,38,1.118,44,0.83,45,0.023,46,0.396,47,0.36,48,0.684,53,1.481,60,0.936,61,1.568,81,2.212,85,2.664,89,1.106,90,1.106,95,0.496,96,0.36,99,1.182,104,1.402,105,1.324,106,0.256,107,0.396,108,0.83,113,0.883,133,0.017,134,0.017,137,1.756,316,5.312,321,1.843,353,2.499,441,3.562,442,3.562,443,3.423,452,3.052,453,1.968,456,4.701,457,4.859,465,2.499,506,2.086,743,4.077,744,4.587,745,4.261,746,3.879,747,3.208,748,2.846,749,6.222,750,6.222,751,6.522,752,5.699,753,4.549,754,3.288,755,5.699,756,4.549,757,4.305,758,4.859,759,5.699,760,5.699,761,4.549,762,3.892,763,5.699,764,5.699,765,5.699,766,4.549,767,4.549,768,4.549]],["title/components/ContactsOverviewComponent.html",[135,0.435,172,0.931]],["body/components/ContactsOverviewComponent.html",[1,2.763,3,0.099,4,0.086,5,0.086,6,1.012,8,1.014,10,2.446,11,2.512,12,0.985,14,0.458,15,1.058,19,1.762,22,0.482,23,4.173,25,0.112,26,0.504,27,0.658,35,0.758,38,1.134,40,0.7,44,0.981,45,0.023,46,0.576,47,0.498,48,0.809,52,1.783,53,1.079,56,1.69,57,1.783,58,2.835,60,0.975,68,1.783,72,1.693,75,2.097,76,4.141,82,1.82,88,0.918,89,0.95,90,0.95,95,0.426,96,0.139,106,0.099,107,0.153,108,1.067,110,1.246,113,1.001,116,0.876,118,1.948,119,1.049,125,1.245,133,0.009,134,0.009,135,0.627,136,0.482,137,0.879,138,0.606,139,0.606,140,0.606,141,0.606,143,0.606,144,2.256,145,2.13,146,0.985,148,0.985,153,0.54,154,0.985,155,0.985,156,0.606,157,1.434,158,0.606,159,0.482,160,0.985,161,0.606,162,0.482,163,0.606,164,0.511,165,0.54,166,0.431,167,0.606,168,0.482,169,0.606,170,0.482,171,0.606,172,1.079,173,0.606,174,0.456,175,0.606,176,0.511,177,0.572,178,0.482,179,0.572,180,0.606,181,0.482,182,0.54,183,0.606,184,0.456,185,0.572,186,0.606,187,0.456,188,0.606,189,0.456,190,0.572,191,0.606,192,0.482,193,0.54,194,0.606,195,0.991,196,0.606,197,0.456,198,0.54,199,0.606,200,0.456,201,0.572,202,0.606,203,0.606,263,4.546,289,1.486,294,0.606,300,2.154,312,2.218,319,1.645,321,1.62,323,1.176,325,1.25,327,1.611,335,0.876,355,4.504,375,1.176,378,1.25,379,1.948,383,2.595,384,1.044,411,1.943,425,2.685,433,2.92,435,0.723,449,2.598,452,1.527,453,2.256,458,1.783,459,1.198,460,1.645,463,4.161,465,1.25,469,1.783,470,2.595,480,3.072,481,1.495,483,1.645,485,2.41,493,1.783,502,2.003,506,1.044,511,1.198,523,0.681,525,1.325,532,2.154,533,2.154,544,1.176,546,2.087,547,2.126,548,2.034,549,1.333,550,2.158,551,0.769,552,2.002,560,1.527,562,1.58,563,2.216,564,1.711,566,0.939,567,1.25,573,1.107,574,0.723,575,2.61,576,2.087,577,1.611,578,1.611,579,2.002,580,0.939,581,1.611,582,2.458,583,2.087,585,1.684,586,1.399,587,1.399,589,2.218,590,0.939,591,1.25,592,1.176,594,1.94,596,2.018,597,3.114,598,1.096,599,1.096,600,0.681,602,1.198,603,1.399,621,0.723,622,0.769,631,1.333,641,1.176,642,2.563,643,1.25,647,0.939,648,0.939,651,2.445,657,0.82,658,0.82,659,0.769,660,1.012,664,2.786,666,1.93,670,2.154,672,2.223,683,2.431,686,2.287,687,2.154,688,3.796,692,3.136,696,2.073,697,2.461,698,2.073,726,2.723,729,1.096,743,3.654,744,1.198,745,3.86,747,2.659,757,3.136,769,1.495,770,2.154,771,2.595,772,4.894,773,5.712,774,3.603,775,2.852,776,3.072,777,3.603,778,4.567,779,3.894,780,3.603,781,3.603,782,4.151,783,2.852,784,4.151,785,2.852,786,2.852,787,2.852,788,4.151,789,4.151,790,2.852,791,2.852,792,4.151,793,4.151,794,3.671,795,2.852,796,2.852,797,1.25,798,2.852,799,1.754,800,4.581,801,2.852,802,1.754,803,2.431,804,2.835,805,4.151,806,2.852,807,3.072,808,2.431,809,1.754,810,2.852,811,6.153,812,2.852,813,1.754,814,4.151,815,4.151,816,2.431,817,4.894,818,2.852,819,1.754,820,5.557,821,2.431,822,4.173,823,2.852,824,1.754,825,3.539,826,4.894,827,4.151,828,2.835,829,1.948,830,2.852,831,1.754,832,2.852,833,1.754,834,2.852,835,2.154,836,1.754,837,1.754,838,1.645,839,1.948,840,2.852,841,2.852,842,1.754,843,2.431,844,2.852,845,1.754,846,3.539,847,2.852,848,2.852,849,2.852,850,1.754,851,2.852,852,2.852,853,1.754,854,1.754,855,1.754,856,2.154,857,1.495,858,1.754,859,2.431,860,1.754,861,2.852,862,2.431,863,1.754,864,1.948,865,1.754,866,1.325,867,1.754,868,1.495,869,1.325,870,1.754,871,3.603,872,1.754,873,2.852,874,1.754,875,1.754,876,3.603,877,1.754,878,1.754,879,4.151,880,1.754,881,1.754,882,1.754,883,1.754,884,1.754,885,1.754,886,1.754,887,2.852,888,1.754,889,1.754,890,1.754,891,1.754,892,1.754,893,1.754,894,2.852,895,1.754,896,1.754,897,1.754,898,1.754,899,1.754,900,1.495,901,1.754,902,1.754,903,2.852,904,2.852,905,2.852,906,1.754,907,1.754,908,1.754,909,1.754,910,1.754,911,2.852,912,2.852,913,2.852,914,1.754,915,2.253,916,3.603,917,1.325,918,1.096,919,2.834,920,2.852,921,1.527,922,1.495,923,1.754,924,1.783,925,1.754,926,2.852,927,1.754,928,1.754,929,1.754,930,1.754,931,2.852,932,1.754,933,1.754,934,1.495,935,1.754,936,1.495,937,2.852,938,2.852,939,1.754,940,1.325,941,1.495,942,1.495,943,1.754,944,1.754,945,1.527,946,0.82,947,1.096,948,1.754,949,1.754,950,1.754,951,1.325,952,2.253,953,1.495,954,1.495,955,1.012,956,1.495,957,1.495]],["title/components/ContactsViewComponent.html",[135,0.435,174,0.931]],["body/components/ContactsViewComponent.html",[1,2.914,3,0.102,4,0.089,5,0.089,6,1.044,8,0.906,10,2.66,11,2.515,12,1.603,14,0.47,15,0.42,18,2.481,19,1.601,22,0.498,25,0.115,26,0.514,27,0.954,31,3.195,35,0.772,38,1.099,40,0.718,44,1.026,45,0.023,46,0.558,47,0.483,48,0.698,53,0.957,54,2.44,56,1.011,57,2.644,58,1.998,59,2.44,60,0.845,62,1.461,63,1.136,72,1.277,74,1.461,75,1.962,76,3.716,79,2.211,82,2.178,85,1.368,87,1.461,88,0.84,89,0.901,90,0.901,95,0.404,96,0.143,106,0.102,107,0.158,108,0.993,110,0.678,113,0.715,119,1.446,122,1.829,125,1.011,130,2.211,133,0.009,134,0.009,135,0.743,136,0.498,137,0.901,138,0.625,139,0.625,140,0.625,141,0.625,143,0.625,144,2.269,145,2.143,146,1.011,148,1.011,153,0.558,154,1.011,155,1.011,156,0.625,157,1.461,158,0.625,159,0.498,160,1.011,161,0.625,162,0.498,163,0.625,164,0.527,165,0.558,166,0.444,167,0.625,168,0.498,169,0.625,170,0.498,171,0.625,172,0.471,173,0.625,174,1.099,175,0.625,176,0.527,177,1.962,178,0.498,179,0.59,180,0.625,181,0.498,182,0.558,183,0.625,184,0.471,185,0.59,186,0.625,187,0.471,188,0.625,189,0.471,190,0.59,191,0.625,192,0.498,193,0.558,194,0.625,195,1.013,196,0.625,197,0.471,198,0.558,199,0.625,200,0.471,201,0.59,202,0.625,203,0.625,261,4.419,289,0.746,294,0.625,312,2.24,319,3.015,321,1.667,323,1.206,327,2.029,335,1.461,350,1.368,353,1.283,375,1.744,378,1.283,383,2.644,384,1.071,394,3.222,411,1.731,418,2.211,421,1.829,432,1.206,433,2.112,434,1.829,440,2.211,443,2.481,444,2.782,449,2.543,453,2.142,459,1.236,460,1.688,463,4.045,469,1.829,471,2.211,478,2.211,479,2.782,483,1.688,485,1.744,486,3.949,487,3.752,493,1.829,502,2.531,506,1.071,508,1.998,510,3.195,511,1.236,523,1.43,529,1.011,530,1.132,532,2.211,533,2.211,544,2.047,545,1.615,546,2.112,547,2.243,548,2.238,549,1.368,550,2.24,551,0.794,552,1.43,560,0.97,562,1.283,563,2.379,564,1.518,566,1.567,567,1.615,568,0.846,573,0.703,574,1.206,575,2.69,576,2.465,577,1.928,578,1.928,579,2.112,580,0.97,581,2.182,582,1.914,583,2.465,585,2.543,586,1.642,587,1.642,589,2.512,590,2.487,591,1.615,592,1.744,593,1.236,594,2.811,596,2.557,597,2.883,598,1.829,599,2.302,600,1.802,603,1.136,621,1.914,622,1.855,627,1.839,641,1.206,642,1.615,643,1.283,645,2.211,647,0.97,648,0.97,650,1.839,651,2.112,657,0.846,658,0.846,659,0.794,660,1.044,664,2.935,665,2.211,666,1.972,670,2.211,672,2.265,674,2.495,675,3.14,676,1.543,677,4.234,680,4.11,686,2.321,687,2.211,688,2.515,690,2.495,694,1.368,696,1.461,697,1.998,698,2.112,702,2.678,709,1.543,711,1.543,712,3.958,714,1.543,715,1.543,716,1.543,717,1.543,718,3.14,724,2.495,726,1.368,729,2.644,731,1.543,737,1.368,743,3.401,744,1.236,745,3.623,747,2.531,757,2.782,758,2.495,762,3.392,770,2.211,776,3.14,800,4.686,804,1.998,829,1.998,843,2.495,856,3.195,868,1.543,900,1.543,915,1.132,917,2.211,918,1.132,919,3.185,921,1.972,922,2.495,934,1.543,936,1.543,940,2.211,942,1.543,946,1.721,951,1.368,952,2.302,953,3.14,954,3.14,955,1.044,956,2.495,957,1.543,958,1.543,959,2.926,960,2.926,961,2.926,962,2.926,963,3.682,964,3.682,965,2.926,966,3.682,967,2.926,968,4.229,969,2.926,970,2.926,971,4.229,972,3.682,973,4.642,974,4.642,975,2.926,976,1.81,977,1.81,978,2.926,979,1.81,980,1.81,981,1.81,982,1.688,983,1.81,984,1.81,985,2.926,986,4.966,987,2.926,988,1.81,989,2.211,990,1.81,991,2.926,992,1.81,993,2.926,994,4.229,995,1.81,996,1.81,997,2.926,998,2.926,999,1.81,1000,1.81,1001,1.81,1002,2.495,1003,2.926,1004,1.81,1005,1.81,1006,1.81,1007,1.81,1008,1.81,1009,1.81,1010,1.81,1011,2.926,1012,1.81,1013,1.81,1014,1.81,1015,1.81,1016,1.543,1017,1.81,1018,2.926,1019,2.926,1020,2.926,1021,2.926,1022,2.926,1023,2.926,1024,2.926,1025,3.682,1026,3.682,1027,1.81,1028,2.926,1029,3.682,1030,2.495,1031,2.926,1032,3.682,1033,3.682,1034,1.81,1035,2.926,1036,3.14,1037,1.81,1038,1.81,1039,2.926,1040,2.926,1041,2.926,1042,3.682,1043,1.81,1044,2.926,1045,0.97,1046,0.97,1047,1.132,1048,1.81,1049,1.81,1050,3.682,1051,1.81,1052,1.368,1053,1.543,1054,1.81,1055,1.81,1056,2.211,1057,1.81,1058,1.81,1059,1.81,1060,1.567,1061,1.543,1062,1.81,1063,1.81,1064,0.97]],["title/injectables/CustomDateParserFormatter.html",[0,0.403,252,2.066]],["body/injectables/CustomDateParserFormatter.html",[0,0.682,2,1.84,3,0.283,4,0.246,5,0.246,14,0.974,25,0.32,38,1.038,44,1.106,45,0.023,46,0.527,47,0.479,48,0.911,60,0.911,88,1.111,90,1.176,95,0.527,96,0.397,106,0.283,107,0.437,110,1.404,113,1.262,133,0.018,134,0.018,209,3.142,248,4.914,249,3.142,250,3.433,252,3.495,449,3.281,497,4.138,558,4.066,633,2.511,1065,4.914,1066,3.701,1067,5.545,1068,4.285,1069,5.166,1070,5.166,1071,5.166,1072,5.985,1073,5.026,1074,5.166,1075,5.026,1076,4.285,1077,4.285,1078,4.285,1079,4.285,1080,4.285,1081,5.166,1082,4.285,1083,3.797,1084,4.285,1085,5.026]],["title/injectables/CustomDateParserFormatter-1.html",[0,0.337,252,1.729,435,1.236]],["body/injectables/CustomDateParserFormatter-1.html",[0,0.671,2,1.793,3,0.275,4,0.24,5,0.24,14,0.959,25,0.312,27,1.174,38,1.102,44,1.174,45,0.023,46,0.56,47,0.508,48,0.967,60,0.967,72,1.919,88,1.121,90,1.157,95,0.519,96,0.387,106,0.275,107,0.426,110,1.135,113,1.299,133,0.018,134,0.018,209,3.062,248,4.859,249,3.062,250,3.345,252,3.441,254,5.057,449,3.261,497,4.074,558,4.02,633,2.446,1065,5.057,1066,3.195,1069,5.085,1070,5.085,1071,5.085,1072,5.949,1074,5.085,1076,4.176,1077,4.176,1078,4.176,1079,4.176,1080,4.176,1081,4.176,1082,4.176,1083,3.7,1084,4.176,1086,4.176,1087,5.964,1088,4.898,1089,5.964,1090,4.898,1091,4.898,1092,4.898]],["title/components/FooterBarComponent.html",[135,0.435,178,0.985]],["body/components/FooterBarComponent.html",[3,0.17,4,0.149,5,0.149,8,0.924,9,2.711,13,2.323,14,0.697,15,1.356,19,1.574,22,0.834,25,0.193,26,0.527,27,1.111,35,0.924,38,1.16,40,1.065,44,0.792,45,0.023,46,0.481,47,0.481,48,0.652,60,0.943,88,0.814,89,1.073,90,1.073,93,2.214,95,0.378,96,0.24,106,0.17,107,0.264,108,0.792,109,0.934,125,1.047,133,0.013,134,0.013,135,0.762,136,0.834,137,1.336,138,1.047,139,1.047,140,1.047,141,1.047,143,1.047,144,2.448,145,2.312,146,1.498,148,1.498,153,0.934,154,1.498,155,1.498,156,1.047,157,1.91,158,1.047,159,0.834,160,1.498,161,1.047,162,0.834,163,1.047,164,0.882,165,1.803,166,1.436,167,1.047,168,0.834,169,1.047,170,0.834,171,1.047,172,0.788,173,1.047,174,0.788,175,1.047,176,0.882,177,0.988,178,1.675,179,2.159,180,1.047,181,0.834,182,1.803,183,1.047,184,0.788,185,0.988,186,1.047,187,0.788,188,1.047,189,0.788,190,0.988,191,1.047,192,0.834,193,0.934,194,1.047,195,0.834,196,1.047,197,0.788,198,0.934,199,1.047,200,0.788,201,1.908,202,1.047,203,1.047,239,5.159,289,1.788,294,1.047,311,1.895,312,2.651,319,3.19,321,1.81,323,1.788,325,3.183,327,2.671,375,2.51,378,1.902,394,2.323,402,1.895,411,1.561,442,2.711,443,3.04,452,2.962,453,2.165,468,3.777,505,4.599,506,2.346,523,1.684,529,1.047,544,1.25,545,1.329,546,1.177,548,1.588,550,2.271,552,1.966,562,1.329,563,1.25,564,1.25,573,1.177,575,1.684,576,1.684,577,1.684,578,1.684,579,1.684,581,1.177,582,1.788,583,1.177,586,1.177,587,1.177,589,1.177,594,2.027,600,1.177,603,1.177,624,1.329,625,1.895,641,1.25,642,1.329,643,1.902,646,2.29,657,1.417,658,1.417,659,1.329,660,1.748,666,2.713,672,2.962,686,2.996,694,3.277,696,2.167,698,2.762,729,1.895,804,2.962,835,3.277,838,2.502,869,3.277,952,1.895,1093,5.822,1094,2.584,1095,4.337,1096,5.938,1097,4.337,1098,3.698,1099,5.065,1100,4.337,1101,4.319,1102,4.319,1103,4.319,1104,4.319,1105,4.714,1106,4.714,1107,4.714,1108,4.178,1109,4.714,1110,3.698,1111,4.337,1112,3.277,1113,4.337,1114,3.031,1115,3.031,1116,3.031,1117,3.031,1118,3.031,1119,3.698,1120,3.698,1121,3.031,1122,3.277,1123,3.698,1124,3.698,1125,3.698,1126,3.031,1127,3.698,1128,3.698,1129,3.031,1130,3.031,1131,3.031,1132,3.277,1133,2.29,1134,2.584,1135,2.584,1136,2.584,1137,2.584,1138,3.698,1139,3.698,1140,3.698,1141,3.698,1142,2.584,1143,2.584,1144,2.584,1145,2.584,1146,1.895,1147,2.584,1148,2.584,1149,4.337,1150,3.031,1151,3.031,1152,2.711,1153,3.031,1154,2.584]],["title/components/HeaderBarMobileComponent.html",[135,0.435,181,0.985]],["body/components/HeaderBarMobileComponent.html",[3,0.17,4,0.148,5,0.148,8,0.79,9,2.705,10,2.318,12,1.907,14,0.695,15,0.7,19,1.355,22,1.82,25,0.275,26,0.526,27,0.79,35,1.008,38,1.073,40,1.062,44,0.551,45,0.023,46,0.583,47,0.4,48,0.454,59,2.496,60,0.83,88,0.695,89,0.84,90,0.84,95,0.509,96,0.239,106,0.17,107,0.263,108,0.79,122,3.451,125,1.495,133,0.013,134,0.013,135,0.71,136,0.831,137,1.333,138,1.043,139,1.043,140,1.043,141,1.043,143,1.043,144,2.447,145,2.311,146,1.495,148,1.495,153,0.931,154,1.495,155,1.495,156,1.043,157,1.907,158,1.043,159,0.831,160,1.495,161,1.043,162,0.831,163,1.043,164,0.879,165,0.931,166,0.742,167,1.043,168,0.831,169,1.043,170,0.831,171,1.043,172,0.785,173,1.043,174,0.785,175,1.043,176,0.879,177,0.985,178,0.831,179,0.985,180,1.043,181,1.673,182,2.219,183,1.043,184,0.785,185,1.649,186,1.043,187,0.785,188,1.043,189,0.785,190,1.649,191,1.043,192,0.831,193,0.931,194,1.043,195,0.831,196,1.043,197,0.785,198,0.931,199,1.043,200,0.785,201,1.649,202,1.043,203,1.043,220,3.305,222,2.957,243,4.839,258,2.063,294,1.495,298,2.161,300,3.82,305,2.496,306,2.496,311,1.888,312,2.626,321,1.125,323,1.784,325,2.421,327,1.68,371,2.133,375,2.507,378,1.898,404,2.576,409,3.269,411,1.8,433,2.526,443,2.161,453,1.907,484,2.705,485,1.784,502,2.421,508,3.453,523,1.173,529,1.907,544,1.245,545,1.325,546,2.143,547,1.784,548,2.139,550,2.143,552,1.963,556,1.888,557,1.509,562,1.325,563,2.507,564,2.409,567,1.325,568,1.412,573,1.68,574,1.784,575,2.486,576,1.963,577,1.68,578,1.68,579,1.963,581,1.963,583,1.68,585,2.023,586,1.173,587,1.173,589,1.68,591,1.325,592,1.245,596,1.784,600,1.68,603,1.68,621,1.245,624,1.325,627,2.526,633,1.509,641,1.784,642,1.325,643,1.898,647,1.618,648,1.618,650,1.509,657,1.412,658,1.412,659,1.325,660,1.743,666,2.708,672,2.957,686,2.023,696,2.161,747,2.421,770,3.269,797,1.898,821,4.707,828,2.956,838,2.496,864,2.956,918,2.705,919,2.363,921,1.618,924,1.888,945,1.618,946,2.023,947,1.888,952,1.888,955,1.743,1045,1.618,1046,1.618,1047,1.888,1060,2.318,1064,1.618,1108,4.171,1120,4.707,1146,1.888,1152,1.888,1155,5.461,1156,2.576,1157,5.184,1158,5.056,1159,4.327,1160,5.056,1161,5.843,1162,5.521,1163,4.327,1164,3.021,1165,3.021,1166,2.956,1167,4.327,1168,3.269,1169,3.269,1170,4.327,1171,3.269,1172,4.327,1173,3.021,1174,4.707,1175,4.327,1176,5.056,1177,3.021,1178,3.269,1179,3.771,1180,5.521,1181,3.021,1182,2.282,1183,2.576,1184,3.021,1185,3.021,1186,3.021,1187,3.021,1188,3.021,1189,4.327,1190,2.576,1191,3.021,1192,2.576,1193,2.576,1194,3.269,1195,2.956,1196,3.269,1197,3.689,1198,3.82,1199,3.269,1200,1.743,1201,3.269,1202,2.282,1203,2.282,1204,1.743,1205,1.412,1206,2.282,1207,1.888,1208,2.282,1209,1.888,1210,2.282,1211,3.269,1212,2.282,1213,1.888]],["title/components/LegalNoticeComponent.html",[135,0.435,184,0.931]],["body/components/LegalNoticeComponent.html",[3,0.196,4,0.171,5,0.171,15,0.808,19,1.443,22,0.959,25,0.222,45,0.023,46,0.416,95,0.303,96,0.275,106,0.196,107,0.303,125,2.128,133,0.014,134,0.014,135,0.664,136,0.959,137,1.474,138,1.204,139,1.204,140,1.204,141,1.204,143,1.204,144,2.486,145,2.347,146,1.652,148,1.652,153,1.074,154,1.652,155,1.652,156,1.204,157,2.031,158,1.204,159,0.959,160,1.652,161,1.204,162,0.959,163,1.204,164,1.015,165,1.074,166,0.856,167,1.204,168,0.959,169,1.204,170,0.959,171,1.204,172,0.906,173,1.204,174,0.906,175,1.204,176,1.015,177,1.137,178,0.959,179,1.137,180,1.204,181,0.959,182,1.074,183,1.204,184,1.528,185,2.165,186,1.204,187,0.906,188,1.204,189,0.906,190,1.137,191,1.204,192,0.959,193,1.074,194,1.204,195,0.959,196,1.204,197,0.906,198,1.074,199,1.204,200,0.906,201,1.137,202,1.204,203,1.204,284,2.38,305,2.76,411,2.138,433,1.741,484,2.99,502,2.702,523,1.353,529,2.198,544,1.437,545,1.528,546,2.392,547,2.54,548,2.494,549,2.236,550,2.531,551,2.098,552,2.531,556,2.179,557,1.741,562,2.395,563,2.624,564,2.54,567,1.528,568,1.629,572,2.179,573,2.12,574,2.252,575,2.712,576,2.693,577,2.392,578,2.392,579,2.577,581,2.282,582,2.424,583,2.12,585,2.236,586,1.857,587,1.857,589,2.12,591,1.528,592,1.972,594,2.236,596,2.424,600,2.12,603,2.392,621,2.424,622,2.395,624,2.098,627,2.728,631,1.629,633,1.741,641,1.437,647,1.867,648,1.867,650,1.741,651,1.741,915,2.179,918,2.99,919,2.975,921,1.867,924,2.179,945,2.562,946,2.748,947,2.99,955,2.011,1045,1.867,1046,1.867,1047,2.179,1060,2.926,1064,1.867,1152,3.414,1194,3.614,1195,3.267,1196,3.614,1198,3.614,1199,3.614,1200,2.011,1201,3.614,1203,2.633,1204,2.011,1205,1.629,1206,2.633,1207,2.179,1208,2.633,1209,2.179,1210,2.633,1211,3.614,1212,3.614,1213,2.99,1214,2.971,1215,2.971,1216,5.462,1217,4.784,1218,4.784,1219,4.079,1220,4.784,1221,4.079,1222,4.784,1223,4.079,1224,4.079,1225,4.079,1226,4.079,1227,4.079,1228,4.079,1229,4.784,1230,4.079,1231,4.079,1232,4.079,1233,4.079,1234,4.079,1235,2.971,1236,4.079,1237,4.079,1238,4.079,1239,3.485,1240,3.614,1241,4.784,1242,4.127,1243,2.633,1244,2.633,1245,2.633,1246,2.633,1247,2.633,1248,2.179,1249,2.633,1250,2.633,1251,2.633,1252,2.38,1253,2.633,1254,2.633,1255,2.971]],["title/components/LoginComponent.html",[135,0.435,187,0.931]],["body/components/LoginComponent.html",[3,0.126,4,0.11,5,0.11,8,0.774,10,2.555,12,1.199,14,0.558,15,0.521,19,1.171,21,3.669,22,0.618,25,0.221,26,0.422,27,1.123,35,0.871,37,2.116,38,1.127,40,0.852,41,1.347,42,1.883,43,1.648,44,0.633,45,0.023,46,0.415,47,0.464,48,0.522,54,2.002,60,0.883,63,2.002,68,2.17,69,3.405,88,0.913,89,1.058,90,1.058,95,0.449,96,0.178,97,0.733,106,0.126,107,0.196,108,0.941,119,1.823,125,2.027,133,0.01,134,0.01,135,0.515,136,0.618,137,1.069,138,0.776,139,0.776,140,0.776,141,0.776,143,0.776,144,2.352,145,2.221,146,1.199,148,1.199,153,0.692,154,1.199,155,1.199,156,0.776,157,1.648,158,0.776,159,0.618,160,1.199,161,0.776,162,0.618,163,0.776,164,0.654,165,0.692,166,0.552,167,0.776,168,0.618,169,0.776,170,0.618,171,0.776,172,0.584,173,0.776,174,0.584,175,0.776,176,0.654,177,0.733,178,0.618,179,0.733,180,0.776,181,0.618,182,0.692,183,0.776,184,0.584,185,1.383,186,0.776,187,1.417,188,0.776,189,0.584,190,1.383,191,0.776,192,0.618,193,0.692,194,0.776,195,0.618,196,0.776,197,0.584,198,1.589,199,0.776,200,0.584,201,1.682,202,0.776,203,0.776,220,2.931,222,1.859,258,1.535,289,1.431,294,0.776,298,3.435,305,2.002,306,2.002,312,2.388,321,1.525,325,2.39,327,2.388,335,1.122,354,2.959,356,2.959,370,2.959,371,1.984,375,1.967,376,3.604,384,1.27,411,1.47,432,2.483,435,1.431,453,2.291,460,2.002,483,2.002,484,2.17,485,1.967,502,2.261,506,1.27,523,2.002,529,1.962,530,2.17,538,3.604,544,2.42,545,1.86,546,1.852,547,2.126,548,2.383,549,1.622,550,2.338,551,1.86,552,2.278,557,1.122,560,1.203,561,2.897,563,2.342,564,0.926,565,1.535,566,1.203,567,2.39,568,2.23,569,2.371,573,0.872,574,0.926,575,2.528,576,2.613,577,2.338,578,2.338,579,2.528,580,1.859,581,1.646,582,0.926,583,2.206,585,1.05,586,1.347,587,1.347,589,1.347,590,1.203,591,0.985,592,0.926,596,1.431,597,1.122,600,0.872,603,2.278,610,1.535,612,3.258,613,2.371,614,1.535,616,1.535,619,1.535,621,2.342,622,2.261,624,2.39,625,3.223,629,1.535,630,2.17,631,1.05,634,2.17,637,2.17,638,2.17,641,0.926,642,0.985,643,0.985,650,1.122,651,1.122,657,1.05,658,1.05,659,0.985,662,2.371,664,1.05,665,2.622,680,2.622,685,2.622,686,2.548,698,1.734,702,2.752,739,2.622,745,1.296,747,2.574,797,1.522,828,4.008,829,2.371,838,2.002,839,3.258,859,2.959,864,2.371,919,1.622,921,1.203,945,1.203,946,1.05,1045,1.203,1046,1.203,1052,1.697,1056,1.697,1060,1.203,1064,1.859,1122,2.622,1146,2.17,1166,2.371,1178,2.622,1197,5.004,1200,1.296,1202,1.697,1204,1.296,1207,1.404,1209,1.404,1248,2.17,1256,1.916,1257,5.45,1258,4.279,1259,3.471,1260,5.45,1261,4.241,1262,3.471,1263,4.241,1264,4.241,1265,3.616,1266,4.241,1267,4.77,1268,4.067,1269,4.77,1270,4.77,1271,4.77,1272,3.471,1273,4.067,1274,2.247,1275,3.881,1276,3.471,1277,2.247,1278,1.734,1279,5.45,1280,5.45,1281,4.067,1282,3.471,1283,2.247,1284,3.471,1285,2.002,1286,2.247,1287,2.247,1288,3.471,1289,2.247,1290,3.471,1291,2.247,1292,2.959,1293,3.471,1294,2.247,1295,4.77,1296,3.471,1297,2.247,1298,4.067,1299,2.247,1300,4.77,1301,2.247,1302,4.77,1303,4.067,1304,2.247,1305,2.247,1306,2.247,1307,3.471,1308,3.471,1309,2.247,1310,2.959,1311,2.247,1312,2.247,1313,1.916,1314,2.247,1315,2.247,1316,2.247,1317,2.247,1318,3.471,1319,3.471,1320,2.247,1321,2.247,1322,3.471,1323,1.916,1324,2.247,1325,2.247,1326,3.471,1327,2.247,1328,3.471,1329,2.247,1330,2.247,1331,2.247,1332,2.247,1333,1.916,1334,2.247,1335,2.959,1336,2.17,1337,2.17,1338,1.916,1339,1.916,1340,1.916,1341,1.916,1342,1.916,1343,1.916,1344,1.916,1345,1.916,1346,1.916,1347,1.916,1348,2.959,1349,2.959,1350,1.916,1351,1.916,1352,1.916,1353,1.404,1354,1.916,1355,1.916,1356,1.916,1357,1.916,1358,1.916,1359,1.916,1360,1.916,1361,2.959,1362,2.959,1363,3.471,1364,3.471,1365,2.247,1366,2.622,1367,3.604,1368,2.247,1369,2.247]],["title/injectables/LoginService.html",[0,0.403,1275,2.446]],["body/injectables/LoginService.html",[0,0.568,2,1.38,3,0.212,4,0.185,5,0.185,8,1.038,9,3.154,12,2.298,14,0.811,21,3.796,24,2.52,25,0.24,26,0.613,27,1.189,35,1.038,36,2.02,37,2.625,38,1.14,41,1.959,42,2.298,43,1.743,44,0.921,45,0.023,46,0.439,47,0.48,48,0.759,53,0.98,54,2.911,60,1.001,61,1.945,63,1.959,67,3.555,69,3.667,70,3.446,81,1.959,88,1.087,89,0.979,90,0.979,93,2.098,95,0.529,96,0.298,97,1.23,98,3.812,99,0.98,100,1.653,101,2.849,102,1.555,104,1.162,105,1.098,106,0.212,107,0.328,108,1.038,109,1.162,110,0.874,111,3.796,113,1.228,115,3.154,116,1.883,119,1.937,122,2.357,123,3.154,133,0.015,134,0.015,222,2.703,289,2.345,298,3.377,321,1.578,327,1.959,371,2.131,376,3.812,380,4.302,420,2.223,421,3.154,432,2.743,449,2.838,453,1.743,458,3.154,485,2.08,538,3.812,702,2.911,797,2.213,808,4.302,828,3.446,1157,5.555,1166,4.148,1169,4.588,1171,4.588,1174,5.178,1190,3.215,1193,3.215,1258,4.28,1275,3.446,1313,3.215,1323,3.215,1333,3.215,1370,3.215,1371,6.847,1372,5.687,1373,5.687,1374,6.073,1375,6.073,1376,5.046,1377,4.302,1378,5.046,1379,5.046,1380,3.771,1381,3.446,1382,4.302,1383,6.073,1384,3.771,1385,4.302,1386,5.178,1387,5.046,1388,5.046,1389,5.046,1390,5.046,1391,3.771,1392,3.771,1393,5.046,1394,5.046,1395,3.771,1396,4.302,1397,5.046,1398,5.046,1399,3.771,1400,3.771,1401,3.215,1402,4.302,1403,3.771]],["title/components/PrivacyPolicyComponent.html",[135,0.435,189,0.931]],["body/components/PrivacyPolicyComponent.html",[3,0.054,4,0.047,5,0.047,15,0.221,19,0.681,22,0.262,25,0.061,42,0.329,45,0.021,46,0.148,95,0.083,96,0.075,106,0.054,107,0.083,125,1.098,133,0.005,134,0.005,135,0.278,136,0.262,137,0.522,138,0.329,139,0.329,140,0.329,141,0.329,143,0.329,144,1.951,145,1.842,146,0.586,148,0.586,153,0.294,154,0.586,155,0.586,156,0.329,157,0.958,158,0.329,159,0.262,160,0.586,161,0.329,162,0.262,163,0.329,164,0.278,165,0.294,166,0.234,167,0.329,168,0.262,169,0.329,170,0.262,171,0.329,172,0.248,173,0.329,174,0.248,175,0.329,176,0.278,177,0.311,178,0.262,179,0.311,180,0.329,181,0.262,182,0.294,183,0.329,184,0.248,185,0.311,186,0.329,187,0.248,188,0.329,189,0.721,190,1.327,191,0.329,192,0.262,193,0.294,194,0.329,195,0.262,196,0.329,197,0.248,198,0.294,199,0.329,200,0.248,201,0.311,202,0.329,203,0.329,281,0.651,306,0.978,411,1.484,433,0.476,435,2.632,484,1.06,497,1.158,502,1.394,523,0.658,525,3.745,529,1.216,544,0.393,545,0.418,546,1.234,547,1.31,548,1.642,549,0.792,550,1.481,551,0.418,552,1.481,556,0.596,557,2.241,562,1.004,563,1.451,564,1.31,567,0.418,568,0.446,572,0.596,573,0.888,574,0.944,575,1.925,576,1.87,577,1.234,578,1.234,579,1.579,581,1.077,582,1.144,583,0.888,585,0.792,586,0.658,587,0.658,589,0.888,591,0.418,592,0.699,594,0.792,596,1.144,600,0.888,603,1.234,621,1.144,622,1.004,624,0.743,627,1.143,631,0.446,633,1.143,641,0.393,647,0.511,648,0.511,650,0.476,651,0.476,664,0.792,862,2.365,915,0.596,917,0.721,918,1.431,919,1.645,921,0.511,924,0.596,945,0.908,946,1.297,947,1.06,955,0.55,1045,0.511,1046,0.511,1047,0.596,1060,1.226,1064,0.511,1152,1.431,1194,1.281,1195,1.158,1196,1.281,1198,1.281,1199,1.281,1200,0.55,1201,1.281,1203,0.721,1204,0.55,1205,1.07,1206,0.721,1207,0.596,1208,0.721,1209,0.596,1210,0.721,1211,1.281,1212,1.281,1213,1.06,1219,1.445,1223,1.445,1224,1.445,1225,1.445,1226,1.445,1227,1.445,1228,1.445,1230,1.445,1231,2.365,1232,1.445,1233,3.468,1234,3.002,1235,0.813,1236,1.445,1237,1.445,1238,1.445,1240,1.281,1242,1.729,1243,0.721,1244,0.721,1245,0.721,1246,0.721,1247,0.721,1248,0.596,1249,0.721,1250,0.721,1251,0.721,1252,0.651,1253,0.721,1254,0.721,1255,0.813,1404,0.813,1405,0.813,1406,2.289,1407,1.695,1408,0.954,1409,4.068,1410,6.852,1411,4.817,1412,1.695,1413,3.52,1414,4.068,1415,7.246,1416,3.52,1417,4.068,1418,1.695,1419,0.954,1420,0.954,1421,5.491,1422,2.774,1423,6.618,1424,7.205,1425,1.695,1426,6.384,1427,7.117,1428,5.904,1429,6.008,1430,1.695,1431,4.817,1432,5.084,1433,1.695,1434,3.52,1435,1.695,1436,2.774,1437,6.183,1438,4.817,1439,0.954,1440,3.52,1441,5.649,1442,3.52,1443,4.068,1444,4.486,1445,2.774,1446,1.695,1447,0.954,1448,4.068,1449,3.52,1450,6.324,1451,1.695,1452,6.008,1453,1.695,1454,4.661,1455,6.183,1456,5.649,1457,3.52,1458,5.649,1459,1.695,1460,1.695,1461,2.774,1462,4.486,1463,1.695,1464,0.954,1465,6.101,1466,3.52,1467,0.954,1468,3.52,1469,1.695,1470,6.618,1471,6.49,1472,1.695,1473,3.52,1474,3.52,1475,6.008,1476,1.695,1477,1.695,1478,3.52,1479,4.068,1480,4.817,1481,4.29,1482,4.068,1483,1.695,1484,5.904,1485,4.068,1486,1.695,1487,2.774,1488,2.774,1489,6.829,1490,5.491,1491,6.618,1492,6.384,1493,2.774,1494,1.695,1495,6.997,1496,1.695,1497,1.695,1498,1.695,1499,6.183,1500,2.774,1501,1.695,1502,1.695,1503,1.695,1504,1.695,1505,1.695,1506,5.491,1507,1.695,1508,1.695,1509,1.695,1510,1.695,1511,1.695,1512,2.774,1513,1.695,1514,3.52,1515,5.785,1516,1.695,1517,1.695,1518,6.324,1519,0.954,1520,1.695,1521,3.52,1522,1.695,1523,2.774,1524,2.774,1525,3.52,1526,6.49,1527,0.954,1528,5.904,1529,6.183,1530,1.695,1531,3.52,1532,3.52,1533,2.774,1534,1.695,1535,6.257,1536,4.486,1537,3.52,1538,1.695,1539,2.289,1540,3.52,1541,3.814,1542,5.305,1543,1.695,1544,1.695,1545,4.068,1546,1.695,1547,0.954,1548,4.068,1549,6.49,1550,4.068,1551,3.52,1552,3.52,1553,3.52,1554,5.491,1555,1.695,1556,1.695,1557,4.068,1558,4.068,1559,2.774,1560,3.52,1561,3.002,1562,1.695,1563,1.695,1564,2.774,1565,1.695,1566,2.774,1567,4.068,1568,1.695,1569,1.695,1570,1.695,1571,1.695,1572,1.695,1573,0.954,1574,0.954,1575,1.695,1576,1.695,1577,1.695,1578,1.695,1579,6.75,1580,1.695,1581,1.695,1582,1.695,1583,5.904,1584,6.384,1585,5.785,1586,6.439,1587,6.008,1588,4.486,1589,6.439,1590,3.52,1591,3.52,1592,5.084,1593,0.954,1594,0.954,1595,1.695,1596,5.491,1597,1.695,1598,2.774,1599,3.52,1600,0.954,1601,1.695,1602,2.774,1603,3.52,1604,4.068,1605,4.486,1606,2.774,1607,3.52,1608,5.904,1609,1.695,1610,1.695,1611,2.774,1612,1.695,1613,1.695,1614,3.52,1615,0.954,1616,1.695,1617,1.695,1618,1.695,1619,4.068,1620,0.954,1621,1.695,1622,1.695,1623,1.695,1624,1.695,1625,1.695,1626,2.774,1627,1.695,1628,1.695,1629,1.695,1630,1.695,1631,1.695,1632,1.695,1633,4.068,1634,1.695,1635,1.695,1636,1.695,1637,1.695,1638,1.695,1639,0.954,1640,1.695,1641,1.695,1642,2.774,1643,0.954,1644,1.695,1645,0.954,1646,1.695,1647,5.084,1648,1.695,1649,2.289,1650,3.814,1651,2.774,1652,0.954,1653,1.695,1654,2.774,1655,1.695,1656,1.695,1657,4.068,1658,3.52,1659,1.695,1660,1.695,1661,1.695,1662,1.695,1663,0.954,1664,1.695,1665,2.774,1666,1.695,1667,2.774,1668,1.695,1669,1.695,1670,2.774,1671,3.52,1672,1.695,1673,0.954,1674,1.695,1675,1.695,1676,0.954,1677,1.695,1678,0.954,1679,2.289,1680,1.695,1681,1.695,1682,2.774,1683,1.695,1684,2.774,1685,1.695,1686,2.774,1687,2.774,1688,4.486,1689,4.068,1690,2.774,1691,1.695,1692,1.695,1693,3.52,1694,3.52,1695,1.695,1696,2.289,1697,2.774,1698,1.695,1699,1.695,1700,1.445,1701,0.954,1702,1.695,1703,1.695,1704,2.774,1705,1.695,1706,4.486,1707,2.289,1708,1.695,1709,1.695,1710,1.695,1711,1.695,1712,1.695,1713,2.774,1714,2.774,1715,1.695,1716,1.695,1717,1.695,1718,0.954,1719,0.954,1720,1.695,1721,2.774,1722,3.52,1723,0.954,1724,1.695,1725,1.695,1726,2.774,1727,3.52,1728,1.695,1729,1.695,1730,1.695,1731,0.954,1732,4.486,1733,1.695,1734,1.695,1735,3.52,1736,4.486,1737,1.695,1738,1.695,1739,2.774,1740,0.954,1741,1.695,1742,2.774,1743,1.695,1744,1.695,1745,1.695,1746,1.695,1747,1.695,1748,4.486,1749,0.954,1750,3.52,1751,1.695,1752,1.695,1753,1.695,1754,1.695,1755,1.695,1756,3.52,1757,1.695,1758,0.954,1759,1.695,1760,1.695,1761,0.954,1762,1.695,1763,1.695,1764,1.695,1765,1.695,1766,1.695,1767,4.486,1768,1.695,1769,2.774,1770,2.289,1771,4.068,1772,4.068,1773,4.486,1774,1.695,1775,1.695,1776,1.695,1777,4.817,1778,2.774,1779,2.774,1780,3.52,1781,0.954,1782,2.774,1783,1.695,1784,2.774,1785,1.695,1786,2.774,1787,3.52,1788,1.695,1789,1.695,1790,2.774,1791,0.954,1792,1.695,1793,3.52,1794,1.695,1795,1.695,1796,1.695,1797,3.52,1798,2.289,1799,3.52,1800,2.289,1801,1.695,1802,1.695,1803,1.695,1804,1.695,1805,1.695,1806,2.774,1807,1.695,1808,1.695,1809,0.954,1810,0.954,1811,0.954,1812,2.774,1813,1.695,1814,0.954,1815,1.695,1816,1.695,1817,1.695,1818,0.954,1819,0.954,1820,2.774,1821,1.695,1822,1.695,1823,1.695,1824,1.695,1825,1.695,1826,0.954,1827,1.695,1828,2.774,1829,1.695,1830,0.954,1831,1.695,1832,0.954,1833,2.774,1834,1.695,1835,1.695,1836,1.695,1837,1.695,1838,1.695,1839,1.695,1840,1.695,1841,1.695,1842,1.695,1843,2.289,1844,1.695,1845,1.695,1846,0.954,1847,1.695,1848,0.954,1849,0.954,1850,1.695,1851,2.774,1852,1.695,1853,1.695,1854,1.695,1855,0.954,1856,1.695,1857,1.695,1858,1.695,1859,1.695,1860,1.695,1861,1.695,1862,1.695,1863,0.954,1864,0.954,1865,2.774,1866,1.695,1867,0.954,1868,1.695,1869,1.695,1870,0.954,1871,0.954,1872,1.695,1873,1.695,1874,3.52,1875,3.52,1876,2.289,1877,1.695,1878,1.695,1879,0.954,1880,1.695,1881,1.695,1882,1.695,1883,3.52,1884,1.695,1885,1.695,1886,1.695,1887,0.954,1888,1.695,1889,1.695,1890,1.695,1891,1.695,1892,0.954,1893,0.954,1894,1.695,1895,1.695,1896,1.695,1897,1.695,1898,1.695,1899,0.954,1900,1.695,1901,1.695,1902,1.695,1903,1.695,1904,1.695,1905,1.695,1906,1.695,1907,1.695,1908,3.52,1909,3.52,1910,1.695,1911,1.695,1912,1.695,1913,0.954,1914,1.695,1915,0.954,1916,1.695,1917,1.695,1918,1.695,1919,1.695,1920,1.695,1921,1.695,1922,1.695,1923,1.695,1924,1.695,1925,0.954,1926,1.695,1927,0.954,1928,0.954,1929,0.954,1930,0.954,1931,1.695,1932,4.817,1933,0.954,1934,0.954,1935,4.068,1936,4.661,1937,1.695,1938,0.954,1939,0.954,1940,3.52,1941,2.289,1942,3.814,1943,0.954,1944,4.068,1945,1.695,1946,1.695,1947,1.695,1948,0.954,1949,0.954,1950,0.954,1951,0.954,1952,0.954,1953,1.695,1954,0.954,1955,0.954,1956,1.695,1957,0.954,1958,0.954,1959,0.954,1960,1.695,1961,0.954,1962,1.695,1963,0.954,1964,0.954,1965,0.954,1966,2.289,1967,1.695,1968,2.289,1969,0.954,1970,1.695,1971,1.695,1972,1.695,1973,2.289,1974,0.954,1975,0.954,1976,0.954,1977,0.954,1978,0.954,1979,0.954,1980,0.954,1981,0.954,1982,1.695,1983,2.289,1984,1.695,1985,0.954,1986,0.954,1987,1.695,1988,2.289,1989,2.289,1990,0.954,1991,0.954,1992,0.954,1993,0.954,1994,0.954,1995,0.954,1996,0.954,1997,0.954,1998,0.954,1999,2.289,2000,0.954,2001,0.954,2002,0.954,2003,0.954,2004,0.954,2005,0.954,2006,0.954,2007,0.954,2008,0.954,2009,2.289,2010,0.954,2011,0.954,2012,0.954,2013,0.954,2014,0.954,2015,0.954]],["title/components/ResetPasswordComponent.html",[135,0.435,192,0.985]],["body/components/ResetPasswordComponent.html",[3,0.272,4,0.237,5,0.237,15,1.12,19,1.635,22,1.329,45,0.022,46,0.515,95,0.421,96,0.382,106,0.272,107,0.421,133,0.018,134,0.018,135,0.777,136,1.329,137,1.822,138,1.669,139,1.669,140,1.669,141,1.669,143,1.669,144,2.56,145,2.417,146,2.043,148,2.043,153,1.488,154,2.043,155,2.043,156,1.669,157,2.301,158,1.669,159,1.329,160,2.043,161,1.669,162,1.329,163,1.669,164,1.406,165,1.488,166,1.186,167,1.669,168,1.329,169,1.669,170,1.329,171,1.669,172,1.256,173,1.669,174,1.256,175,1.669,176,1.406,177,1.576,178,1.329,179,1.576,180,1.669,181,1.329,182,1.488,183,1.669,184,1.256,185,1.576,186,1.669,187,1.256,188,1.669,189,1.256,190,1.576,191,1.669,192,1.833,193,2.221,194,1.669,195,1.329,196,1.669,197,1.256,198,1.488,199,1.669,200,1.256,201,1.576,202,1.669,203,1.669,236,3.65,1258,4.164,2016,4.119,2017,4.119,2018,6.392,2019,5.915,2020,5.915]],["title/injectables/ScreenSizeService.html",[0,0.403,794,2.446]],["body/injectables/ScreenSizeService.html",[0,0.642,2,1.667,3,0.256,4,0.223,5,0.223,8,1.041,25,0.29,26,0.693,27,1.136,35,1.136,38,1.067,40,1.4,44,0.831,45,0.023,46,0.396,47,0.492,48,0.685,61,1.913,62,1.969,89,1.106,90,1.106,95,0.568,96,0.36,99,1.184,102,1.877,104,1.403,105,1.326,106,0.256,107,0.396,108,0.831,109,1.403,133,0.017,134,0.017,253,5.563,321,1.482,345,4.862,378,2.501,386,4.862,441,3.564,506,2.087,548,2.087,597,3.512,642,3.132,643,2.501,659,2.501,698,2.848,762,4.456,779,5.308,794,4.456,822,5.844,846,5.844,866,4.93,1112,4.308,2021,3.883,2022,5.702,2023,5.702,2024,5.702,2025,6.955,2026,6.225,2027,4.554,2028,7.184,2029,4.554,2030,5.702,2031,5.702,2032,5.702,2033,4.554,2034,5.702,2035,5.702,2036,5.702,2037,5.702,2038,5.702,2039,6.225,2040,5.702,2041,4.554,2042,4.554,2043,3.883]],["title/components/SidebarComponent.html",[135,0.435,195,0.985]],["body/components/SidebarComponent.html",[3,0.162,4,0.141,5,0.141,8,0.899,14,0.869,15,1.431,17,2.092,19,1.608,20,2.618,22,0.794,25,0.184,26,0.509,27,1.093,35,0.899,38,1.17,44,0.764,45,0.023,46,0.471,47,0.473,48,0.63,53,1.405,60,0.97,88,0.792,89,1.049,90,1.049,93,2.068,95,0.364,96,0.228,106,0.162,107,0.251,108,0.764,109,0.889,125,1.702,133,0.013,134,0.013,135,0.698,136,0.794,137,1.29,138,0.997,139,0.997,140,0.997,141,0.997,143,0.997,144,2.434,145,2.298,146,1.446,148,1.446,153,0.889,154,1.446,155,1.446,156,0.997,157,1.867,158,0.997,159,0.794,160,1.446,161,0.997,162,0.794,163,0.997,164,0.84,165,1.903,166,1.516,167,0.997,168,0.794,169,0.997,170,0.794,171,0.997,172,0.75,173,0.997,174,0.75,175,0.997,176,0.84,177,0.941,178,0.794,179,0.941,180,0.997,181,0.794,182,0.889,183,0.997,184,0.75,185,1.872,186,0.997,187,0.75,188,0.997,189,0.75,190,1.872,191,0.997,192,0.794,193,0.889,194,0.997,195,1.647,196,0.997,197,0.75,198,0.889,199,0.997,200,0.75,201,2.014,202,0.997,203,0.997,289,1.726,294,0.997,305,3.311,306,3.311,311,1.804,312,2.628,319,2.416,321,1.644,323,1.726,325,3.19,327,2.649,375,2.608,378,1.836,394,2.243,402,1.804,411,1.845,442,2.618,443,2.7,452,2.243,453,2.227,458,3.955,465,1.836,468,2.86,505,4.084,546,1.121,547,1.726,548,1.804,550,2.099,551,1.266,552,1.913,562,1.266,572,1.804,573,1.121,574,1.19,575,2.228,576,2.456,577,1.913,578,1.913,579,2.228,581,1.121,582,2.032,583,1.121,586,1.913,587,1.913,589,1.121,592,1.19,594,1.957,596,1.19,600,1.121,603,1.913,621,2.032,622,2.161,624,1.266,631,1.349,666,2.639,672,2.896,686,2.957,696,2.092,698,2.092,729,1.804,762,2.86,825,4.609,835,3.164,838,2.416,919,1.957,945,1.546,946,1.349,1060,1.546,1096,5.896,1098,3.57,1101,4.202,1102,4.202,1103,4.202,1104,4.202,1105,4.609,1106,4.609,1107,4.609,1108,4.084,1109,4.609,1110,3.57,1112,3.164,1119,3.57,1122,3.164,1123,4.609,1124,3.57,1125,3.57,1127,3.57,1128,3.57,1132,3.164,1133,2.181,1134,2.461,1135,2.461,1136,2.461,1137,2.461,1138,3.57,1139,3.57,1140,3.57,1141,3.57,1142,2.461,1143,2.461,1144,2.461,1145,2.461,1146,1.804,1147,2.461,1148,2.461,1152,2.618,1202,2.181,1213,1.804,1240,2.181,1242,3.723,1243,2.181,1244,2.181,1245,2.181,1246,2.181,1247,2.181,1248,1.804,1249,2.181,1250,2.181,1251,2.181,1252,1.971,1253,2.181,1254,2.181,1377,3.57,2044,2.461,2045,5.406,2046,4.187,2047,4.187,2048,4.187,2049,4.187,2050,4.928,2051,4.187,2052,5.406,2053,5.406,2054,4.187,2055,2.886,2056,2.886,2057,2.886,2058,2.886,2059,5.406,2060,2.886,2061,2.886,2062,2.886,2063,2.886,2064,2.886,2065,2.886,2066,5.394,2067,2.886,2068,2.886,2069,2.886,2070,4.187,2071,2.886]],["title/components/SignUpComponent.html",[135,0.435,197,0.931]],["body/components/SignUpComponent.html",[3,0.144,4,0.126,5,0.126,8,0.701,12,1.326,14,0.617,15,0.594,19,1.253,22,0.706,25,0.244,26,0.466,27,0.701,35,0.932,38,1.048,40,0.942,44,0.468,45,0.023,46,0.532,47,0.364,48,0.386,56,1.589,60,0.822,63,1.49,89,0.893,90,0.893,95,0.444,96,0.203,106,0.144,107,0.223,108,0.701,110,0.594,113,0.498,116,1.281,119,1.487,125,2.113,128,2.187,133,0.012,134,0.012,135,0.559,136,0.706,137,1.183,138,0.886,139,0.886,140,0.886,141,0.886,143,0.886,144,2.397,145,2.264,146,1.326,148,1.326,153,0.79,154,1.326,155,1.326,156,0.886,157,1.764,158,0.886,159,0.706,160,1.326,161,0.886,162,0.706,163,0.886,164,0.747,165,0.79,166,0.63,167,0.886,168,0.706,169,0.886,170,0.706,171,0.886,172,0.667,173,0.886,174,0.667,175,0.886,176,0.747,177,0.836,178,0.706,179,0.836,180,0.886,181,0.706,182,0.79,183,0.886,184,0.667,185,1.5,186,0.886,187,0.667,188,0.886,189,0.667,190,2.04,191,0.886,192,0.706,193,0.79,194,0.886,195,0.706,196,0.886,197,1.491,198,2.018,199,0.886,200,0.667,201,1.5,202,0.886,203,0.886,219,3.608,230,1.752,234,4.271,259,2.187,289,1.057,294,0.886,298,1.917,301,3.858,305,2.214,306,3.608,312,2.542,321,1.491,325,2.239,326,2.187,327,2.228,335,1.281,349,3.273,371,1.927,375,1.582,379,2.622,384,1.405,411,1.768,420,1.405,432,2.254,435,1.057,453,1.982,466,3.858,467,3.273,469,2.399,485,1.582,501,2.9,502,2.398,503,3.273,506,1.405,517,1.938,519,2.187,520,1.938,523,1.982,529,1.326,544,2.522,545,1.683,546,0.996,547,1.896,548,2.446,549,1.199,550,2.428,551,1.683,552,2.51,557,1.281,560,1.374,561,3.142,563,2.522,564,1.582,565,1.752,566,1.374,567,2.017,568,2.15,569,1.752,573,1.49,574,1.057,575,2.594,576,2.668,577,2.428,578,2.428,579,2.542,580,2.056,581,1.786,582,1.057,583,2.123,585,1.199,586,1.786,587,1.786,589,1.49,590,1.374,591,1.125,592,1.582,596,1.896,597,1.917,600,0.996,603,2.374,610,2.622,611,1.938,612,3.919,613,3.142,614,2.622,616,1.752,619,1.752,621,2.452,622,2.398,624,2.516,625,3.418,627,1.281,628,1.938,629,2.622,630,2.399,631,1.199,632,1.938,633,1.281,634,1.603,635,2.9,636,1.938,637,1.603,638,1.603,641,1.057,642,1.125,643,1.125,650,1.281,651,1.281,657,1.199,658,1.199,659,1.125,662,2.622,673,4.354,686,2.387,702,2.946,739,3.475,747,2.608,748,1.281,816,3.273,839,4.177,864,2.622,919,1.794,921,1.374,945,1.374,946,1.199,1045,1.374,1046,1.374,1056,1.938,1060,1.374,1064,2.056,1146,1.603,1178,2.9,1200,1.48,1204,1.48,1207,1.603,1209,1.603,1248,2.399,1258,4.318,1265,3.922,1268,4.354,1273,4.354,1278,2.298,1281,3.273,1298,4.354,1310,3.273,1335,3.273,1336,2.399,1337,2.399,1338,2.187,1339,2.187,1340,2.187,1341,2.187,1342,2.187,1343,2.187,1344,2.187,1345,2.187,1346,2.187,1347,2.187,1348,3.273,1349,3.273,1350,2.187,1351,2.187,1352,2.187,1353,1.603,1354,2.187,1355,2.187,1356,2.187,1357,2.187,1358,2.187,1359,2.187,1366,1.938,1367,2.9,1381,2.622,1385,3.273,2066,3.273,2072,5.332,2073,2.187,2074,5.43,2075,3.838,2076,3.838,2077,4.6,2078,3.838,2079,4.6,2080,5.106,2081,2.565,2082,3.838,2083,3.838,2084,2.565,2085,2.565,2086,4.6,2087,2.565,2088,5.106,2089,5.106,2090,3.838,2091,2.565,2092,2.565,2093,3.838,2094,3.922,2095,3.838,2096,2.565,2097,3.273,2098,2.565,2099,2.565,2100,2.565,2101,2.565,2102,2.565,2103,2.565,2104,2.565,2105,3.838,2106,3.838,2107,2.565,2108,2.565,2109,1.752,2110,1.48,2111,1.752,2112,1.938,2113,2.565,2114,5.106,2115,3.838,2116,2.565,2117,2.565,2118,2.565,2119,2.565,2120,2.565]],["title/interfaces/Subtask.html",[405,0.879,2121,1.789]],["body/interfaces/Subtask.html",[0,0.581,3,0.22,4,0.191,5,0.191,8,1.056,14,0.628,17,2.58,18,2.58,25,0.248,26,0.628,27,0.943,35,0.713,37,2.391,40,0.959,41,1.516,42,2.273,43,2.127,45,0.023,47,0.457,48,0.926,49,1.825,53,1.342,56,1.784,60,0.99,61,1.943,62,2.212,63,1.516,64,2.414,66,2.95,72,1.81,74,1.95,75,2.347,81,2.005,82,1.712,85,1.825,86,2.091,87,2.58,88,0.93,92,2.253,93,1.784,95,0.557,96,0.309,97,1.274,99,1.015,100,1.712,102,1.61,103,2.58,104,1.203,105,1.137,106,0.29,107,0.34,108,1.225,109,1.203,110,0.905,113,1.302,115,2.441,116,1.95,117,2.253,119,1.984,133,0.016,134,0.016,321,1.665,353,2.265,384,1.89,385,2.766,402,2.441,405,1.421,407,1.825,413,2.766,414,2.58,415,1.825,416,2.091,420,2.118,422,2.441,425,1.95,426,2.091,441,2.441,506,1.89,541,2.98,542,2.253,664,1.825,748,2.58,754,2.98,797,1.712,982,2.253,1205,3.185,1278,1.95,1285,2.253,2110,2.253,2112,2.95,2121,3.695,2122,2.95,2123,3.228,2124,4.113,2125,3.528,2126,3.618,2127,3.329,2128,3.902,2129,3.902,2130,3.329,2131,3.329,2132,3.329,2133,2.441,2134,2.441,2135,3.329,2136,3.329,2137,3.329,2138,3.329,2139,3.329,2140,4.403,2141,3.329,2142,3.329,2143,3.329,2144,3.329,2145,3.329,2146,3.329,2147,3.329,2148,3.329,2149,2.441,2150,3.329,2151,3.329,2152,2.95,2153,3.329,2154,2.253,2155,4.934,2156,3.329,2157,3.329,2158,3.329,2159,2.253,2160,3.329,2161,3.329,2162,3.329]],["title/interfaces/Subtask-1.html",[405,0.736,435,1.236,2121,1.497]],["body/interfaces/Subtask-1.html",[0,0.534,3,0.194,4,0.169,5,0.169,8,1.186,11,1.191,13,2.544,14,0.554,17,2.372,18,2.372,19,1.166,20,2.969,24,1.723,25,0.346,26,0.577,27,0.867,28,2.355,35,0.629,37,2.272,40,0.847,41,1.339,42,2.191,43,2.022,45,0.023,47,0.429,48,1.033,49,1.612,52,2.156,53,0.896,56,2.12,60,0.954,61,1.905,62,2.12,63,1.339,64,1.612,72,1.89,74,1.723,75,2.338,81,1.844,85,1.612,86,1.847,87,2.372,88,1.08,89,0.669,92,1.989,93,1.191,94,2.355,95,0.534,96,0.273,97,1.125,99,0.896,100,1.512,102,1.422,103,1.723,104,1.063,105,1.004,106,0.305,107,0.3,108,1.186,109,1.063,110,1.101,113,1.231,117,1.989,119,1.892,133,0.014,134,0.014,150,3.71,166,1.809,321,1.689,353,2.083,371,1.463,384,1.262,385,1.847,396,3.244,405,1.507,406,2.909,407,1.612,410,3.659,412,2.156,413,3.135,414,2.713,415,1.612,416,1.847,420,1.738,424,1.989,425,2.923,426,1.847,465,1.512,470,2.156,506,1.738,529,1.191,531,3.396,535,2.355,541,1.989,542,2.74,747,1.512,748,3.169,754,3.134,797,1.512,982,1.989,1066,2.544,1179,2.355,1205,3.095,1278,2.372,1285,1.989,1336,2.156,1337,2.156,1353,2.156,2109,2.355,2110,2.74,2111,3.244,2121,3.459,2123,2.969,2124,3.966,2126,3.837,2133,2.156,2134,2.156,2149,2.156,2154,1.989,2159,1.989,2163,2.355,2164,2.605,2165,3.71,2166,3.244,2167,2.355,2168,2.355,2169,3.244,2170,2.355,2171,2.355,2172,2.605,2173,2.605,2174,3.588,2175,2.605,2176,2.605,2177,3.71,2178,2.355,2179,2.355,2180,2.605,2181,2.605,2182,2.74,2183,2.605,2184,2.605,2185,2.605,2186,2.605,2187,2.605,2188,2.605,2189,2.605,2190,2.605,2191,2.605,2192,2.605,2193,2.605,2194,2.605,2195,2.605,2196,2.605,2197,2.605,2198,2.605,2199,2.605,2200,2.355,2201,2.605,2202,2.605,2203,2.605,2204,2.605,2205,3.588,2206,2.605,2207,2.605,2208,2.605,2209,2.605,2210,2.605,2211,2.605,2212,2.605,2213,3.588,2214,2.355,2215,2.605,2216,2.355,2217,2.605,2218,2.605]],["title/injectables/SubtaskService.html",[0,0.403,2125,2.446]],["body/injectables/SubtaskService.html",[0,0.527,2,1.236,3,0.19,4,0.166,5,0.166,8,1.203,14,0.932,17,2.898,18,2.898,25,0.215,26,0.569,27,1.15,35,0.981,36,1.809,37,2.558,38,1.129,40,1.149,41,1.817,42,2.363,43,2.276,44,1.15,45,0.023,46,0.549,47,0.498,48,0.972,49,2.188,53,1.396,56,2.004,60,1.038,61,1.989,62,2.339,63,1.817,64,2.711,66,3.537,72,1.863,74,2.338,75,2.346,81,2.252,82,2.053,85,2.188,86,2.507,87,2.898,88,0.543,89,0.655,90,0.655,92,2.701,93,1.856,95,0.53,96,0.267,97,1.102,99,0.878,100,1.481,102,1.393,103,2.338,104,1.041,105,0.983,106,0.263,107,0.294,108,1.18,109,1.041,110,0.783,113,1.254,115,2.111,116,1.687,117,1.949,119,2.009,133,0.014,134,0.014,321,1.217,353,2.544,384,2.123,385,3.107,402,2.111,405,1.149,413,1.809,414,1.687,415,1.579,416,1.809,420,2.307,422,3.359,425,2.338,426,2.507,441,2.926,506,1.236,541,3.347,542,2.701,664,2.188,748,1.687,754,1.949,797,2.053,982,2.701,1205,2.511,1278,2.338,1285,2.701,2110,1.949,2112,2.552,2121,3.709,2122,2.552,2123,2.111,2124,2.926,2125,3.962,2126,3.94,2127,3.991,2128,4.383,2129,4.383,2130,3.991,2131,4.946,2132,2.88,2133,2.926,2134,2.926,2135,3.991,2136,2.88,2137,3.991,2138,2.88,2139,2.88,2140,3.991,2141,2.88,2142,3.991,2143,2.88,2144,2.88,2145,2.88,2146,2.88,2147,2.88,2148,2.88,2149,2.926,2150,3.991,2151,2.88,2152,3.537,2153,3.991,2154,2.701,2155,4.581,2156,2.88,2157,2.88,2158,2.88,2159,1.949,2160,2.88,2161,2.88,2162,2.88,2219,4.681,2220,4.681,2221,4.681,2222,3.537,2223,4.681,2224,4.681,2225,3.378,2226,3.378,2227,3.378,2228,3.378,2229,3.378,2230,3.378]],["title/components/SummaryComponent.html",[135,0.435,200,0.931]],["body/components/SummaryComponent.html",[3,0.105,4,0.091,5,0.091,8,0.86,12,1.486,14,0.481,15,0.432,19,1.056,22,0.513,25,0.191,26,0.364,27,0.918,35,0.785,38,1.071,40,0.735,44,0.785,45,0.023,46,0.438,47,0.449,48,0.647,53,1.118,60,0.876,61,1.296,72,1.183,82,1.314,88,0.936,89,0.914,90,0.914,95,0.46,96,0.147,99,0.484,102,0.768,106,0.105,107,0.162,108,0.918,110,1.226,113,0.729,116,0.931,119,0.872,125,2.012,133,0.009,134,0.009,135,0.573,136,0.513,137,0.923,138,0.644,139,0.644,140,0.644,141,0.644,143,0.644,144,2.281,145,2.18,146,1.035,148,1.035,153,0.574,154,1.035,155,1.035,156,0.644,157,1.486,158,0.644,159,0.513,160,1.035,161,0.644,162,0.513,163,0.644,164,0.543,165,1.325,166,1.35,167,0.644,168,0.513,169,0.644,170,0.513,171,0.644,172,0.484,173,0.644,174,0.484,175,0.644,176,0.543,177,0.608,178,0.513,179,0.608,180,0.644,181,0.513,182,0.574,183,0.644,184,0.484,185,0.608,186,0.644,187,0.484,188,0.644,189,0.484,190,0.608,191,0.644,192,0.513,193,0.574,194,0.644,195,0.513,196,0.644,197,0.484,198,0.574,199,0.644,200,1.308,201,1.9,202,0.644,203,0.644,220,2.973,222,2.695,258,1.273,270,2.046,289,1.773,294,0.644,312,2.354,321,1.118,323,1.235,325,0.817,327,1.458,371,1.988,375,1.235,383,1.872,394,0.998,411,2.005,420,0.682,435,1.235,443,2.514,449,2.919,452,2.695,453,1.738,458,1.872,460,1.728,465,1.314,483,1.728,485,1.773,493,1.872,502,1.314,517,1.408,523,1.163,529,2.056,530,1.872,531,4.408,544,1.548,545,0.817,546,1.954,547,1.773,548,2.361,549,2.01,550,2.481,551,1.314,552,2.053,557,0.931,560,0.998,562,1.314,563,2.401,564,0.768,566,0.998,567,0.817,568,2.571,573,1.954,574,0.768,575,2.656,576,2.656,577,2.391,578,2.354,579,2.481,580,0.998,581,1.67,582,1.235,583,1.829,585,1.755,586,1.67,587,1.67,589,1.67,590,2.011,591,1.886,592,1.943,593,1.273,594,1.4,596,2.5,597,2.514,598,1.165,599,1.872,600,0.724,602,1.273,603,2.261,607,1.408,621,2.34,622,2.207,624,2.319,627,0.931,631,2.571,634,2.689,637,3.146,638,1.872,641,1.235,642,0.817,643,0.817,647,0.998,648,0.998,650,1.876,651,0.931,657,0.871,658,0.871,659,0.817,666,2.011,672,2.304,686,0.871,688,2.046,692,2.837,696,1.496,697,2.565,698,2.148,737,2.263,745,2.481,747,1.314,748,2.835,771,1.872,800,3.25,803,2.554,804,2.046,829,2.046,839,2.046,856,2.263,869,2.263,915,1.165,919,2.472,924,1.165,940,1.408,941,1.589,946,2.352,947,1.872,951,1.408,952,2.689,955,2.481,1002,3.667,1030,1.589,1036,2.554,1045,0.998,1046,0.998,1047,1.165,1052,2.263,1053,1.589,1061,1.589,1064,2.011,1066,3.423,1083,3.25,1132,1.408,1133,1.408,1182,1.408,1183,1.589,1200,2.166,1204,1.728,1205,0.871,1213,1.872,1221,1.589,1252,2.938,1278,1.496,1303,2.554,1360,1.589,1361,2.554,1362,1.589,1366,2.263,1367,3.25,1381,2.938,1386,2.554,1401,1.589,2043,1.589,2165,3.876,2166,3.613,2168,2.938,2169,3.437,2170,2.046,2171,2.046,2177,2.046,2178,2.046,2179,2.938,2182,3.498,2200,1.273,2231,1.589,2232,6.604,2233,5.289,2234,3.755,2235,2.995,2236,3.755,2237,3.755,2238,5.675,2239,3.755,2240,2.995,2241,2.995,2242,4.301,2243,2.995,2244,3.755,2245,3.755,2246,1.864,2247,2.995,2248,2.995,2249,1.864,2250,4.301,2251,4.301,2252,4.301,2253,4.301,2254,2.995,2255,1.864,2256,1.864,2257,2.995,2258,1.864,2259,4.301,2260,2.995,2261,2.995,2262,2.995,2263,1.864,2264,1.864,2265,1.864,2266,1.864,2267,1.864,2268,1.864,2269,1.864,2270,1.864,2271,4.301,2272,1.864,2273,2.995,2274,1.864,2275,2.995,2276,2.995,2277,1.864,2278,1.864,2279,2.995,2280,1.864,2281,1.864,2282,1.864,2283,1.864,2284,1.864,2285,1.589,2286,1.864,2287,1.864,2288,1.864,2289,3.755,2290,1.864,2291,4.301,2292,4.301,2293,1.864,2294,1.864,2295,1.589,2296,1.864,2297,1.864,2298,2.995,2299,2.995,2300,2.995,2301,1.864,2302,1.864,2303,1.864,2304,1.864,2305,1.864,2306,1.864,2307,1.864,2308,2.995,2309,1.864,2310,1.864,2311,2.995,2312,1.864,2313,4.301,2314,4.301,2315,2.995,2316,2.995,2317,1.864,2318,1.864,2319,1.864,2320,2.995,2321,2.995,2322,2.995,2323,2.995,2324,2.995,2325,1.864,2326,1.864,2327,2.995,2328,2.995,2329,1.864,2330,3.755,2331,3.755,2332,2.995,2333,3.755,2334,3.755,2335,1.864,2336,1.864,2337,2.995,2338,2.995,2339,1.864,2340,1.864,2341,1.864,2342,1.864,2343,1.864,2344,3.755,2345,3.755,2346,1.864,2347,1.864,2348,1.864,2349,1.864,2350,1.864,2351,2.995,2352,2.995,2353,1.864,2354,4.301,2355,4.301,2356,1.864,2357,1.864,2358,3.755,2359,2.995,2360,2.995,2361,3.755,2362,1.864,2363,1.864,2364,1.864,2365,2.995,2366,1.864,2367,1.864,2368,1.864,2369,3.755,2370,1.864,2371,1.864,2372,1.864,2373,1.864,2374,1.864,2375,2.995,2376,1.864,2377,1.864,2378,1.864,2379,1.864,2380,1.864,2381,1.864,2382,1.864,2383,1.864,2384,1.864,2385,1.864,2386,1.864,2387,2.995,2388,1.864,2389,1.864,2390,1.864,2391,2.995,2392,1.864,2393,1.864,2394,1.864,2395,1.864,2396,1.864,2397,1.864,2398,1.864]],["title/interfaces/Task.html",[166,0.879,405,0.879]],["body/interfaces/Task.html",[0,0.501,3,0.177,4,0.154,5,0.154,8,1.201,11,1.537,13,2.384,14,0.505,17,2.223,18,2.223,19,1.512,20,3.23,24,1.57,25,0.329,26,0.541,27,0.812,28,2.146,35,0.574,37,2.182,40,0.771,41,1.22,42,2.128,43,1.941,45,0.023,47,0.539,48,1.093,49,1.469,52,1.964,53,0.817,56,2.049,60,0.927,61,1.875,62,2.049,63,1.22,64,1.469,72,1.951,74,1.57,75,2.329,81,1.728,85,1.469,86,1.683,87,2.223,88,1.135,89,0.61,92,1.813,93,1.085,94,2.146,95,0.516,96,0.248,97,1.025,99,0.817,100,1.378,102,1.296,103,1.57,104,0.968,105,0.915,106,0.291,107,0.274,108,1.156,109,0.968,110,1.031,113,1.195,117,1.813,119,1.844,133,0.013,134,0.013,150,4.42,166,1.819,321,1.646,353,1.952,371,1.732,384,1.15,385,1.683,396,3.04,405,1.456,406,3.466,407,1.469,410,4.045,412,2.782,413,3.01,414,2.581,415,1.469,416,1.683,420,1.629,424,1.813,425,3.164,426,1.683,465,1.378,470,1.964,506,1.15,529,1.085,531,3.23,535,2.146,541,1.813,542,2.981,747,1.952,748,3.333,754,2.981,797,1.378,982,1.813,1066,3.01,1179,3.04,1205,2.415,1278,2.223,1285,1.813,1336,1.964,1337,1.964,1353,2.782,2109,2.146,2110,2.568,2111,3.04,2121,3.287,2123,1.964,2124,2.782,2126,4.171,2133,1.964,2134,1.964,2149,1.964,2154,1.813,2159,1.813,2163,2.146,2164,2.374,2165,4.42,2166,3.839,2167,3.04,2168,3.04,2169,3.839,2170,3.04,2171,3.04,2172,3.363,2173,4.246,2174,4.246,2175,3.363,2176,4.246,2177,3.839,2178,3.04,2179,3.04,2180,4.246,2181,4.246,2182,2.568,2183,2.374,2184,2.374,2185,2.374,2186,2.374,2187,2.374,2188,2.374,2189,2.374,2190,2.374,2191,2.374,2192,2.374,2193,2.374,2194,2.374,2195,2.374,2196,2.374,2197,2.374,2198,2.374,2199,2.374,2200,2.146,2201,2.374,2202,2.374,2203,2.374,2204,2.374,2205,3.363,2206,2.374,2207,2.374,2208,2.374,2209,2.374,2210,2.374,2211,2.374,2212,2.374,2213,3.363,2214,2.146,2215,2.374,2216,2.146,2217,2.374,2218,2.374]],["title/injectables/TaskService.html",[0,0.403,2182,2.066]],["body/injectables/TaskService.html",[0,0.486,2,1.103,3,0.169,4,0.148,5,0.148,8,1.222,11,1.041,13,2.954,14,0.886,17,2.754,18,2.754,19,1.06,20,3.156,24,2.157,25,0.321,26,0.525,27,1.109,28,3.448,35,0.921,36,1.614,37,2.485,38,1.097,40,1.06,41,1.677,42,2.312,43,2.211,44,1.109,45,0.023,46,0.529,47,0.48,48,1.034,49,2.019,52,2.7,53,1.123,56,2.284,60,1.017,61,1.967,62,2.284,63,1.677,64,2.019,72,1.903,74,2.157,75,2.338,81,2.141,85,2.019,86,2.313,87,2.754,88,1.006,89,0.98,90,0.585,92,2.492,93,1.492,94,2.95,95,0.508,96,0.238,97,0.983,99,0.783,100,1.321,102,1.242,103,1.505,104,0.928,105,0.877,106,0.284,107,0.262,108,1.142,109,0.928,110,1.001,113,1.179,117,1.738,119,1.986,133,0.013,134,0.013,150,3.448,166,1.823,303,3.682,321,1.433,353,2.418,371,1.331,384,1.581,385,2.313,396,3.766,405,1.354,406,2.704,410,3.447,412,1.883,413,2.954,414,2.157,415,1.408,416,1.614,420,2.018,424,2.492,425,2.916,426,2.313,465,1.894,470,2.7,506,1.103,529,1.041,531,3.797,535,2.058,541,2.492,542,2.913,747,1.321,748,3.034,754,2.492,797,1.894,982,2.492,1066,2.313,1179,2.058,1205,2.36,1278,2.754,1285,2.492,1336,1.883,1337,1.883,1353,1.883,2109,2.058,2110,2.492,2111,2.95,2121,3.125,2123,1.883,2124,2.7,2126,3.797,2133,2.7,2134,2.7,2149,2.7,2154,2.492,2159,1.738,2163,2.058,2164,2.276,2165,3.448,2166,2.95,2167,2.058,2168,2.058,2169,2.95,2170,2.058,2171,2.058,2172,2.276,2173,2.276,2174,3.263,2175,2.276,2176,2.276,2177,3.766,2178,2.058,2179,2.058,2180,2.276,2181,2.276,2182,3.181,2183,3.263,2184,3.263,2185,3.263,2186,2.276,2187,2.276,2188,2.276,2189,2.276,2190,2.276,2191,2.276,2192,2.276,2193,4.166,2194,2.276,2195,2.276,2196,2.276,2197,3.263,2198,2.276,2199,3.263,2200,2.058,2201,2.276,2202,2.276,2203,3.263,2204,3.263,2205,3.263,2206,2.276,2207,2.276,2208,2.276,2209,2.276,2210,2.276,2211,2.276,2212,2.276,2213,3.263,2214,2.058,2215,2.276,2216,2.058,2217,3.263,2218,2.276,2222,3.263,2399,4.319,2400,4.319,2401,4.319,2402,4.319,2403,3.013,2404,3.013,2405,3.013,2406,3.013,2407,3.013,2408,3.013]],["title/interfaces/User.html",[371,1.103,405,0.879]],["body/interfaces/User.html",[3,0.309,4,0.269,5,0.269,15,1.273,25,0.35,26,0.821,45,0.022,46,0.605,47,0.534,72,1.857,75,2.267,88,1.151,106,0.309,133,0.019,134,0.019,271,4.151,371,2.08,405,1.349,407,2.568,432,2.866,1168,4.151,2409,4.684]],["title/interfaces/User-1.html",[371,0.923,405,0.736,435,1.236]],["body/interfaces/User-1.html",[3,0.309,4,0.269,5,0.269,15,1.273,25,0.35,26,0.821,45,0.022,46,0.605,47,0.534,72,1.857,75,2.267,88,1.151,106,0.309,133,0.019,134,0.019,271,4.151,371,2.08,405,1.349,407,2.568,432,2.866,1168,4.151,2410,4.684]],["title/injectables/UserRegistrationService.html",[0,0.403,219,2.066]],["body/injectables/UserRegistrationService.html",[0,0.601,2,1.505,3,0.231,4,0.202,5,0.202,8,1.147,12,2.305,14,0.858,25,0.262,26,0.649,27,1.218,35,1.083,36,2.202,37,2.674,38,1.077,40,1.311,41,2.074,42,2.249,43,2.17,44,1.083,45,0.023,46,0.581,47,0.537,48,0.893,49,2.497,53,1.542,56,2.17,57,3.339,60,0.945,61,1.869,62,2.17,63,2.439,64,2.936,70,3.648,88,1.047,89,0.798,90,0.798,93,1.845,95,0.547,96,0.325,97,1.341,99,1.068,100,1.803,102,1.695,103,2.053,104,1.267,105,1.197,106,0.231,107,0.358,108,1.083,109,1.267,110,0.953,111,3.709,113,1.037,119,2.092,120,3.505,125,1.42,126,3.505,133,0.016,134,0.016,219,3.624,371,2.193,384,2.299,385,2.861,420,1.955,424,3.624,432,2.446,465,2.342,485,1.695,520,3.106,664,2.497,797,2.755,857,4.554,989,4.036,1166,3.648,1258,3.709,1382,4.554,1396,4.554,2074,6.127,2094,5.059,2128,4.036,2129,4.746,2152,4.036,2154,3.082,2214,2.808,2216,2.808,2222,4.036,2411,3.505,2412,5.341,2413,6.282,2414,5.934,2415,5.341,2416,5.341,2417,4.111,2418,5.341,2419,4.554,2420,5.341,2421,5.341,2422,4.111,2423,5.341,2424,5.934,2425,5.341,2426,4.111]],["title/injectables/UserService.html",[0,0.403,220,1.789]],["body/injectables/UserService.html",[0,0.56,2,1.351,3,0.208,4,0.181,5,0.181,8,1.027,12,1.718,14,0.8,21,3.11,24,2.485,25,0.235,26,0.605,27,1.182,35,0.674,36,1.977,37,2.514,38,1.11,41,1.931,42,2.171,43,1.718,44,0.908,45,0.023,46,0.433,47,0.445,48,0.748,53,1.565,56,2.236,59,2.87,60,0.945,61,1.939,67,2.308,68,3.11,69,3.544,70,3.398,79,3.759,81,1.931,85,2.325,86,2.665,88,0.593,89,0.965,90,0.965,93,1.718,95,0.547,96,0.292,97,1.204,98,2.789,99,0.96,100,1.619,101,2.789,102,1.522,104,1.138,105,1.075,106,0.208,107,0.321,108,0.908,109,1.138,110,1.304,111,3.517,113,1.168,115,2.308,116,1.844,119,1.075,122,3.517,123,2.308,124,2.522,133,0.015,134,0.015,220,3.008,286,4.242,353,2.182,371,2.296,420,2.204,442,3.764,443,3.616,449,3.273,452,3.225,453,1.718,454,4.242,456,5,465,2.182,485,2.482,664,3.249,685,3.759,696,2.485,702,2.87,807,4.797,838,2.87,989,3.759,1016,3.148,1169,5.084,1171,5.084,1182,2.789,1192,3.148,1292,4.242,1381,3.398,1402,4.242,2097,4.242,2285,5.134,2427,3.148,2428,4.975,2429,4.975,2430,5.627,2431,5.627,2432,6.021,2433,4.975,2434,4.975,2435,4.975,2436,3.692,2437,6.021,2438,3.692,2439,4.975,2440,3.692,2441,4.975,2442,4.975,2443,4.975,2444,3.692,2445,3.692,2446,3.692,2447,3.692,2448,3.692,2449,3.692,2450,3.692,2451,3.692,2452,3.692,2453,3.692,2454,3.692,2455,3.692,2456,3.692]],["title/coverage.html",[2457,4.155]],["body/coverage.html",[0,0.803,1,2.246,5,0.206,6,2.419,7,3.575,11,1.869,45,0.023,47,0.331,53,1.09,133,0.016,134,0.016,135,0.886,136,1.153,142,3.575,159,1.153,162,1.153,164,1.221,166,1.471,168,1.153,170,1.153,172,1.09,174,1.09,176,1.221,178,1.153,181,1.153,182,1.667,184,1.09,187,1.09,189,1.09,192,1.153,195,1.153,197,1.09,200,1.09,218,2.621,219,2.419,220,2.094,234,2.864,236,3.168,239,3.168,243,3.168,245,3.168,252,3.121,254,3.168,261,2.864,263,2.864,265,3.168,267,3.168,274,3.575,276,3.575,281,2.864,284,2.864,295,2.864,308,3.168,310,3.575,328,3.695,330,3.575,366,3.168,367,3.575,368,3.575,371,1.667,405,1.698,406,2.246,408,4.088,414,2.094,415,2.529,417,2.864,431,3.575,436,3.575,437,3.168,438,3.575,463,3.957,464,3.575,523,2.87,529,2.488,630,2.621,663,3.575,743,2.621,744,2.864,745,2.419,746,3.575,769,3.575,794,2.864,866,3.168,958,3.575,1065,4.088,1066,2.246,1067,3.575,1068,3.575,1086,3.575,1093,3.575,1094,3.575,1155,3.575,1156,3.575,1214,3.575,1215,3.575,1256,3.575,1275,2.864,1370,3.575,1404,3.575,1405,3.575,2016,3.575,2017,3.575,2021,3.575,2044,3.575,2072,3.575,2073,3.575,2121,2.703,2122,4.088,2125,2.864,2163,4.091,2182,2.419,2231,3.575,2409,3.575,2410,3.575,2411,3.575,2427,3.575,2457,3.575,2458,4.193,2459,4.193,2460,5.411,2461,5.99,2462,4.193,2463,5.411,2464,4.193,2465,4.193,2466,4.193,2467,5.99,2468,5.411,2469,4.193,2470,4.193,2471,4.193,2472,4.193,2473,4.193,2474,6.552,2475,4.193,2476,4.193,2477,4.193,2478,4.193,2479,4.193,2480,4.193,2481,5.411,2482,6.552,2483,4.193,2484,4.193,2485,5.411,2486,6.709,2487,4.193,2488,5.411,2489,3.575,2490,5.411,2491,3.575,2492,4.193,2493,4.193]],["title/dependencies.html",[207,2.939,2494,2.264]],["body/dependencies.html",[45,0.023,96,0.43,99,1.414,133,0.019,134,0.019,207,3.717,209,3.97,227,5.415,228,4.798,230,3.717,249,3.402,250,3.717,294,1.88,2495,5.442,2496,7.261,2497,5.442,2498,5.442,2499,5.442,2500,5.442,2501,5.442,2502,5.442,2503,5.442,2504,5.442,2505,5.442,2506,5.442,2507,5.442,2508,5.442,2509,5.442,2510,5.442,2511,5.442,2512,5.442,2513,5.442]],["title/index.html",[25,0.191,2514,2.997,2515,2.997]],["body/index.html",[4,0.253,15,1.195,45,0.019,46,0.449,53,1.34,68,3.223,133,0.019,134,0.019,135,0.799,222,2.761,249,4.461,323,2.126,325,2.261,344,4.396,355,3.895,378,2.883,379,3.521,420,2.252,656,6.02,771,3.223,1195,4.202,1700,5.245,2159,2.974,2167,3.521,2419,4.396,2494,3.895,2516,5.156,2517,5.156,2518,6.575,2519,4.396,2520,5.156,2521,5.156,2522,6.958,2523,5.156,2524,5.156,2525,5.156,2526,5.156,2527,5.156,2528,5.156,2529,5.156,2530,5.156,2531,5.156,2532,6.575,2533,6.575,2534,5.156,2535,6.809,2536,5.156,2537,5.156,2538,5.156,2539,6.152,2540,6.152,2541,6.809,2542,5.156,2543,6.152,2544,5.156,2545,5.156,2546,5.156,2547,5.156,2548,6.152,2549,5.156,2550,5.156,2551,5.156,2552,6.575,2553,5.156,2554,5.156]],["title/modules.html",[206,3.046]],["body/modules.html",[45,0.02,133,0.02,134,0.02,205,3.926,206,3.593,217,3.593,228,4.343,383,3.593,1154,4.901,2555,5.748,2556,6.555,2557,5.748]],["title/overview.html",[771,3.046]],["body/overview.html",[2,1.755,45,0.023,133,0.018,134,0.018,136,1.935,137,1.478,153,1.478,159,1.753,162,1.753,164,1.855,168,1.753,170,1.753,172,1.656,174,1.656,176,1.855,178,1.753,181,1.753,184,1.656,187,1.656,189,1.656,192,1.753,193,1.478,195,1.753,197,1.656,200,1.656,204,3.276,205,5.143,206,2.998,207,3.276,208,4.089,209,2.998,210,4.089,211,3.623,212,4.089,213,4.089,214,4.089,215,4.089,216,4.089,217,3.983,218,3.983,219,3.676,220,3.183,221,5.02,222,2.569,293,3.276,308,3.623,407,2.242,435,1.977,558,2.998,771,2.998,1561,4.089,2295,4.089,2558,4.796,2559,4.796]],["title/properties.html",[26,0.523,2494,2.264]],["body/properties.html",[26,0.704,45,0.021,133,0.02,134,0.02,2519,4.938,2560,5.791]],["title/routes.html",[293,3.328]],["body/routes.html",[45,0.02,133,0.02,134,0.02,293,3.97]],["title/miscellaneous/variables.html",[2561,2.555,2562,3.669]],["body/miscellaneous/variables.html",[25,0.355,45,0.022,47,0.509,56,2.224,89,1.25,90,1.25,91,5.491,133,0.019,134,0.019,327,2.5,415,3.264,422,4.026,2489,4.752,2491,4.752,2561,4.752,2562,4.752,2563,5.574,2564,5.574,2565,6.44]]],"invertedIndex":[["",{"_index":45,"title":{},"body":{"injectables/AddContactService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"injectables/ContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScreenSizeService.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":529,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask-1.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["0.0.0",{"_index":2560,"title":{},"body":{"properties.html":{}}}],["0.1",{"_index":556,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["0.13.0",{"_index":2513,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":2339,"title":{},"body":{"components/SummaryComponent.html":{}}}],["0.25",{"_index":1048,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["0.2s",{"_index":2355,"title":{},"body":{"components/SummaryComponent.html":{}}}],["0.5s",{"_index":636,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/SignUpComponent.html":{}}}],["0.5vw",{"_index":599,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/SummaryComponent.html":{}}}],["0.75rem",{"_index":931,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["0/1",{"_index":2482,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2466,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2467,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2461,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2460,"title":{},"body":{"coverage.html":{}}}],["000000",{"_index":554,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{}}}],["007cee",{"_index":936,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{}}}],["02742",{"_index":1576,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["091931",{"_index":1152,"title":{},"body":{"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{}}}],["0px",{"_index":650,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsViewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["0vh",{"_index":942,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{}}}],["1",{"_index":435,"title":{"interfaces/Contact-1.html":{},"injectables/CustomDateParserFormatter-1.html":{},"interfaces/Subtask-1.html":{},"interfaces/User-1.html":{}},"body":{"components/ContactsAddComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{},"overview.html":{}}}],["1).touppercase",{"_index":894,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["1.25rem",{"_index":632,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/SignUpComponent.html":{}}}],["1.3rem",{"_index":926,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["1.5rem",{"_index":1359,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["1.5s",{"_index":2392,"title":{},"body":{"components/SummaryComponent.html":{}}}],["1.5vw",{"_index":1035,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["10",{"_index":558,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"overview.html":{}}}],["100",{"_index":523,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{},"coverage.html":{}}}],["100px",{"_index":645,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{}}}],["100vh",{"_index":551,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["100vw",{"_index":549,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["1024px",{"_index":659,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"injectables/ScreenSizeService.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["1025px",{"_index":648,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SummaryComponent.html":{}}}],["10px",{"_index":945,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{}}}],["10vh",{"_index":562,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SummaryComponent.html":{}}}],["11",{"_index":570,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["110px",{"_index":2338,"title":{},"body":{"components/SummaryComponent.html":{}}}],["12",{"_index":2295,"title":{},"body":{"components/SummaryComponent.html":{},"overview.html":{}}}],["12/12",{"_index":2475,"title":{},"body":{"coverage.html":{}}}],["120px",{"_index":604,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{}}}],["12vh",{"_index":2376,"title":{},"body":{"components/SummaryComponent.html":{}}}],["13",{"_index":1226,"title":{},"body":{"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["13/13",{"_index":2481,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":539,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["15.1.2",{"_index":2505,"title":{},"body":{"dependencies.html":{}}}],["15/15",{"_index":2488,"title":{},"body":{"coverage.html":{}}}],["150px",{"_index":2373,"title":{},"body":{"components/SummaryComponent.html":{}}}],["15172536808",{"_index":1232,"title":{},"body":{"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["15px",{"_index":1059,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["15vh",{"_index":952,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/SummaryComponent.html":{}}}],["15vw",{"_index":1242,"title":{},"body":{"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{}}}],["16.1.0",{"_index":2496,"title":{},"body":{"dependencies.html":{}}}],["16.1.2",{"_index":2520,"title":{},"body":{"index.html":{}}}],["16.2.0",{"_index":2498,"title":{},"body":{"dependencies.html":{}}}],["16/16",{"_index":2483,"title":{},"body":{"coverage.html":{}}}],["16px",{"_index":583,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["17px",{"_index":1063,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["17vw",{"_index":653,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["18",{"_index":2558,"title":{},"body":{"overview.html":{}}}],["18/18",{"_index":2478,"title":{},"body":{"coverage.html":{}}}],["18px",{"_index":614,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["1].substring(0",{"_index":897,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["1px",{"_index":929,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["1rem",{"_index":1061,"title":{},"body":{"components/ContactsViewComponent.html":{},"components/SummaryComponent.html":{}}}],["1s",{"_index":2393,"title":{},"body":{"components/SummaryComponent.html":{}}}],["2",{"_index":1561,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"overview.html":{}}}],["2.11.6",{"_index":2507,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":2511,"title":{},"body":{"dependencies.html":{}}}],["2.5rem",{"_index":1053,"title":{},"body":{"components/ContactsViewComponent.html":{},"components/SummaryComponent.html":{}}}],["20px",{"_index":627,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["20vh",{"_index":662,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["21",{"_index":1772,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["22/23",{"_index":2477,"title":{},"body":{"coverage.html":{}}}],["24px",{"_index":927,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["25",{"_index":1602,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["29abe2",{"_index":592,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["2a3647",{"_index":573,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["2px",{"_index":1204,"title":{},"body":{"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["2rem",{"_index":737,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{},"components/SummaryComponent.html":{}}}],["2s",{"_index":1362,"title":{},"body":{"components/LoginComponent.html":{},"components/SummaryComponent.html":{}}}],["3",{"_index":633,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SignUpComponent.html":{}}}],["3/3",{"_index":2484,"title":{},"body":{"coverage.html":{}}}],["30/33",{"_index":2471,"title":{},"body":{"coverage.html":{}}}],["3000",{"_index":519,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/SignUpComponent.html":{}}}],["30px",{"_index":565,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["30vh",{"_index":572,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{}}}],["30vw",{"_index":944,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["31vw",{"_index":2349,"title":{},"body":{"components/SummaryComponent.html":{}}}],["32px",{"_index":651,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["35vw",{"_index":649,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["38vw",{"_index":655,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["3px",{"_index":590,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["3s",{"_index":2386,"title":{},"body":{"components/SummaryComponent.html":{}}}],["3vw",{"_index":652,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["4",{"_index":1901,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["4/4",{"_index":2486,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":1358,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["401",{"_index":373,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["40px",{"_index":1060,"title":{},"body":{"components/ContactsViewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{}}}],["43/44",{"_index":2465,"title":{},"body":{"coverage.html":{}}}],["47/47",{"_index":2473,"title":{},"body":{"coverage.html":{}}}],["47vw",{"_index":2342,"title":{},"body":{"components/SummaryComponent.html":{}}}],["48px",{"_index":955,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SummaryComponent.html":{}}}],["49",{"_index":1231,"title":{},"body":{"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["4px",{"_index":924,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SummaryComponent.html":{}}}],["5",{"_index":1221,"title":{},"body":{"components/LegalNoticeComponent.html":{},"components/SummaryComponent.html":{}}}],["5.3.3",{"_index":2508,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":2485,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":567,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["500",{"_index":1213,"title":{},"body":{"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SummaryComponent.html":{}}}],["5000",{"_index":2290,"title":{},"body":{"components/SummaryComponent.html":{}}}],["50px",{"_index":646,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/FooterBarComponent.html":{}}}],["50vh",{"_index":607,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/SummaryComponent.html":{}}}],["512px",{"_index":660,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{}}}],["53/53",{"_index":2480,"title":{},"body":{"coverage.html":{}}}],["55vh",{"_index":1250,"title":{},"body":{"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{}}}],["55vw",{"_index":951,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/SummaryComponent.html":{}}}],["560px",{"_index":2379,"title":{},"body":{"components/SummaryComponent.html":{}}}],["56px",{"_index":921,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SignUpComponent.html":{}}}],["5px",{"_index":1199,"title":{},"body":{"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["5vh",{"_index":943,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["6",{"_index":1585,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["6.5.1",{"_index":2504,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":1340,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["60px",{"_index":605,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{}}}],["65vh",{"_index":2335,"title":{},"body":{"components/SummaryComponent.html":{}}}],["68",{"_index":1575,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["7.8.0",{"_index":2509,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":2487,"title":{},"body":{"coverage.html":{}}}],["700",{"_index":1036,"title":{},"body":{"components/ContactsViewComponent.html":{},"components/SummaryComponent.html":{}}}],["70vh",{"_index":957,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{}}}],["72px",{"_index":628,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/SignUpComponent.html":{}}}],["740px",{"_index":644,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{}}}],["8",{"_index":2559,"title":{},"body":{"overview.html":{}}}],["8/8",{"_index":2468,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":739,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["80px",{"_index":1030,"title":{},"body":{"components/ContactsViewComponent.html":{},"components/SummaryComponent.html":{}}}],["80vh",{"_index":560,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["80vw",{"_index":620,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{}}}],["82px",{"_index":741,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["85vw",{"_index":1212,"title":{},"body":{"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["87435",{"_index":1227,"title":{},"body":{"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["8px",{"_index":594,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SummaryComponent.html":{}}}],["9",{"_index":1690,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["9/9",{"_index":2474,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":630,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"coverage.html":{}}}],["90vh",{"_index":941,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/SummaryComponent.html":{}}}],["90vw",{"_index":561,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["95",{"_index":2476,"title":{},"body":{"coverage.html":{}}}],["96vw",{"_index":2345,"title":{},"body":{"components/SummaryComponent.html":{}}}],["97",{"_index":2464,"title":{},"body":{"coverage.html":{}}}],["9999",{"_index":1360,"title":{},"body":{"components/LoginComponent.html":{},"components/SummaryComponent.html":{}}}],["_blank",{"_index":2070,"title":{},"body":{"components/SidebarComponent.html":{}}}],["a.name.localecompare(b.name",{"_index":890,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["abgefragt",{"_index":1598,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["abgeschlossener",{"_index":1922,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["abgesehen",{"_index":1866,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["abs",{"_index":1586,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["abs&auml;tzen",{"_index":1719,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["abschnitt",{"_index":1463,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["absolute",{"_index":545,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["absätzen",{"_index":1975,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["abw&auml;gung",{"_index":1855,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["abwägung",{"_index":2003,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["accept",{"_index":2114,"title":{},"body":{"components/SignUpComponent.html":{}}}],["accepted",{"_index":2086,"title":{},"body":{"components/SignUpComponent.html":{}}}],["acceptsprivacypolicy",{"_index":2095,"title":{},"body":{"components/SignUpComponent.html":{}}}],["access",{"_index":380,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"injectables/LoginService.html":{}}}],["accessing",{"_index":421,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{},"injectables/LoginService.html":{}}}],["activatedroute",{"_index":677,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{}}}],["activatedroutesnapshot",{"_index":315,"title":{},"body":{"guards/AuthGuard.html":{}}}],["active",{"_index":1096,"title":{},"body":{"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["activerouteicon",{"_index":1153,"title":{},"body":{"components/FooterBarComponent.html":{}}}],["activerouteiconsidebar",{"_index":1247,"title":{},"body":{"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{}}}],["actual_component",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["add",{"_index":15,"title":{},"body":{"injectables/AddContactService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptorService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"index.html":{}}}],["add'},{'name",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["add.component",{"_index":266,"title":{},"body":{"modules/AppModule.html":{}}}],["add.component.html",{"_index":473,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["add.component.scss",{"_index":472,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["add.component.ts",{"_index":464,"title":{},"body":{"components/ContactsAddComponent.html":{},"coverage.html":{}}}],["add.component.ts:18",{"_index":504,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["add.component.ts:21",{"_index":507,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["add.component.ts:29",{"_index":488,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["add.component.ts:32",{"_index":482,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["add.component.ts:50",{"_index":500,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["add.component.ts:74",{"_index":492,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["add.component.ts:93",{"_index":490,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["add/contacts",{"_index":265,"title":{},"body":{"modules/AppModule.html":{},"components/ContactsAddComponent.html":{},"coverage.html":{}}}],["addcontact",{"_index":29,"title":{},"body":{"injectables/AddContactService.html":{}}}],["addcontact(contactdata",{"_index":50,"title":{},"body":{"injectables/AddContactService.html":{}}}],["addcontactsbackground",{"_index":543,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["addcontactscontentconatiner",{"_index":559,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{}}}],["addcontactservice",{"_index":1,"title":{"injectables/AddContactService.html":{}},"body":{"injectables/AddContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"coverage.html":{}}}],["addcontactsuccess",{"_index":474,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["addcontactsunderline",{"_index":588,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{}}}],["added",{"_index":470,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsOverviewComponent.html":{},"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["addedcontactsuccesscontainer",{"_index":626,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{}}}],["addiconcontainer",{"_index":920,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["addicondesktop",{"_index":949,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["adding",{"_index":118,"title":{},"body":{"injectables/AddContactService.html":{},"interceptors/AuthInterceptor.html":{},"components/ContactsAddComponent.html":{},"components/ContactsOverviewComponent.html":{}}}],["address",{"_index":538,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{}}}],["adds",{"_index":52,"title":{},"body":{"injectables/AddContactService.html":{},"components/ContactsOverviewComponent.html":{},"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["addtask",{"_index":303,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TaskService.html":{}}}],["addtask(task",{"_index":2199,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["addtaskcomponent",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adjust",{"_index":269,"title":{},"body":{"modules/AppModule.html":{},"injectables/ContactService.html":{}}}],["adressen",{"_index":1661,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["adresszeile",{"_index":1890,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["again",{"_index":1337,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["aktiviert",{"_index":1898,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["align",{"_index":577,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["alle",{"_index":1433,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["allein",{"_index":1655,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["allem",{"_index":1501,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["allen",{"_index":1914,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["allgemeine",{"_index":1413,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["alliconscontainer",{"_index":1249,"title":{},"body":{"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{}}}],["allowing",{"_index":763,"title":{},"body":{"injectables/ContactsOverlayService.html":{}}}],["allows",{"_index":665,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{},"components/LoginComponent.html":{}}}],["alpha",{"_index":555,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{}}}],["alphabetically",{"_index":773,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["als",{"_index":1884,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["analyse",{"_index":1520,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["anbieter",{"_index":1566,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["andere",{"_index":1487,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["anderen",{"_index":1657,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["anderweitiger",{"_index":1822,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["anfrage",{"_index":1909,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["anfrageformular",{"_index":1903,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["anfragen",{"_index":1883,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["angaben",{"_index":1219,"title":{},"body":{"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["angegebenen",{"_index":1906,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["angular",{"_index":378,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"injectables/ScreenSizeService.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["angular's",{"_index":1378,"title":{},"body":{"injectables/LoginService.html":{}}}],["angular/animations",{"_index":2495,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2497,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/drag",{"_index":278,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/cdk/layout",{"_index":2042,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["angular/common",{"_index":2499,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":97,"title":{},"body":{"injectables/AddContactService.html":{},"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":2500,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":96,"title":{},"body":{"injectables/AddContactService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/ContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScreenSizeService.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"components/ContactsEditComponent.html":{},"components/SignUpComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":294,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{},"dependencies.html":{}}}],["animation",{"_index":634,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["anschliessend",{"_index":1808,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["anschlussfragen",{"_index":1910,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["api",{"_index":64,"title":{},"body":{"injectables/AddContactService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{}}}],["apiurl",{"_index":422,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["app.component",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":149,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":147,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":136,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":2526,"title":{},"body":{"index.html":{}}}],["application/json",{"_index":126,"title":{},"body":{"injectables/AddContactService.html":{},"injectables/UserRegistrationService.html":{}}}],["applied",{"_index":395,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["appmodule",{"_index":205,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appropriate",{"_index":1127,"title":{},"body":{"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["approutingmodule",{"_index":217,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["arbeiten",{"_index":1724,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["arbeitsplatzes",{"_index":1816,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["around",{"_index":625,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/FooterBarComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["array",{"_index":425,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/ContactsOverviewComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["art",{"_index":1584,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["artifacts",{"_index":2536,"title":{},"body":{"index.html":{}}}],["assigned",{"_index":2175,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["assigned_to",{"_index":2176,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["associated",{"_index":410,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["assumes",{"_index":1175,"title":{},"body":{"components/HeaderBarMobileComponent.html":{}}}],["assuming",{"_index":1185,"title":{},"body":{"components/HeaderBarMobileComponent.html":{}}}],["async",{"_index":2313,"title":{},"body":{"components/SummaryComponent.html":{}}}],["attempt",{"_index":352,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["attempts",{"_index":1290,"title":{},"body":{"components/LoginComponent.html":{}}}],["au&szlig;erdem",{"_index":1539,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["auch",{"_index":1633,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["auf",{"_index":1410,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["aufbewahrungsfristen",{"_index":1682,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["aufenthalts",{"_index":1815,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["auffordern",{"_index":1920,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["aufgef&uuml;hrten",{"_index":1447,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["aufgeführten",{"_index":1934,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["aufsichts&shy;beh&ouml;rde",{"_index":1810,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["aufsichtsbeh&ouml;rde",{"_index":1556,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["aufsichtsbehörde",{"_index":1946,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["aufsichts­behörde",{"_index":1991,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["auftragsverarbeitern",{"_index":1746,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["auftragsverarbeitung",{"_index":1751,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["aufweisen",{"_index":1644,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["auml",{"_index":1663,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["aus",{"_index":1773,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["aus&uuml;bung",{"_index":1798,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ausdr&uuml;cklichen",{"_index":1695,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ausdrücklichen",{"_index":1967,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ausf&uuml;hrliche",{"_index":1439,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ausführliche",{"_index":1933,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["aush&auml;ndigen",{"_index":1832,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["aushändigen",{"_index":1998,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["auskunft",{"_index":1531,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ausschlie&szlig;lich",{"_index":1600,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ausschließlich",{"_index":1952,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ausübung",{"_index":1988,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["auth",{"_index":1389,"title":{},"body":{"injectables/LoginService.html":{}}}],["auth.guard",{"_index":296,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["authentication",{"_index":21,"title":{},"body":{"injectables/AddContactService.html":{},"interceptors/AuthInterceptorService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/UserService.html":{}}}],["authguard",{"_index":295,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["authinterceptor",{"_index":218,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["authinterceptorservice",{"_index":366,"title":{"interceptors/AuthInterceptorService.html":{}},"body":{"interceptors/AuthInterceptorService.html":{},"coverage.html":{}}}],["authorization",{"_index":67,"title":{},"body":{"injectables/AddContactService.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/LoginService.html":{},"injectables/UserService.html":{}}}],["authreq",{"_index":361,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["authtoken",{"_index":357,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["auto",{"_index":918,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["automatically",{"_index":2527,"title":{},"body":{"index.html":{}}}],["automatisch",{"_index":1488,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["automatisiert",{"_index":1827,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["außerdem",{"_index":1941,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["available",{"_index":383,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/SummaryComponent.html":{},"modules.html":{}}}],["awaiting",{"_index":2327,"title":{},"body":{"components/SummaryComponent.html":{}}}],["b",{"_index":525,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["back",{"_index":986,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["backend",{"_index":392,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["background",{"_index":552,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["bad",{"_index":2190,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["bar",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{},"coverage.html":{}}}],["bar'},{'name",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["bar.component",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["bar.component.html",{"_index":1100,"title":{},"body":{"components/FooterBarComponent.html":{}}}],["bar.component.scss",{"_index":1099,"title":{},"body":{"components/FooterBarComponent.html":{}}}],["bar.component.ts",{"_index":1094,"title":{},"body":{"components/FooterBarComponent.html":{},"coverage.html":{}}}],["bar.component.ts:17",{"_index":1131,"title":{},"body":{"components/FooterBarComponent.html":{}}}],["bar.component.ts:20",{"_index":1130,"title":{},"body":{"components/FooterBarComponent.html":{}}}],["bar.component.ts:23",{"_index":1129,"title":{},"body":{"components/FooterBarComponent.html":{}}}],["bar.component.ts:26",{"_index":1111,"title":{},"body":{"components/FooterBarComponent.html":{}}}],["bar.component.ts:40",{"_index":1118,"title":{},"body":{"components/FooterBarComponent.html":{}}}],["bar.component.ts:54",{"_index":1121,"title":{},"body":{"components/FooterBarComponent.html":{}}}],["bar.component.ts:66",{"_index":1126,"title":{},"body":{"components/FooterBarComponent.html":{}}}],["bar.component.ts:75",{"_index":1116,"title":{},"body":{"components/FooterBarComponent.html":{}}}],["bar.component.ts:81",{"_index":1117,"title":{},"body":{"components/FooterBarComponent.html":{}}}],["bar.component.ts:87",{"_index":1114,"title":{},"body":{"components/FooterBarComponent.html":{}}}],["bar.component.ts:93",{"_index":1115,"title":{},"body":{"components/FooterBarComponent.html":{}}}],["bar/footer",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"components/FooterBarComponent.html":{},"coverage.html":{}}}],["base",{"_index":92,"title":{},"body":{"injectables/AddContactService.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["based",{"_index":698,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/LoginComponent.html":{},"injectables/ScreenSizeService.html":{},"components/SidebarComponent.html":{},"components/SummaryComponent.html":{}}}],["baseurl",{"_index":28,"title":{},"body":{"injectables/AddContactService.html":{},"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["bdquo;hinweis",{"_index":1464,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["bdquo;http://&ldquo",{"_index":1892,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["bdquo;https://&ldquo",{"_index":1893,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["bearbeitung",{"_index":1908,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["before",{"_index":835,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["behandeln",{"_index":1623,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["behaviorsubject",{"_index":456,"title":{},"body":{"injectables/ContactService.html":{},"injectables/ContactsOverlayService.html":{},"injectables/UserService.html":{}}}],["behaviorsubject(false",{"_index":765,"title":{},"body":{"injectables/ContactsOverlayService.html":{}}}],["behaviorsubject(null",{"_index":454,"title":{},"body":{"injectables/ContactService.html":{},"injectables/UserService.html":{}}}],["behaviorsubject(storeduser",{"_index":2449,"title":{},"body":{"injectables/UserService.html":{}}}],["bei",{"_index":1554,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["beim",{"_index":1493,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["being",{"_index":439,"title":{},"body":{"injectables/ContactService.html":{}}}],["beispiel",{"_index":1881,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ben&ouml;tigen",{"_index":1843,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["benutzen",{"_index":1628,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["benötigen",{"_index":1999,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ber",{"_index":1940,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["berblick",{"_index":1929,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["berechtigten",{"_index":1713,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["berechtigtes",{"_index":1590,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["bereits",{"_index":1759,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["bereitstellung",{"_index":1517,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["berichtigung",{"_index":1540,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["bermitteln",{"_index":2013,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["bermittlung",{"_index":1977,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["berprüfen",{"_index":2000,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["bertragung",{"_index":1968,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["beruht",{"_index":1784,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["berwiegen",{"_index":1987,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["beschwerde&shy;recht",{"_index":1809,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["beschwerderecht",{"_index":1553,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["beschwerde­recht",{"_index":1990,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["besondere",{"_index":1691,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["besonderen",{"_index":1769,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["besteht",{"_index":1820,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["bestellungen",{"_index":1882,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["bestimmten",{"_index":1546,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["bestimmungen",{"_index":1780,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["bestreiten",{"_index":1842,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["besuch",{"_index":1494,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["besuchen",{"_index":1430,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["betreffender",{"_index":1802,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["betreiben",{"_index":1801,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["betreiber",{"_index":1616,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["betreten",{"_index":1510,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["betriebssystem",{"_index":1504,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["betroffenen",{"_index":1786,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["better",{"_index":532,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{}}}],["between",{"_index":1200,"title":{},"body":{"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["bez&uuml;glich",{"_index":1527,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["bezüglich",{"_index":1939,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["bis",{"_index":1671,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["blank",{"_index":1282,"title":{},"body":{"components/LoginComponent.html":{}}}],["bleiben",{"_index":1924,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["bleibt",{"_index":1763,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["blick",{"_index":1412,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["block",{"_index":585,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["board",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["board'},{'name",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["board/board.component",{"_index":273,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["boardcomponent",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["boardicon",{"_index":1244,"title":{},"body":{"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{}}}],["boardtaskoverlaycomponent",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["body",{"_index":2109,"title":{},"body":{"components/SignUpComponent.html":{},"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["bold",{"_index":947,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SummaryComponent.html":{}}}],["boolean",{"_index":321,"title":{},"body":{"guards/AuthGuard.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/ScreenSizeService.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["bootstrap",{"_index":209,"title":{},"body":{"modules/AppModule.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":250,"title":{},"body":{"modules/AppModule.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"dependencies.html":{}}}],["border",{"_index":563,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["bordernone",{"_index":1343,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["both",{"_index":2441,"title":{},"body":{"injectables/UserService.html":{}}}],["bottom",{"_index":589,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["bottomcontainercontacts",{"_index":606,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{}}}],["box",{"_index":1045,"title":{},"body":{"components/ContactsViewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["breakpointobserver",{"_index":2028,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["breakpoints",{"_index":2025,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["breakpoints.handset",{"_index":2032,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["breakpointstate",{"_index":2039,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["brigen",{"_index":2015,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["browse",{"_index":2556,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["browsers",{"_index":1891,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["browserzeile",{"_index":1897,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["btn",{"_index":1352,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["build",{"_index":2535,"title":{},"body":{"index.html":{}}}],["button",{"_index":2264,"title":{},"body":{"components/SummaryComponent.html":{}}}],["bzw",{"_index":1689,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["c",{"_index":1710,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["calc(1.175rem",{"_index":598,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/SummaryComponent.html":{}}}],["calc(1.375rem",{"_index":1057,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["calc(1.475rem",{"_index":2381,"title":{},"body":{"components/SummaryComponent.html":{}}}],["calc(1.4rem",{"_index":1034,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["calc(100",{"_index":613,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["calc(10vh",{"_index":922,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{}}}],["calc(12vh",{"_index":1062,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["calc(1rem",{"_index":1058,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["calculated",{"_index":2275,"title":{},"body":{"components/SummaryComponent.html":{}}}],["calculates",{"_index":2267,"title":{},"body":{"components/SummaryComponent.html":{}}}],["called",{"_index":1124,"title":{},"body":{"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["canactivate",{"_index":302,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["canactivate(route",{"_index":314,"title":{},"body":{"guards/AuthGuard.html":{}}}],["capabilities",{"_index":2551,"title":{},"body":{"index.html":{}}}],["cardcontainer",{"_index":2334,"title":{},"body":{"components/SummaryComponent.html":{}}}],["cardsfirstrow",{"_index":2346,"title":{},"body":{"components/SummaryComponent.html":{}}}],["cardsstyle",{"_index":2337,"title":{},"body":{"components/SummaryComponent.html":{}}}],["cardsthirdrow",{"_index":2350,"title":{},"body":{"components/SummaryComponent.html":{}}}],["case",{"_index":1383,"title":{},"body":{"injectables/LoginService.html":{}}}],["catcherror",{"_index":100,"title":{},"body":{"injectables/AddContactService.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/LoginService.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["catcherror(err",{"_index":400,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["catcherror(error",{"_index":115,"title":{},"body":{"injectables/AddContactService.html":{},"injectables/LoginService.html":{},"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{},"injectables/UserService.html":{}}}],["catcherror(this.handleerror",{"_index":2196,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["categories",{"_index":419,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["category",{"_index":406,"title":{"interfaces/Category.html":{}},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["categoryservice",{"_index":417,"title":{"injectables/CategoryService.html":{}},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"coverage.html":{}}}],["cdk",{"_index":2031,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["center",{"_index":579,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["chain",{"_index":390,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["change",{"_index":2529,"title":{},"body":{"index.html":{}}}],["changes",{"_index":762,"title":{},"body":{"injectables/ContactsOverlayService.html":{},"components/ContactsViewComponent.html":{},"injectables/ScreenSizeService.html":{},"components/SidebarComponent.html":{}}}],["changes['contactid",{"_index":1008,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["changes['contactid'].currentvalue",{"_index":1009,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["check",{"_index":344,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"index.html":{}}}],["checkboxcontainer",{"_index":1355,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["checkboxinput",{"_index":1356,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["checking",{"_index":2435,"title":{},"body":{"injectables/UserService.html":{}}}],["checks",{"_index":1385,"title":{},"body":{"injectables/LoginService.html":{},"components/SignUpComponent.html":{}}}],["choice",{"_index":2547,"title":{},"body":{"index.html":{}}}],["circle",{"_index":2360,"title":{},"body":{"components/SummaryComponent.html":{}}}],["class",{"_index":107,"title":{},"body":{"injectables/AddContactService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/ContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScreenSizeService.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["clear",{"_index":2442,"title":{},"body":{"injectables/UserService.html":{}}}],["clearing",{"_index":1167,"title":{},"body":{"components/HeaderBarMobileComponent.html":{}}}],["clears",{"_index":1292,"title":{},"body":{"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["cli",{"_index":2518,"title":{},"body":{"index.html":{}}}],["clicked",{"_index":2265,"title":{},"body":{"components/SummaryComponent.html":{}}}],["clone",{"_index":359,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["close",{"_index":479,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{}}}],["closecomponent",{"_index":475,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["closecontactsview",{"_index":782,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["closed",{"_index":471,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{}}}],["closeeditcomponent",{"_index":669,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["closeiconcontainer",{"_index":584,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{}}}],["closeiconcontainerdesktop",{"_index":639,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["closes",{"_index":683,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{}}}],["cluster_appmodule",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":2159,"title":{},"body":{"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"index.html":{}}}],["color",{"_index":411,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["colorfont",{"_index":608,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{}}}],["column",{"_index":622,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["command",{"_index":2548,"title":{},"body":{"index.html":{}}}],["communicates",{"_index":2127,"title":{},"body":{"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{}}}],["communication",{"_index":1379,"title":{},"body":{"injectables/LoginService.html":{}}}],["completed",{"_index":2124,"title":{},"body":{"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["completes",{"_index":2149,"title":{},"body":{"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["completion",{"_index":2123,"title":{},"body":{"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["component",{"_index":135,"title":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["components",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{},"overview.html":{}}}],["confirm",{"_index":2088,"title":{},"body":{"components/SignUpComponent.html":{}}}],["confirmpassword",{"_index":2094,"title":{},"body":{"components/SignUpComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["console",{"_index":2152,"title":{},"body":{"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{},"injectables/UserRegistrationService.html":{}}}],["console.error('an",{"_index":2186,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["console.error('attempted",{"_index":731,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{}}}],["console.error('contact",{"_index":726,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{}}}],["console.error('error",{"_index":116,"title":{},"body":{"injectables/AddContactService.html":{},"components/ContactsOverviewComponent.html":{},"injectables/LoginService.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"injectables/UserService.html":{}}}],["console.error('failed",{"_index":724,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{}}}],["console.error('invalid",{"_index":1320,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.error('login",{"_index":1323,"title":{},"body":{"components/LoginComponent.html":{},"injectables/LoginService.html":{}}}],["console.error('no",{"_index":1016,"title":{},"body":{"components/ContactsViewComponent.html":{},"injectables/UserService.html":{}}}],["console.error('privacy",{"_index":2113,"title":{},"body":{"components/SignUpComponent.html":{}}}],["console.error('there",{"_index":520,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/SignUpComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["console.error(`backend",{"_index":2187,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["console.error(`error",{"_index":128,"title":{},"body":{"injectables/AddContactService.html":{},"components/SignUpComponent.html":{}}}],["console.error(`failed",{"_index":730,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["console.error(err",{"_index":713,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["console.error(errormessage",{"_index":2161,"title":{},"body":{"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{}}}],["console.log('closing",{"_index":899,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["console.log('contact",{"_index":1017,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["console.log('no",{"_index":1317,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log(this.showoverlaysummary",{"_index":2281,"title":{},"body":{"components/SummaryComponent.html":{}}}],["const",{"_index":110,"title":{},"body":{"injectables/AddContactService.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"injectables/LoginService.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":35,"title":{},"body":{"injectables/AddContactService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/ScreenSizeService.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["constructor(addcontactservice",{"_index":481,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsOverviewComponent.html":{}}}],["constructor(breakpointobserver",{"_index":2027,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["constructor(http",{"_index":36,"title":{},"body":{"injectables/AddContactService.html":{},"injectables/CategoryService.html":{},"injectables/LoginService.html":{},"injectables/SubtaskService.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["constructor(loginservice",{"_index":1274,"title":{},"body":{"components/LoginComponent.html":{}}}],["constructor(private",{"_index":109,"title":{},"body":{"injectables/AddContactService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/FooterBarComponent.html":{},"injectables/LoginService.html":{},"injectables/ScreenSizeService.html":{},"components/SidebarComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["constructor(route",{"_index":676,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{}}}],["constructor(router",{"_index":311,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/SidebarComponent.html":{}}}],["constructor(userregistrationservice",{"_index":2081,"title":{},"body":{"components/SignUpComponent.html":{}}}],["constructor(userservice",{"_index":2246,"title":{},"body":{"components/SummaryComponent.html":{}}}],["contact",{"_index":11,"title":{"interfaces/Contact.html":{},"interfaces/Contact-1.html":{}},"body":{"injectables/AddContactService.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"injectables/ContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["contact's",{"_index":58,"title":{},"body":{"injectables/AddContactService.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{}}}],["contact.color",{"_index":886,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["contact.email",{"_index":913,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["contact.id",{"_index":910,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["contact.initials",{"_index":911,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["contact.name",{"_index":912,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["contact.name[0].touppercase",{"_index":884,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["contact.service",{"_index":511,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{}}}],["contact.service.ts",{"_index":7,"title":{},"body":{"injectables/AddContactService.html":{},"coverage.html":{}}}],["contact.service.ts:111",{"_index":84,"title":{},"body":{"injectables/AddContactService.html":{}}}],["contact.service.ts:19",{"_index":39,"title":{},"body":{"injectables/AddContactService.html":{}}}],["contact.service.ts:34",{"_index":51,"title":{},"body":{"injectables/AddContactService.html":{}}}],["contact.service.ts:49",{"_index":80,"title":{},"body":{"injectables/AddContactService.html":{}}}],["contact.service.ts:64",{"_index":65,"title":{},"body":{"injectables/AddContactService.html":{}}}],["contact.service.ts:78",{"_index":78,"title":{},"body":{"injectables/AddContactService.html":{}}}],["contact.service.ts:94",{"_index":73,"title":{},"body":{"injectables/AddContactService.html":{}}}],["contact?.email",{"_index":1020,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["contact?.name",{"_index":1019,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["contact?.phone",{"_index":1021,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["contactadded",{"_index":480,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsOverviewComponent.html":{}}}],["contactdata",{"_index":55,"title":{},"body":{"injectables/AddContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{}}}],["contactdeleted",{"_index":973,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["contactedited",{"_index":675,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{}}}],["contactemail",{"_index":935,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["contactform",{"_index":703,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["contactid",{"_index":76,"title":{},"body":{"injectables/AddContactService.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{}}}],["contactitem",{"_index":932,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["contactitem:hover",{"_index":950,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["contactname",{"_index":934,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{}}}],["contactnameemailcontainer",{"_index":933,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["contacts",{"_index":19,"title":{},"body":{"injectables/AddContactService.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask-1.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["contacts.foreach(contact",{"_index":882,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["contacts/contacts",{"_index":260,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["contactsaddcomponent",{"_index":168,"title":{"components/ContactsAddComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contactsadddesktop",{"_index":938,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["contactsadddesktop:hover",{"_index":948,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["contactsbackarrow",{"_index":1024,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["contactscontainer",{"_index":914,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["contactscontent",{"_index":916,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["contactsdesktopcontainer",{"_index":939,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["contactsdesktopscreen",{"_index":937,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["contactsdividingline",{"_index":954,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{}}}],["contactseditcomponent",{"_index":170,"title":{"components/ContactsEditComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contactseditdeletedesktop",{"_index":1031,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["contactseditlink",{"_index":1054,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["contactseditlink:hover",{"_index":1055,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["contactsemail",{"_index":1039,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["contactsemailheadline",{"_index":1038,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["contactservice",{"_index":437,"title":{"injectables/ContactService.html":{}},"body":{"injectables/ContactService.html":{},"coverage.html":{}}}],["contactsinformation",{"_index":1037,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["contactsinformationcontainer",{"_index":1027,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["contactsinformationcontainersmall",{"_index":1050,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["contactsoverlayservice",{"_index":743,"title":{"injectables/ContactsOverlayService.html":{}},"body":{"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"coverage.html":{}}}],["contactsoverviewcomponent",{"_index":172,"title":{"components/ContactsOverviewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contactsphone",{"_index":1041,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["contactsphoneheadline",{"_index":1040,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["contactssmallheadline",{"_index":953,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{}}}],["contactsubject",{"_index":445,"title":{},"body":{"injectables/ContactService.html":{}}}],["contactsunderline",{"_index":1026,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["contactsviewcomponent",{"_index":174,"title":{"components/ContactsViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contactsviewcontainer",{"_index":1023,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["contactsviewcontent",{"_index":1025,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["contactsviewnotvisible",{"_index":777,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["contactsviewpage",{"_index":1022,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["contactupdated",{"_index":974,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["containing",{"_index":57,"title":{},"body":{"injectables/AddContactService.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["contains",{"_index":1186,"title":{},"body":{"components/HeaderBarMobileComponent.html":{}}}],["content",{"_index":125,"title":{},"body":{"injectables/AddContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["control",{"_index":856,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/SummaryComponent.html":{}}}],["controls",{"_index":864,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["cookies",{"_index":1606,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["count",{"_index":2252,"title":{},"body":{"components/SummaryComponent.html":{}}}],["counts",{"_index":2250,"title":{},"body":{"components/SummaryComponent.html":{}}}],["counttasksbypriority",{"_index":2240,"title":{},"body":{"components/SummaryComponent.html":{}}}],["counttasksbypriority('urgent",{"_index":2319,"title":{},"body":{"components/SummaryComponent.html":{}}}],["counttasksbypriority(\\'urgent",{"_index":2396,"title":{},"body":{"components/SummaryComponent.html":{}}}],["counttasksbypriority(priority",{"_index":2248,"title":{},"body":{"components/SummaryComponent.html":{}}}],["counttasksbystatus",{"_index":2241,"title":{},"body":{"components/SummaryComponent.html":{}}}],["counttasksbystatus('awaitfeedback",{"_index":2326,"title":{},"body":{"components/SummaryComponent.html":{}}}],["counttasksbystatus('done",{"_index":2318,"title":{},"body":{"components/SummaryComponent.html":{}}}],["counttasksbystatus('inprogress",{"_index":2325,"title":{},"body":{"components/SummaryComponent.html":{}}}],["counttasksbystatus('todo",{"_index":2317,"title":{},"body":{"components/SummaryComponent.html":{}}}],["counttasksbystatus(\\'awaitfeedback",{"_index":2398,"title":{},"body":{"components/SummaryComponent.html":{}}}],["counttasksbystatus(\\'done",{"_index":2395,"title":{},"body":{"components/SummaryComponent.html":{}}}],["counttasksbystatus(\\'inprogress",{"_index":2397,"title":{},"body":{"components/SummaryComponent.html":{}}}],["counttasksbystatus(\\'todo",{"_index":2394,"title":{},"body":{"components/SummaryComponent.html":{}}}],["counttasksbystatus(status",{"_index":2254,"title":{},"body":{"components/SummaryComponent.html":{}}}],["coverage",{"_index":2457,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":541,"title":{},"body":{"components/ContactsAddComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["createauthorizationheader",{"_index":30,"title":{},"body":{"injectables/AddContactService.html":{}}}],["created",{"_index":542,"title":{},"body":{"components/ContactsAddComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["creates",{"_index":66,"title":{},"body":{"injectables/AddContactService.html":{},"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{}}}],["createsubtask",{"_index":2219,"title":{},"body":{"injectables/SubtaskService.html":{}}}],["createsubtask(subtask",{"_index":2137,"title":{},"body":{"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{}}}],["creating",{"_index":2140,"title":{},"body":{"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{}}}],["creator",{"_index":2180,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["credentials",{"_index":1257,"title":{},"body":{"components/LoginComponent.html":{}}}],["current",{"_index":443,"title":{},"body":{"injectables/ContactService.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/SidebarComponent.html":{},"components/SummaryComponent.html":{},"injectables/UserService.html":{}}}],["currentdate",{"_index":2236,"title":{},"body":{"components/SummaryComponent.html":{}}}],["currently",{"_index":458,"title":{},"body":{"injectables/ContactService.html":{},"components/ContactsOverviewComponent.html":{},"injectables/LoginService.html":{},"components/SidebarComponent.html":{},"components/SummaryComponent.html":{}}}],["currentuser",{"_index":2237,"title":{},"body":{"components/SummaryComponent.html":{}}}],["currentuser?.name",{"_index":2314,"title":{},"body":{"components/SummaryComponent.html":{}}}],["currentusersubject",{"_index":2430,"title":{},"body":{"injectables/UserService.html":{}}}],["cursor",{"_index":586,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["custom",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"injectables/ScreenSizeService.html":{}}}],["customdateparserformatter",{"_index":252,"title":{"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{}},"body":{"modules/AppModule.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"coverage.html":{}}}],["d&uuml;rfen",{"_index":1864,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["d1d1d1",{"_index":602,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/SummaryComponent.html":{}}}],["dabei",{"_index":1729,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["dadurch",{"_index":1472,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["dann",{"_index":1733,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["dar&uuml;ber",{"_index":1420,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["daran",{"_index":1889,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["darauf",{"_index":1637,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["dark",{"_index":495,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["darstellung",{"_index":1595,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["darüber",{"_index":1930,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["das",{"_index":1499,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["dass",{"_index":1474,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["data",{"_index":12,"title":{},"body":{"injectables/AddContactService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["date",{"_index":1066,"title":{},"body":{"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"interfaces/Subtask-1.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["date().gettime",{"_index":2304,"title":{},"body":{"components/SummaryComponent.html":{}}}],["date(nearesttask.due_date!).gettime",{"_index":2309,"title":{},"body":{"components/SummaryComponent.html":{}}}],["date(task.due_date!).gettime",{"_index":2312,"title":{},"body":{"components/SummaryComponent.html":{}}}],["date.month",{"_index":1085,"title":{},"body":{"injectables/CustomDateParserFormatter.html":{}}}],["daten",{"_index":1424,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["daten&shy;&uuml;bertrag&shy;barkeit",{"_index":1826,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["daten&uuml;bertragung",{"_index":1639,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["datenerfassung",{"_index":1449,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["datenerhebung",{"_index":1768,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["datenkategorien",{"_index":1692,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["datenschutz",{"_index":1409,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["datenschutz&shy;erkl&auml;rung",{"_index":1408,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["datenschutzerkl&auml;rung",{"_index":1448,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["datenschutzerklärung",{"_index":1935,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["datenschutzvorschriften",{"_index":1627,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["datenschutz­erklärung",{"_index":1928,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["datenspeicherung",{"_index":1921,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["datenverarbeitung",{"_index":1455,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["datenverarbeitungsvorg&auml;nge",{"_index":1758,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["datenverarbeitungsvorgänge",{"_index":1980,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["datenweitergabe",{"_index":1743,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["daten­übertrag­barkeit",{"_index":1996,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["datenübertragung",{"_index":1957,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["dateparser",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"injectables/CustomDateParserFormatter-1.html":{},"coverage.html":{}}}],["dateparts",{"_index":1076,"title":{},"body":{"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{}}}],["dateparts.length",{"_index":1078,"title":{},"body":{"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{}}}],["dauer",{"_index":1847,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["day",{"_index":1083,"title":{},"body":{"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"components/SummaryComponent.html":{}}}],["deadline",{"_index":2323,"title":{},"body":{"components/SummaryComponent.html":{}}}],["declarations",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decoration",{"_index":1206,"title":{},"body":{"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["default",{"_index":89,"title":{},"body":{"injectables/AddContactService.html":{},"components/AppComponent.html":{},"injectables/CategoryService.html":{},"injectables/ContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/ScreenSizeService.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":2034,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["defined",{"_index":38,"title":{},"body":{"injectables/AddContactService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/CategoryService.html":{},"injectables/ContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/ScreenSizeService.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["delay",{"_index":2387,"title":{},"body":{"components/SummaryComponent.html":{}}}],["delete",{"_index":18,"title":{},"body":{"injectables/AddContactService.html":{},"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["deletebutton",{"_index":740,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["deletecontact",{"_index":31,"title":{},"body":{"injectables/AddContactService.html":{},"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{}}}],["deletecontact(contactid",{"_index":71,"title":{},"body":{"injectables/AddContactService.html":{}}}],["deleted",{"_index":982,"title":{},"body":{"components/ContactsViewComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["deletes",{"_index":74,"title":{},"body":{"injectables/AddContactService.html":{},"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["deletesavecontainer",{"_index":738,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["deletesubtask",{"_index":2220,"title":{},"body":{"injectables/SubtaskService.html":{}}}],["deletesubtask(id",{"_index":2150,"title":{},"body":{"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{}}}],["deletetask",{"_index":2399,"title":{},"body":{"injectables/TaskService.html":{}}}],["deletetask(id",{"_index":2217,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["deleting",{"_index":130,"title":{},"body":{"injectables/AddContactService.html":{},"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{}}}],["deletion",{"_index":985,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["dem",{"_index":1462,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["den",{"_index":1458,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["denen",{"_index":1434,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["denn",{"_index":1789,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["dependencies",{"_index":207,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["der",{"_index":1495,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["derartiger",{"_index":1803,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["deren",{"_index":1839,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["derived",{"_index":690,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{}}}],["des",{"_index":1506,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["description",{"_index":8,"title":{},"body":{"injectables/AddContactService.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/ContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/ScreenSizeService.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["desktop",{"_index":826,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["dessen",{"_index":1460,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["detail",{"_index":820,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["detail/:id",{"_index":304,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["detailed",{"_index":959,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["details",{"_index":664,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["detect",{"_index":2022,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["detecting",{"_index":798,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["determine",{"_index":1128,"title":{},"body":{"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["determines",{"_index":1307,"title":{},"body":{"components/LoginComponent.html":{}}}],["dev",{"_index":2524,"title":{},"body":{"index.html":{}}}],["development",{"_index":2521,"title":{},"body":{"index.html":{}}}],["device",{"_index":862,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["devices",{"_index":2024,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["die",{"_index":1415,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["dient",{"_index":1796,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["dies",{"_index":1736,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["diese",{"_index":1428,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["diesem",{"_index":1446,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["dieser",{"_index":1450,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["difference",{"_index":2311,"title":{},"body":{"components/SummaryComponent.html":{}}}],["digits",{"_index":540,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["direction",{"_index":621,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["directive",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["directives",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":2534,"title":{},"body":{"index.html":{}}}],["directly",{"_index":1284,"title":{},"body":{"components/LoginComponent.html":{}}}],["directory",{"_index":2538,"title":{},"body":{"index.html":{}}}],["direkte",{"_index":1834,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["direktwerbung",{"_index":1771,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["display",{"_index":575,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["displayed",{"_index":1303,"title":{},"body":{"components/LoginComponent.html":{},"components/SummaryComponent.html":{}}}],["displayerrormessage",{"_index":1267,"title":{},"body":{"components/LoginComponent.html":{}}}],["displaying",{"_index":770,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/HeaderBarMobileComponent.html":{}}}],["displays",{"_index":829,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/LoginComponent.html":{},"components/SummaryComponent.html":{}}}],["dist",{"_index":2537,"title":{},"body":{"index.html":{}}}],["dist/join2.0_angular/assets/models/contact.model.ts",{"_index":436,"title":{},"body":{"interfaces/Contact-1.html":{},"coverage.html":{}}}],["dist/join2.0_angular/assets/models/user.model.ts",{"_index":2410,"title":{},"body":{"interfaces/User-1.html":{},"coverage.html":{}}}],["documentation",{"_index":2458,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["done",{"_index":2179,"title":{},"body":{"interfaces/Subtask-1.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["dort",{"_index":1905,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["dragdropmodule",{"_index":277,"title":{},"body":{"modules/AppModule.html":{}}}],["dritte",{"_index":1646,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["dritten",{"_index":1828,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["drittstaaten",{"_index":1698,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["drop",{"_index":279,"title":{},"body":{"modules/AppModule.html":{}}}],["dropdown",{"_index":1179,"title":{},"body":{"components/HeaderBarMobileComponent.html":{},"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["dropup",{"_index":1043,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["dsgvo",{"_index":1589,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["due",{"_index":2166,"title":{},"body":{"interfaces/Subtask-1.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["due_date",{"_index":2173,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["durch",{"_index":1457,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["durchf&uuml;hrung",{"_index":1703,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["durchführung",{"_index":1971,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["during",{"_index":2129,"title":{},"body":{"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{},"injectables/UserRegistrationService.html":{}}}],["dynamic",{"_index":2501,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":2273,"title":{},"body":{"components/SummaryComponent.html":{}}}],["dürfen",{"_index":2005,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["dürr",{"_index":1224,"title":{},"body":{"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["e",{"_index":1233,"title":{},"body":{"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["e.g",{"_index":2169,"title":{},"body":{"interfaces/Subtask-1.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["e2e",{"_index":2545,"title":{},"body":{"index.html":{}}}],["each",{"_index":23,"title":{},"body":{"injectables/AddContactService.html":{},"components/ContactsOverviewComponent.html":{}}}],["ease",{"_index":637,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["edit",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["edit'},{'name",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["edit.component",{"_index":268,"title":{},"body":{"modules/AppModule.html":{}}}],["edit.component.html",{"_index":668,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["edit.component.scss",{"_index":667,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["edit.component.ts",{"_index":663,"title":{},"body":{"components/ContactsEditComponent.html":{},"coverage.html":{}}}],["edit.component.ts:111",{"_index":684,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["edit.component.ts:130",{"_index":682,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["edit.component.ts:20",{"_index":679,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["edit.component.ts:23",{"_index":704,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["edit.component.ts:26",{"_index":681,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["edit.component.ts:29",{"_index":678,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["edit.component.ts:48",{"_index":695,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["edit.component.ts:57",{"_index":691,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["edit.component.ts:75",{"_index":689,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["edit.component.ts:90",{"_index":701,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["edit/contacts",{"_index":267,"title":{},"body":{"modules/AppModule.html":{},"components/ContactsEditComponent.html":{},"coverage.html":{}}}],["editcontactsbackground",{"_index":734,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["edited",{"_index":440,"title":{},"body":{"injectables/ContactService.html":{},"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{}}}],["editing",{"_index":444,"title":{},"body":{"injectables/ContactService.html":{},"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{}}}],["edittaskcomponent",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["effektiven",{"_index":1917,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ein",{"_index":1484,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["eine",{"_index":1515,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["einem",{"_index":1829,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["einen",{"_index":1411,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["einer",{"_index":1592,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["eines",{"_index":1748,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["einfachen",{"_index":1418,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["eingeben",{"_index":1486,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["eingegebenen",{"_index":1919,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["eingelegt",{"_index":1853,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["eingeschr&auml;nkt",{"_index":1863,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["eingeschränkt",{"_index":2004,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["eingewilligt",{"_index":1687,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["einlegen",{"_index":1785,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["einsatz",{"_index":1745,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["einschl&auml;gigen",{"_index":1718,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["einschlägigen",{"_index":1974,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["einschr&auml;nkung",{"_index":1548,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["einschränkung",{"_index":1944,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["einwilligung",{"_index":1492,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["einzelfall",{"_index":1717,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["einzulegen",{"_index":1778,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["element",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["email",{"_index":432,"title":{},"body":{"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/SignUpComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"injectables/UserRegistrationService.html":{}}}],["emits",{"_index":62,"title":{},"body":{"injectables/AddContactService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/ContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{},"injectables/ScreenSizeService.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{}}}],["emitted",{"_index":487,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{}}}],["emitting",{"_index":2437,"title":{},"body":{"injectables/UserService.html":{}}}],["empf&auml;nger",{"_index":1534,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["empfänger",{"_index":1721,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["empty",{"_index":834,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["end",{"_index":656,"title":{},"body":{"components/ContactsAddComponent.html":{},"index.html":{}}}],["endger&auml;t",{"_index":1609,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["endgerät",{"_index":1953,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["endpoint",{"_index":1396,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UserRegistrationService.html":{}}}],["endpoints",{"_index":94,"title":{},"body":{"injectables/AddContactService.html":{},"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["ensure",{"_index":2144,"title":{},"body":{"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{}}}],["ensuring",{"_index":2203,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["enter",{"_index":536,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["entered",{"_index":1300,"title":{},"body":{"components/LoginComponent.html":{}}}],["entf&auml;llt",{"_index":1672,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["entfällt",{"_index":1962,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["entnehmen",{"_index":1443,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["entscheidet",{"_index":1664,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["entsprechend",{"_index":1625,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["entsprechende",{"_index":1597,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["environment",{"_index":415,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl",{"_index":2184,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["environment.apiurl}/categories",{"_index":423,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["environment.apiurl}/subtasks",{"_index":2130,"title":{},"body":{"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{}}}],["erf&uuml;llung",{"_index":1707,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["erfassen",{"_index":1469,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["erfasst",{"_index":1498,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["erfassung",{"_index":1508,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["erfolgen",{"_index":1715,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["erfolgt",{"_index":1456,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["erfolgten",{"_index":1762,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["erforderlich",{"_index":1706,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["erfüllung",{"_index":1973,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ergeben",{"_index":1776,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["erhalten",{"_index":1538,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["erheben",{"_index":1632,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["erhoben",{"_index":1473,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["erkennen",{"_index":1888,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["erl&auml;utert",{"_index":1631,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["erlaubt",{"_index":1744,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["erläutert",{"_index":1956,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ernst",{"_index":1622,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["err",{"_index":401,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"components/ContactsEditComponent.html":{}}}],["err.status",{"_index":403,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["error",{"_index":119,"title":{},"body":{"injectables/AddContactService.html":{},"interceptors/AuthInterceptorService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["error('error",{"_index":2141,"title":{},"body":{"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{}}}],["error.error",{"_index":2110,"title":{},"body":{"components/SignUpComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["error.error.message",{"_index":2158,"title":{},"body":{"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{}}}],["error.message",{"_index":2112,"title":{},"body":{"components/SignUpComponent.html":{},"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{}}}],["error.status",{"_index":2111,"title":{},"body":{"components/SignUpComponent.html":{},"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["error.status}\\nmessage",{"_index":2160,"title":{},"body":{"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{}}}],["errorevent",{"_index":2157,"title":{},"body":{"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{}}}],["errormessage",{"_index":2155,"title":{},"body":{"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{}}}],["errors",{"_index":385,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{}}}],["erteilt",{"_index":1543,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["erteilte",{"_index":1760,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["es",{"_index":1479,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["europ&auml;ischen",{"_index":1871,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["europäischen",{"_index":2008,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["evenly",{"_index":1252,"title":{},"body":{"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SummaryComponent.html":{}}}],["event",{"_index":394,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{},"components/SummaryComponent.html":{}}}],["eventemitter",{"_index":486,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{}}}],["events",{"_index":468,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["exclude",{"_index":342,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["excluded",{"_index":346,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["excludedurls",{"_index":343,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["excludedurls.some(url",{"_index":347,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["execute",{"_index":2543,"title":{},"body":{"index.html":{}}}],["existing",{"_index":86,"title":{},"body":{"injectables/AddContactService.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{}}}],["exists",{"_index":358,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["export",{"_index":106,"title":{},"body":{"injectables/AddContactService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"injectables/ContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScreenSizeService.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["extends",{"_index":1069,"title":{},"body":{"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{}}}],["external",{"_index":2048,"title":{},"body":{"components/SidebarComponent.html":{}}}],["externe",{"_index":1734,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["externen",{"_index":1726,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["f",{"_index":1588,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["f&auml;llen",{"_index":1770,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["f&uuml;r",{"_index":1454,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["f6f7f8",{"_index":915,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SummaryComponent.html":{}}}],["fabian",{"_index":1223,"title":{},"body":{"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["fabianduerr&#64;web.de",{"_index":1235,"title":{},"body":{"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["fabianduerr@web.de",{"_index":1255,"title":{},"body":{"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["failed",{"_index":1324,"title":{},"body":{"components/LoginComponent.html":{}}}],["fails",{"_index":989,"title":{},"body":{"components/ContactsViewComponent.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["failure",{"_index":377,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"components/ContactsEditComponent.html":{}}}],["fall",{"_index":1684,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["falle",{"_index":1694,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["false",{"_index":327,"title":{},"body":{"guards/AuthGuard.html":{},"components/ContactsAddComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":1032,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["feedback",{"_index":2328,"title":{},"body":{"components/SummaryComponent.html":{}}}],["fehlerfreie",{"_index":1516,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ferner",{"_index":1711,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["feststeht",{"_index":1861,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["fetch",{"_index":16,"title":{},"body":{"injectables/AddContactService.html":{}}}],["fetchcontactdetails",{"_index":967,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["fetchcontactdetails(contactid",{"_index":987,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["fetchcurrentuser",{"_index":2432,"title":{},"body":{"injectables/UserService.html":{}}}],["fetches",{"_index":79,"title":{},"body":{"injectables/AddContactService.html":{},"components/ContactsViewComponent.html":{},"injectables/UserService.html":{}}}],["fetching",{"_index":122,"title":{},"body":{"injectables/AddContactService.html":{},"components/ContactsViewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"injectables/LoginService.html":{},"injectables/UserService.html":{}}}],["ffentlichen",{"_index":2007,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ffffff",{"_index":574,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["field",{"_index":1298,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["fields",{"_index":1281,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/AddContactService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"injectables/ContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScreenSizeService.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["files",{"_index":2530,"title":{},"body":{"index.html":{}}}],["fill",{"_index":2361,"title":{},"body":{"components/SummaryComponent.html":{}}}],["filter",{"_index":2251,"title":{},"body":{"components/SummaryComponent.html":{}}}],["filteredtasks",{"_index":2298,"title":{},"body":{"components/SummaryComponent.html":{}}}],["filteredtasks.length",{"_index":2300,"title":{},"body":{"components/SummaryComponent.html":{}}}],["final",{"_index":391,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["find",{"_index":806,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["findcontactbyid",{"_index":783,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["findcontactbyid(contactid",{"_index":801,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["findnearestduedate",{"_index":2242,"title":{},"body":{"components/SummaryComponent.html":{}}}],["finds",{"_index":803,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/SummaryComponent.html":{}}}],["fingerprinting",{"_index":1611,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["first",{"_index":355,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/ContactsOverviewComponent.html":{},"index.html":{}}}],["firstletter",{"_index":883,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["firstrow",{"_index":2340,"title":{},"body":{"components/SummaryComponent.html":{}}}],["fixed",{"_index":566,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["flag",{"_index":505,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["flags",{"_index":1123,"title":{},"body":{"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["flex",{"_index":576,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["folgendem",{"_index":1565,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["folgenden",{"_index":1416,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["font",{"_index":596,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["footer",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["footerbar",{"_index":1149,"title":{},"body":{"components/FooterBarComponent.html":{}}}],["footerbarcomponent",{"_index":178,"title":{"components/FooterBarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["footercomponent",{"_index":940,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/SummaryComponent.html":{}}}],["footercontainer",{"_index":1350,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["form",{"_index":466,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/SignUpComponent.html":{}}}],["format",{"_index":497,"title":{},"body":{"components/ContactsAddComponent.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"components/PrivacyPolicyComponent.html":{}}}],["format(date",{"_index":1071,"title":{},"body":{"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{}}}],["formatter",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["formatter.service.ts",{"_index":1068,"title":{},"body":{"injectables/CustomDateParserFormatter.html":{},"coverage.html":{}}}],["formatter.service.ts:20",{"_index":1073,"title":{},"body":{"injectables/CustomDateParserFormatter.html":{}}}],["formatter.service.ts:6",{"_index":1075,"title":{},"body":{"injectables/CustomDateParserFormatter.html":{}}}],["formatter.ts",{"_index":1086,"title":{},"body":{"injectables/CustomDateParserFormatter-1.html":{},"coverage.html":{}}}],["formatter.ts:20",{"_index":1088,"title":{},"body":{"injectables/CustomDateParserFormatter-1.html":{}}}],["formatter.ts:24",{"_index":1090,"title":{},"body":{"injectables/CustomDateParserFormatter-1.html":{}}}],["formatter.ts:6",{"_index":1091,"title":{},"body":{"injectables/CustomDateParserFormatter-1.html":{}}}],["formbuilder",{"_index":2099,"title":{},"body":{"components/SignUpComponent.html":{}}}],["formcontainer",{"_index":1344,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["formcontaineraddcontacts",{"_index":623,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{}}}],["formgroup",{"_index":2098,"title":{},"body":{"components/SignUpComponent.html":{}}}],["forminput",{"_index":1345,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["forminputcontacsname",{"_index":609,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{}}}],["forminputcontacsphone",{"_index":617,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{}}}],["forminputcontactsmail",{"_index":615,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{}}}],["forminputname",{"_index":2116,"title":{},"body":{"components/SignUpComponent.html":{}}}],["forminputpassword",{"_index":1346,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["formsmodule",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["fortawesome/fontawesome",{"_index":2502,"title":{},"body":{"dependencies.html":{}}}],["fortfall",{"_index":1685,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["forwards",{"_index":638,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["found",{"_index":807,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"injectables/UserService.html":{}}}],["fragen",{"_index":1559,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["free",{"_index":2503,"title":{},"body":{"dependencies.html":{}}}],["freiheiten",{"_index":1794,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["friedersdorf",{"_index":1577,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["full",{"_index":300,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ContactsOverviewComponent.html":{},"components/HeaderBarMobileComponent.html":{}}}],["further",{"_index":2419,"title":{},"body":{"injectables/UserRegistrationService.html":{},"index.html":{}}}],["fällen",{"_index":1983,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["für",{"_index":1936,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["g",{"_index":524,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["g&auml;ngigen",{"_index":1830,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["g&uuml;ltigen",{"_index":1749,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["geben",{"_index":1417,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gegen",{"_index":1767,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gel&ouml;scht",{"_index":1676,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["geltend",{"_index":1674,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["geltenden",{"_index":1837,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["geltendmachung",{"_index":1797,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gelöscht",{"_index":1964,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gem",{"_index":1220,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["gemeinsam",{"_index":1656,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gemeinsame",{"_index":1754,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gemeinsamen",{"_index":1752,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["genannt",{"_index":1669,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["generate",{"_index":2532,"title":{},"body":{"index.html":{}}}],["generated",{"_index":2517,"title":{},"body":{"index.html":{}}}],["generategreeting",{"_index":2243,"title":{},"body":{"components/SummaryComponent.html":{}}}],["generategreeting(user",{"_index":2257,"title":{},"body":{"components/SummaryComponent.html":{}}}],["generaterandomdarkcolor",{"_index":476,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["generates",{"_index":493,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/SummaryComponent.html":{}}}],["generic",{"_index":2185,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["gerichteten",{"_index":1918,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gerichtlicher",{"_index":1824,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gesch&auml;ftst&auml;tigkeit",{"_index":1723,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["geschah/geschieht",{"_index":1850,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["geschieht",{"_index":1635,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["geschlossen",{"_index":1755,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["geschäftstätigkeit",{"_index":1976,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gesetzlich",{"_index":1737,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gesetzliche",{"_index":1923,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gesetzlichen",{"_index":1626,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gespeichert",{"_index":1911,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gespeicherten",{"_index":1537,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gest&uuml;tztes",{"_index":1781,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gestütztes",{"_index":1985,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["getcategories",{"_index":427,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["getcontactbyid",{"_index":32,"title":{},"body":{"injectables/AddContactService.html":{}}}],["getcontactbyid(contactid",{"_index":77,"title":{},"body":{"injectables/AddContactService.html":{}}}],["getcontacts",{"_index":33,"title":{},"body":{"injectables/AddContactService.html":{}}}],["getcontacttoedit",{"_index":446,"title":{},"body":{"injectables/ContactService.html":{}}}],["getcurrentuser",{"_index":2285,"title":{},"body":{"components/SummaryComponent.html":{},"injectables/UserService.html":{}}}],["getinitials",{"_index":670,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{}}}],["getinitials(contact.name",{"_index":732,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["getinitials(contact?.name",{"_index":1018,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["getinitials(name",{"_index":687,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{}}}],["getoverlayvisibility",{"_index":751,"title":{},"body":{"injectables/ContactsOverlayService.html":{}}}],["getprotecteddata",{"_index":1374,"title":{},"body":{"injectables/LoginService.html":{}}}],["getsortedletters",{"_index":784,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["getsubtask",{"_index":2221,"title":{},"body":{"injectables/SubtaskService.html":{}}}],["getsubtask(id",{"_index":2135,"title":{},"body":{"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{}}}],["getsubtasks",{"_index":2131,"title":{},"body":{"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{}}}],["gettask",{"_index":2400,"title":{},"body":{"injectables/TaskService.html":{}}}],["gettask(id",{"_index":2197,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["gettasks",{"_index":2193,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["getting",{"_index":2514,"title":{"index.html":{}},"body":{}}],["gew&auml;hrleisten",{"_index":1519,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gew&ouml;hnlichen",{"_index":1814,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gewährleisten",{"_index":1938,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gewöhnlichen",{"_index":1993,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ggf",{"_index":1840,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gilt",{"_index":1779,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["glance",{"_index":2316,"title":{},"body":{"components/SummaryComponent.html":{}}}],["go",{"_index":2553,"title":{},"body":{"index.html":{}}}],["gobacktocontacts",{"_index":968,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["good",{"_index":2261,"title":{},"body":{"components/SummaryComponent.html":{}}}],["gotoaddtask",{"_index":1105,"title":{},"body":{"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["gotoboard",{"_index":1106,"title":{},"body":{"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["gotoboardsummary",{"_index":2244,"title":{},"body":{"components/SummaryComponent.html":{}}}],["gotocontactdetails",{"_index":785,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["gotocontactdetails(contactid",{"_index":818,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["gotocontacts",{"_index":1107,"title":{},"body":{"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["gotodesktopcontactdetails",{"_index":786,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["gotodesktopcontactdetails(contactid",{"_index":823,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["gotolegal",{"_index":2052,"title":{},"body":{"components/SidebarComponent.html":{}}}],["gotologin",{"_index":1268,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["gotopolicy",{"_index":2053,"title":{},"body":{"components/SidebarComponent.html":{}}}],["gotosignup",{"_index":1269,"title":{},"body":{"components/LoginComponent.html":{}}}],["gotosummary",{"_index":1108,"title":{},"body":{"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/SidebarComponent.html":{}}}],["gr&uuml;nde",{"_index":1679,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gr&uuml;nden",{"_index":1774,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["graph",{"_index":2557,"title":{},"body":{"modules.html":{}}}],["greeting",{"_index":2232,"title":{},"body":{"components/SummaryComponent.html":{}}}],["greetingcontainer",{"_index":2380,"title":{},"body":{"components/SummaryComponent.html":{}}}],["greetingcontainergreeting",{"_index":2383,"title":{},"body":{"components/SummaryComponent.html":{}}}],["greetingcontainergreetingoverlay",{"_index":2388,"title":{},"body":{"components/SummaryComponent.html":{}}}],["greetingcontainername",{"_index":2384,"title":{},"body":{"components/SummaryComponent.html":{}}}],["greetingcontainernameoverlay",{"_index":2389,"title":{},"body":{"components/SummaryComponent.html":{}}}],["greetingnamecontainer",{"_index":2382,"title":{},"body":{"components/SummaryComponent.html":{}}}],["greetingnamecontaineroverlay",{"_index":2390,"title":{},"body":{"components/SummaryComponent.html":{}}}],["group",{"_index":817,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["groupcontactsbyfirstletter",{"_index":787,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["groupcontactsbyfirstletter(contacts",{"_index":830,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["grouped",{"_index":805,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["groupedcontacts",{"_index":778,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["groups",{"_index":772,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["grundlage",{"_index":1583,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gründe",{"_index":1966,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gründen",{"_index":1984,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["guard",{"_index":308,"title":{"guards/AuthGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":309,"title":{},"body":{"guards/AuthGuard.html":{}}}],["guest",{"_index":1260,"title":{},"body":{"components/LoginComponent.html":{}}}],["guest@guest.com",{"_index":1327,"title":{},"body":{"components/LoginComponent.html":{}}}],["guestlogin",{"_index":1270,"title":{},"body":{"components/LoginComponent.html":{}}}],["gängigen",{"_index":1997,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gültigen",{"_index":1979,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["h1",{"_index":1056,"title":{},"body":{"components/ContactsViewComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["h58",{"_index":1342,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["haben",{"_index":1526,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["handeln",{"_index":1483,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["handelsrechtliche",{"_index":1681,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["handle",{"_index":2083,"title":{},"body":{"components/SignUpComponent.html":{}}}],["handleerror",{"_index":2222,"title":{},"body":{"injectables/SubtaskService.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{}}}],["handleerror(error",{"_index":2154,"title":{},"body":{"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{}}}],["handler",{"_index":393,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["handles",{"_index":384,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{}}}],["handling",{"_index":797,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{}}}],["handset",{"_index":846,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"injectables/ScreenSizeService.html":{}}}],["handsetortabletbreakpoints",{"_index":2026,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["happened",{"_index":2191,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["haubenschloßstr",{"_index":1225,"title":{},"body":{"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["hauptstra&szlig;e",{"_index":1574,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["hauptstraße",{"_index":1949,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["header",{"_index":22,"title":{},"body":{"injectables/AddContactService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["headerbarmobilecomponent",{"_index":181,"title":{"components/HeaderBarMobileComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["headercontainer",{"_index":1198,"title":{},"body":{"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["headerdesktopcontactsview",{"_index":1051,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["headers",{"_index":111,"title":{},"body":{"injectables/AddContactService.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/LoginService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["headertext",{"_index":1211,"title":{},"body":{"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["headlinecontactoverview",{"_index":925,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["headlinecontainer",{"_index":1338,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["headlinescontainer",{"_index":2331,"title":{},"body":{"components/SummaryComponent.html":{}}}],["headlineunderline",{"_index":928,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["height",{"_index":550,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["hello",{"_index":2294,"title":{},"body":{"components/SummaryComponent.html":{}}}],["help",{"_index":2552,"title":{},"body":{"index.html":{}}}],["herkunft",{"_index":1533,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["hex",{"_index":496,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["hex.length",{"_index":528,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["hidden",{"_index":1052,"title":{},"body":{"components/ContactsViewComponent.html":{},"components/LoginComponent.html":{},"components/SummaryComponent.html":{}}}],["hierbei",{"_index":1477,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["hierzu",{"_index":1557,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["high",{"_index":2170,"title":{},"body":{"interfaces/Subtask-1.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["highlighting",{"_index":1095,"title":{},"body":{"components/FooterBarComponent.html":{}}}],["highlights",{"_index":2046,"title":{},"body":{"components/SidebarComponent.html":{}}}],["hin",{"_index":1638,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["hinweis",{"_index":1649,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["hinweise",{"_index":1414,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["hold",{"_index":2097,"title":{},"body":{"components/SignUpComponent.html":{},"injectables/UserService.html":{}}}],["holding",{"_index":705,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["holds",{"_index":457,"title":{},"body":{"injectables/ContactService.html":{},"injectables/ContactsOverlayService.html":{}}}],["hosten",{"_index":1563,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["hosting",{"_index":1562,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["hour",{"_index":2292,"title":{},"body":{"components/SummaryComponent.html":{}}}],["hoverdone",{"_index":2353,"title":{},"body":{"components/SummaryComponent.html":{}}}],["hoverdone:hover",{"_index":2357,"title":{},"body":{"components/SummaryComponent.html":{}}}],["hoverfootericons:hover",{"_index":1151,"title":{},"body":{"components/FooterBarComponent.html":{}}}],["hoversidebaricons:hover",{"_index":1246,"title":{},"body":{"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{}}}],["hoverthirdrow",{"_index":2370,"title":{},"body":{"components/SummaryComponent.html":{}}}],["hoverthirdrow:hover",{"_index":2371,"title":{},"body":{"components/SummaryComponent.html":{}}}],["hovertodo",{"_index":2363,"title":{},"body":{"components/SummaryComponent.html":{}}}],["hovertodo:hover",{"_index":2364,"title":{},"body":{"components/SummaryComponent.html":{}}}],["hoverurgent",{"_index":2366,"title":{},"body":{"components/SummaryComponent.html":{}}}],["hoverurgent:hover",{"_index":2367,"title":{},"body":{"components/SummaryComponent.html":{}}}],["html",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["http",{"_index":42,"title":{},"body":{"injectables/AddContactService.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["http://http://127.0.0.1:4200",{"_index":2525,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":37,"title":{},"body":{"injectables/AddContactService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["httpclientmodule",{"_index":256,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":396,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["httpevent",{"_index":339,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{}}}],["httphandler",{"_index":336,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{}}}],["httpheaders",{"_index":70,"title":{},"body":{"injectables/AddContactService.html":{},"injectables/LoginService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["httpinterceptor",{"_index":340,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{}}}],["httprequest",{"_index":334,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{}}}],["https",{"_index":2012,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["https://all",{"_index":1580,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["https://join.server.fabianduerr.com",{"_index":91,"title":{},"body":{"injectables/AddContactService.html":{},"miscellaneous/variables.html":{}}}],["https://join.server.fabianduerr.com/login",{"_index":1394,"title":{},"body":{"injectables/LoginService.html":{}}}],["https://join.server.fabianduerr.com/protected",{"_index":1397,"title":{},"body":{"injectables/LoginService.html":{}}}],["https://join.server.fabianduerr.com/signup",{"_index":2425,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["https://join.server.fabianduerr.com/user/details",{"_index":2443,"title":{},"body":{"injectables/UserService.html":{}}}],["https://www.e",{"_index":1237,"title":{},"body":{"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["iconcontainerfooter",{"_index":1150,"title":{},"body":{"components/FooterBarComponent.html":{}}}],["iconcontainerheader",{"_index":1201,"title":{},"body":{"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["iconcontainersidebar",{"_index":1243,"title":{},"body":{"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{}}}],["iconlandscape",{"_index":2377,"title":{},"body":{"components/SummaryComponent.html":{}}}],["icontext",{"_index":1245,"title":{},"body":{"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{}}}],["id",{"_index":75,"title":{},"body":{"injectables/AddContactService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{}}}],["identifier",{"_index":414,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["identifiziert",{"_index":1436,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["identifying",{"_index":2023,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["ids",{"_index":2174,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["ihnen",{"_index":1552,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ihr",{"_index":1699,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ihre",{"_index":1471,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ihren",{"_index":1422,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ihrer",{"_index":1491,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ihres",{"_index":1521,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["im",{"_index":1608,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["image",{"_index":610,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["implements",{"_index":323,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/SidebarComponent.html":{},"components/SummaryComponent.html":{},"index.html":{}}}],["import",{"_index":95,"title":{},"body":{"injectables/AddContactService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/ContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScreenSizeService.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["important",{"_index":600,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["imports",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["impressum",{"_index":1218,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["imprint/legal",{"_index":283,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["imprint/privacy",{"_index":280,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["imprintcontainer",{"_index":1251,"title":{},"body":{"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{}}}],["imprintlink",{"_index":1253,"title":{},"body":{"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{}}}],["imprintlink:hover",{"_index":1254,"title":{},"body":{"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{}}}],["include",{"_index":360,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/ContactsEditComponent.html":{}}}],["includes",{"_index":20,"title":{},"body":{"injectables/AddContactService.html":{},"components/SidebarComponent.html":{},"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["including",{"_index":1381,"title":{},"body":{"injectables/LoginService.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{},"injectables/UserService.html":{}}}],["incomplete",{"_index":727,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["incorrect",{"_index":1279,"title":{},"body":{"components/LoginComponent.html":{}}}],["index",{"_index":25,"title":{"index.html":{}},"body":{"injectables/AddContactService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"injectables/ContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/PrivacyPolicyComponent.html":{},"injectables/ScreenSizeService.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["indicate",{"_index":861,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["indicates",{"_index":2066,"title":{},"body":{"components/SidebarComponent.html":{},"components/SignUpComponent.html":{}}}],["indicating",{"_index":506,"title":{},"body":{"components/ContactsAddComponent.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/LoginComponent.html":{},"injectables/ScreenSizeService.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/AddContactService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"injectables/ContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScreenSizeService.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["information",{"_index":59,"title":{},"body":{"injectables/AddContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"injectables/UserService.html":{}}}],["informationen",{"_index":1440,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["informiert",{"_index":1720,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["inh",{"_index":1572,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["inhalte",{"_index":1564,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["initial",{"_index":1120,"title":{},"body":{"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{}}}],["initializes",{"_index":696,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/SidebarComponent.html":{},"components/SummaryComponent.html":{},"injectables/UserService.html":{}}}],["initials",{"_index":433,"title":{},"body":{"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["initialscircle",{"_index":930,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["initialscirclecontactedit",{"_index":736,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["initialscirclecontactview",{"_index":1029,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["initialscontainer",{"_index":1203,"title":{},"body":{"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["inject",{"_index":40,"title":{},"body":{"injectables/AddContactService.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"injectables/ScreenSizeService.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{}}}],["injectable",{"_index":0,"title":{"injectables/AddContactService.html":{},"injectables/CategoryService.html":{},"injectables/ContactService.html":{},"injectables/ContactsOverlayService.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"injectables/LoginService.html":{},"injectables/ScreenSizeService.html":{},"injectables/SubtaskService.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AddContactService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/ContactService.html":{},"injectables/ContactsOverlayService.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"injectables/LoginService.html":{},"injectables/ScreenSizeService.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/AddContactService.html":{},"injectables/CategoryService.html":{},"injectables/ContactService.html":{},"injectables/ContactsOverlayService.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"injectables/LoginService.html":{},"injectables/ScreenSizeService.html":{},"injectables/SubtaskService.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injects",{"_index":1377,"title":{},"body":{"injectables/LoginService.html":{},"components/SidebarComponent.html":{}}}],["inkl",{"_index":1567,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["inkl.com",{"_index":1568,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["inkl.com/datenschutzinformationen",{"_index":1581,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["inklusive",{"_index":1904,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["innerhalb",{"_index":1666,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["input",{"_index":680,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{},"components/LoginComponent.html":{}}}],["inputcontainer",{"_index":619,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["inputfield",{"_index":1341,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["inputs",{"_index":674,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{}}}],["insbesondere",{"_index":1812,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["inset",{"_index":1208,"title":{},"body":{"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["instance",{"_index":49,"title":{},"body":{"injectables/AddContactService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{}}}],["instanceof",{"_index":402,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{}}}],["interbold",{"_index":1033,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["intercept",{"_index":331,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{}}}],["intercept(req",{"_index":333,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["intercept(request",{"_index":381,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["intercepted",{"_index":389,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["interceptor",{"_index":328,"title":{"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{}},"body":{"interceptors/AuthInterceptorService.html":{},"coverage.html":{}}}],["interceptor.service.ts",{"_index":368,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"coverage.html":{}}}],["interceptor.service.ts:20",{"_index":374,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["interceptor.service.ts:37",{"_index":382,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["interceptors",{"_index":329,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{}}}],["intercepts",{"_index":369,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["interesse",{"_index":1591,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["interessen",{"_index":1793,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["interesses",{"_index":1714,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["interface",{"_index":405,"title":{"interfaces/Category.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{}},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"coverage.html":{}}}],["interfaces",{"_index":407,"title":{},"body":{"interfaces/Category.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"overview.html":{}}}],["internal",{"_index":1003,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["internet",{"_index":1640,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["internetbrowser",{"_index":1503,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["intitialscontactnamecontainer",{"_index":1028,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["intitialseditcontactcontainer",{"_index":735,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["introductory",{"_index":2276,"title":{},"body":{"components/SummaryComponent.html":{}}}],["isaddtaskpage",{"_index":1101,"title":{},"body":{"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["isboardpage",{"_index":1102,"title":{},"body":{"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["iscontactspage",{"_index":1103,"title":{},"body":{"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["isdropdownopen",{"_index":1160,"title":{},"body":{"components/HeaderBarMobileComponent.html":{}}}],["ishandsetortablet",{"_index":779,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"injectables/ScreenSizeService.html":{}}}],["isloggedin",{"_index":1375,"title":{},"body":{"injectables/LoginService.html":{}}}],["isnan(contactid",{"_index":904,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["isoverlayvisiblecontactsview",{"_index":972,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["ispasswordwrong",{"_index":1263,"title":{},"body":{"components/LoginComponent.html":{}}}],["issummarypage",{"_index":1104,"title":{},"body":{"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["ist",{"_index":1452,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["isusernamewrong",{"_index":1264,"title":{},"body":{"components/LoginComponent.html":{}}}],["isvisible",{"_index":757,"title":{},"body":{"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{}}}],["it's",{"_index":706,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["items",{"_index":578,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["jederzeit",{"_index":1528,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["jedoch",{"_index":1852,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["jeweilige",{"_index":1783,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["jeweils",{"_index":1716,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["join",{"_index":530,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{},"components/LoginComponent.html":{},"components/SummaryComponent.html":{}}}],["join2.0_angular",{"_index":151,"title":{},"body":{"components/AppComponent.html":{}}}],["join20angular",{"_index":2516,"title":{},"body":{"index.html":{}}}],["json.parse(localstorage.getitem('user_details",{"_index":2447,"title":{},"body":{"injectables/UserService.html":{}}}],["json.stringify(user",{"_index":2456,"title":{},"body":{"injectables/UserService.html":{}}}],["juristische",{"_index":1653,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["juristischen",{"_index":1868,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["justify",{"_index":603,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["k&ouml;nnen",{"_index":1438,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["kanban",{"_index":1194,"title":{},"body":{"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["kann",{"_index":1478,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["karma",{"_index":2544,"title":{},"body":{"index.html":{}}}],["keine",{"_index":1667,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["kempten",{"_index":1228,"title":{},"body":{"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["key",{"_index":869,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/FooterBarComponent.html":{},"components/SummaryComponent.html":{}}}],["keyframes",{"_index":1366,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["kommunikation",{"_index":1641,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["kontakt",{"_index":1229,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["kontaktdaten",{"_index":1461,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["kontaktformular",{"_index":1485,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["kunden",{"_index":1747,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["können",{"_index":1932,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["l!9nbqy.3v",{"_index":1329,"title":{},"body":{"components/LoginComponent.html":{}}}],["l&ouml;schersuchen",{"_index":1673,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["l&ouml;schung",{"_index":1541,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["l&uuml;ckenloser",{"_index":1645,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["landscape",{"_index":658,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["larger",{"_index":847,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["lassen",{"_index":1833,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["last",{"_index":812,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["later",{"_index":2192,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["left",{"_index":546,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["legal",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["legalnoticecomponent",{"_index":184,"title":{"components/LegalNoticeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["legalnoticecontainer",{"_index":1239,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["legalnoticecontent",{"_index":1241,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["legend",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{},"overview.html":{}}}],["letter",{"_index":811,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["letters",{"_index":815,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["letztgenannten",{"_index":1683,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["level",{"_index":2168,"title":{},"body":{"interfaces/Subtask-1.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["link",{"_index":1209,"title":{},"body":{"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SignUpComponent.html":{}}}],["link:hover",{"_index":1210,"title":{},"body":{"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["linkcontainer",{"_index":1207,"title":{},"body":{"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SignUpComponent.html":{}}}],["linkcontainercontactview",{"_index":1044,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["links",{"_index":2049,"title":{},"body":{"components/SidebarComponent.html":{}}}],["list",{"_index":82,"title":{},"body":{"injectables/AddContactService.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{}}}],["lit",{"_index":1587,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["literal",{"_index":857,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["load",{"_index":694,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{}}}],["loadcontact",{"_index":671,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["loadcontacts",{"_index":788,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["loading",{"_index":697,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/SummaryComponent.html":{}}}],["loads",{"_index":692,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/SummaryComponent.html":{}}}],["loadstoredcontactdetails",{"_index":789,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["loadtasks",{"_index":2245,"title":{},"body":{"components/SummaryComponent.html":{}}}],["local",{"_index":1169,"title":{},"body":{"components/HeaderBarMobileComponent.html":{},"injectables/LoginService.html":{},"injectables/UserService.html":{}}}],["localstorage",{"_index":356,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/LoginComponent.html":{}}}],["localstorage.getitem('auth_token",{"_index":123,"title":{},"body":{"injectables/AddContactService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/LoginService.html":{},"injectables/UserService.html":{}}}],["localstorage.getitem('token",{"_index":397,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["localstorage.getitem('user_details",{"_index":2446,"title":{},"body":{"injectables/UserService.html":{}}}],["localstorage.removeitem('auth_token",{"_index":1190,"title":{},"body":{"components/HeaderBarMobileComponent.html":{},"injectables/LoginService.html":{}}}],["localstorage.removeitem('user_details",{"_index":1192,"title":{},"body":{"components/HeaderBarMobileComponent.html":{},"injectables/UserService.html":{}}}],["localstorage.setitem('auth_token",{"_index":1333,"title":{},"body":{"components/LoginComponent.html":{},"injectables/LoginService.html":{}}}],["localstorage.setitem('user_details",{"_index":2455,"title":{},"body":{"injectables/UserService.html":{}}}],["log",{"_index":1197,"title":{},"body":{"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{}}}],["logged",{"_index":1386,"title":{},"body":{"injectables/LoginService.html":{},"components/SummaryComponent.html":{}}}],["logging",{"_index":1285,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["login",{"_index":298,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/SignUpComponent.html":{}}}],["login'},{'name",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["login(email",{"_index":1390,"title":{},"body":{"injectables/LoginService.html":{}}}],["login.component.html",{"_index":1262,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":1261,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.component",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["logincomponent",{"_index":187,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logincontainer",{"_index":1347,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["loginservice",{"_index":1275,"title":{"injectables/LoginService.html":{}},"body":{"components/LoginComponent.html":{},"injectables/LoginService.html":{},"coverage.html":{}}}],["loginurl",{"_index":1372,"title":{},"body":{"injectables/LoginService.html":{}}}],["logo",{"_index":1202,"title":{},"body":{"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["logocontainer",{"_index":1248,"title":{},"body":{"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{}}}],["logocontainermobile",{"_index":1348,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["logomove",{"_index":1364,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":1157,"title":{},"body":{"components/HeaderBarMobileComponent.html":{},"injectables/LoginService.html":{}}}],["logs",{"_index":1166,"title":{},"body":{"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/UserRegistrationService.html":{}}}],["longdate",{"_index":2321,"title":{},"body":{"components/SummaryComponent.html":{}}}],["low",{"_index":2172,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["löschersuchen",{"_index":1963,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["löschung",{"_index":1942,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["lückenloser",{"_index":1959,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["m&ouml;glich",{"_index":1648,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["m&ouml;glichst",{"_index":1593,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["m&uuml;nnich",{"_index":1571,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ma&szlig;nahmen",{"_index":1705,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["machbar",{"_index":1836,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["machen",{"_index":1675,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["mail",{"_index":1234,"title":{},"body":{"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["maincontainer",{"_index":1349,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["making",{"_index":41,"title":{},"body":{"injectables/AddContactService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["manage",{"_index":1002,"title":{},"body":{"components/ContactsViewComponent.html":{},"components/SummaryComponent.html":{}}}],["management",{"_index":484,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["manages",{"_index":465,"title":{},"body":{"components/ContactsAddComponent.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Subtask-1.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["managing",{"_index":10,"title":{},"body":{"injectables/AddContactService.html":{},"injectables/ContactService.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{}}}],["mandatory",{"_index":707,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["map",{"_index":2043,"title":{},"body":{"injectables/ScreenSizeService.html":{},"components/SummaryComponent.html":{}}}],["map(n",{"_index":715,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{}}}],["map(x",{"_index":526,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["margin",{"_index":919,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["maschinenlesbaren",{"_index":1831,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["match",{"_index":2089,"title":{},"body":{"components/SignUpComponent.html":{}}}],["matches",{"_index":345,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/ScreenSizeService.html":{}}}],["matching",{"_index":134,"title":{},"body":{"injectables/AddContactService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"injectables/ContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScreenSizeService.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["math.abs(new",{"_index":2308,"title":{},"body":{"components/SummaryComponent.html":{}}}],["math.floor(math.random",{"_index":522,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["max",{"_index":643,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"injectables/ScreenSizeService.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["maßnahmen",{"_index":1972,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["media",{"_index":641,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["medien",{"_index":1570,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["medium",{"_index":2171,"title":{},"body":{"interfaces/Subtask-1.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["mehr",{"_index":1787,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["menu",{"_index":1180,"title":{},"body":{"components/HeaderBarMobileComponent.html":{}}}],["message",{"_index":1278,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["messages",{"_index":1259,"title":{},"body":{"components/LoginComponent.html":{}}}],["metadata",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["methods",{"_index":14,"title":{},"body":{"injectables/AddContactService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/CategoryService.html":{},"injectables/ContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["metrics",{"_index":2315,"title":{},"body":{"components/SummaryComponent.html":{}}}],["min",{"_index":647,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SummaryComponent.html":{}}}],["min(1024px",{"_index":2336,"title":{},"body":{"components/SummaryComponent.html":{}}}],["min(120px",{"_index":593,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{},"components/SummaryComponent.html":{}}}],["min(168px",{"_index":2348,"title":{},"body":{"components/SummaryComponent.html":{}}}],["min(264px",{"_index":2341,"title":{},"body":{"components/SummaryComponent.html":{}}}],["min(560px",{"_index":2344,"title":{},"body":{"components/SummaryComponent.html":{}}}],["min(652px",{"_index":629,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["mindifference",{"_index":2307,"title":{},"body":{"components/SummaryComponent.html":{}}}],["miscellaneous",{"_index":2561,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mit",{"_index":1421,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["mitgelesen",{"_index":1900,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["mitgliedstaat",{"_index":1813,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["mitgliedstaats",{"_index":1873,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["mitteilen",{"_index":1476,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["mittel",{"_index":1659,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["mobile",{"_index":821,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/HeaderBarMobileComponent.html":{}}}],["mobile'},{'name",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["mobile.component",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["mobile.component.html",{"_index":1159,"title":{},"body":{"components/HeaderBarMobileComponent.html":{}}}],["mobile.component.scss",{"_index":1158,"title":{},"body":{"components/HeaderBarMobileComponent.html":{}}}],["mobile.component.ts",{"_index":1156,"title":{},"body":{"components/HeaderBarMobileComponent.html":{},"coverage.html":{}}}],["mobile.component.ts:19",{"_index":1181,"title":{},"body":{"components/HeaderBarMobileComponent.html":{}}}],["mobile.component.ts:22",{"_index":1163,"title":{},"body":{"components/HeaderBarMobileComponent.html":{}}}],["mobile.component.ts:40",{"_index":1173,"title":{},"body":{"components/HeaderBarMobileComponent.html":{}}}],["mobile.component.ts:51",{"_index":1177,"title":{},"body":{"components/HeaderBarMobileComponent.html":{}}}],["mobile.component.ts:60",{"_index":1165,"title":{},"body":{"components/HeaderBarMobileComponent.html":{}}}],["mobile.component.ts:70",{"_index":1164,"title":{},"body":{"components/HeaderBarMobileComponent.html":{}}}],["mobile/header",{"_index":243,"title":{},"body":{"modules/AppModule.html":{},"components/HeaderBarMobileComponent.html":{},"coverage.html":{}}}],["model",{"_index":508,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{},"components/HeaderBarMobileComponent.html":{}}}],["modifying",{"_index":365,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["module",{"_index":204,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":206,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["monitoring",{"_index":1112,"title":{},"body":{"components/FooterBarComponent.html":{},"injectables/ScreenSizeService.html":{},"components/SidebarComponent.html":{}}}],["month",{"_index":1081,"title":{},"body":{"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{}}}],["more",{"_index":2167,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"index.html":{}}}],["moreiconcontainer",{"_index":1042,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["morning",{"_index":2262,"title":{},"body":{"components/SummaryComponent.html":{}}}],["multi",{"_index":288,"title":{},"body":{"modules/AppModule.html":{}}}],["muss",{"_index":1854,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["mutma&szlig;lichen",{"_index":1818,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["mutmaßlichen",{"_index":1994,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["möglich",{"_index":1960,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["möglichst",{"_index":1950,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["münnich",{"_index":1947,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["n[0",{"_index":716,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{}}}],["nach",{"_index":1490,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["nachfolgend",{"_index":1578,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["nachweisen",{"_index":1792,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["name",{"_index":46,"title":{},"body":{"injectables/AddContactService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"injectables/ContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScreenSizeService.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["name.split",{"_index":892,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["namen",{"_index":1660,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["names",{"_index":891,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["names.length",{"_index":895,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["names[0].substring(0",{"_index":893,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["names[names.length",{"_index":896,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["nan",{"_index":905,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["nat&uuml;rliche",{"_index":1652,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["nat&uuml;rlichen",{"_index":1867,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["natürliche",{"_index":1961,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["natürlichen",{"_index":2006,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["navigate",{"_index":379,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"components/ContactsOverviewComponent.html":{},"components/SignUpComponent.html":{},"index.html":{}}}],["navigates",{"_index":686,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["navigating",{"_index":1172,"title":{},"body":{"components/HeaderBarMobileComponent.html":{}}}],["navigation",{"_index":375,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["navigationend",{"_index":1132,"title":{},"body":{"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{},"components/SummaryComponent.html":{}}}],["ndash",{"_index":1865,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["nearest",{"_index":2233,"title":{},"body":{"components/SummaryComponent.html":{}}}],["nearestduedate",{"_index":2238,"title":{},"body":{"components/SummaryComponent.html":{}}}],["nearesttask",{"_index":2305,"title":{},"body":{"components/SummaryComponent.html":{}}}],["necessary",{"_index":460,"title":{},"body":{"injectables/ContactService.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/LoginComponent.html":{},"components/SummaryComponent.html":{}}}],["need",{"_index":2549,"title":{},"body":{"index.html":{}}}],["needed",{"_index":271,"title":{},"body":{"modules/AppModule.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{}}}],["nehmen",{"_index":1618,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["neue",{"_index":1569,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["new",{"_index":53,"title":{},"body":{"injectables/AddContactService.html":{},"injectables/ContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"injectables/LoginService.html":{},"components/SidebarComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":335,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["next.handle(authreq",{"_index":364,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["next.handle(req",{"_index":351,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["next.handle(request).pipe",{"_index":399,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["ng",{"_index":249,"title":{},"body":{"modules/AppModule.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"dependencies.html":{},"index.html":{}}}],["ngbdateparserformatter",{"_index":248,"title":{},"body":{"modules/AppModule.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{}}}],["ngbdatepickermodule",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["ngbdatestruct",{"_index":1072,"title":{},"body":{"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{}}}],["ngbmodule",{"_index":247,"title":{},"body":{"modules/AppModule.html":{}}}],["ngform",{"_index":700,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["ngmodule",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngonchanges",{"_index":969,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["ngonchanges(changes",{"_index":993,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["ngoninit",{"_index":672,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/SidebarComponent.html":{},"components/SummaryComponent.html":{}}}],["nicht",{"_index":1647,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["noch",{"_index":1860,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["none",{"_index":502,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["notice",{"_index":305,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{}}}],["notice'},{'name",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["notice.component",{"_index":285,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["notice.component.html",{"_index":1217,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["notice.component.scss",{"_index":1216,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["notice.component.ts",{"_index":1215,"title":{},"body":{"components/LegalNoticeComponent.html":{},"coverage.html":{}}}],["notice/legal",{"_index":284,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/LegalNoticeComponent.html":{},"coverage.html":{}}}],["notification",{"_index":2420,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["notjoin",{"_index":1357,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["now",{"_index":2291,"title":{},"body":{"components/SummaryComponent.html":{}}}],["now.gethours",{"_index":2293,"title":{},"body":{"components/SummaryComponent.html":{}}}],["null",{"_index":449,"title":{},"body":{"injectables/ContactService.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"injectables/LoginService.html":{},"components/SummaryComponent.html":{},"injectables/UserService.html":{}}}],["number",{"_index":72,"title":{},"body":{"injectables/AddContactService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"injectables/CustomDateParserFormatter-1.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{}}}],["numberstyle",{"_index":2352,"title":{},"body":{"components/SummaryComponent.html":{}}}],["numbertextcontainer",{"_index":2351,"title":{},"body":{"components/SummaryComponent.html":{}}}],["nur",{"_index":1732,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["nutzen",{"_index":1512,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["nutzers",{"_index":1610,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["nutzerverhaltens",{"_index":1522,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["nutzt",{"_index":1878,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["o",{"_index":1662,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["object",{"_index":56,"title":{},"body":{"injectables/AddContactService.html":{},"injectables/ContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["object.keys(this.groupedcontacts).sort",{"_index":898,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["objects",{"_index":426,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["observable",{"_index":61,"title":{},"body":{"injectables/AddContactService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/ContactService.html":{},"injectables/ContactsOverlayService.html":{},"injectables/LoginService.html":{},"injectables/ScreenSizeService.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["observe(this.handsetortabletbreakpoints",{"_index":2037,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["observes",{"_index":2030,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["occur",{"_index":2128,"title":{},"body":{"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{},"injectables/UserRegistrationService.html":{}}}],["occurred",{"_index":117,"title":{},"body":{"injectables/AddContactService.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["oder",{"_index":1489,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["of(null",{"_index":1402,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UserService.html":{}}}],["ohne",{"_index":1912,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["onchanges",{"_index":963,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["oncontactadded",{"_index":790,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["oncontactadded(contactadded",{"_index":841,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["oncontactedited",{"_index":970,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["oncontactedited(contactedited",{"_index":998,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["oninit",{"_index":666,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/SidebarComponent.html":{},"components/SummaryComponent.html":{}}}],["onsubmit",{"_index":673,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/SignUpComponent.html":{}}}],["onsubmit(contactform",{"_index":699,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["opacity",{"_index":1367,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["opencontact",{"_index":791,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["opencontact(contactid",{"_index":844,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["opens",{"_index":825,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/SidebarComponent.html":{}}}],["optional",{"_index":48,"title":{},"body":{"injectables/AddContactService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/CategoryService.html":{},"injectables/ContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/ScreenSizeService.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["orientation",{"_index":657,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["origin",{"_index":1365,"title":{},"body":{"components/LoginComponent.html":{}}}],["orts",{"_index":1817,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["otherwise",{"_index":808,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"injectables/LoginService.html":{}}}],["ouml;ffentlichen",{"_index":1870,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["out",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/SummaryComponent.html":{},"index.html":{},"overview.html":{}}}],["outgoing",{"_index":388,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["output",{"_index":510,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{}}}],["outputs",{"_index":478,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{}}}],["overflow",{"_index":917,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["overlay",{"_index":745,"title":{},"body":{"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/LoginComponent.html":{},"components/SummaryComponent.html":{},"coverage.html":{}}}],["overlay'},{'name",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["overlay.component",{"_index":275,"title":{},"body":{"modules/AppModule.html":{}}}],["overlay.component.ts",{"_index":2470,"title":{},"body":{"coverage.html":{}}}],["overlay/board",{"_index":274,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["overlayfadeout",{"_index":1361,"title":{},"body":{"components/LoginComponent.html":{},"components/SummaryComponent.html":{}}}],["overlayfadeoutgreeting",{"_index":2391,"title":{},"body":{"components/SummaryComponent.html":{}}}],["overlaysummary",{"_index":2385,"title":{},"body":{"components/SummaryComponent.html":{}}}],["overlayvisibility",{"_index":749,"title":{},"body":{"injectables/ContactsOverlayService.html":{}}}],["overlayvisibilitysubject",{"_index":750,"title":{},"body":{"injectables/ContactsOverlayService.html":{}}}],["overview",{"_index":771,"title":{"overview.html":{}},"body":{"components/ContactsOverviewComponent.html":{},"components/SummaryComponent.html":{},"index.html":{},"overview.html":{}}}],["overview'},{'name",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["overview.component",{"_index":264,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["overview.component.html",{"_index":775,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["overview.component.scss",{"_index":774,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["overview.component.ts",{"_index":769,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"coverage.html":{}}}],["overview.component.ts:114",{"_index":831,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["overview.component.ts:141",{"_index":809,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["overview.component.ts:157",{"_index":813,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["overview.component.ts:166",{"_index":842,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["overview.component.ts:176",{"_index":799,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["overview.component.ts:188",{"_index":845,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["overview.component.ts:201",{"_index":819,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["overview.component.ts:21",{"_index":863,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["overview.component.ts:215",{"_index":824,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["overview.component.ts:236",{"_index":802,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["overview.component.ts:24",{"_index":858,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["overview.component.ts:250",{"_index":850,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["overview.component.ts:27",{"_index":860,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["overview.component.ts:30",{"_index":855,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["overview.component.ts:33",{"_index":865,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["overview.component.ts:36",{"_index":795,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["overview.component.ts:51",{"_index":854,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["overview.component.ts:54",{"_index":853,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["overview.component.ts:62",{"_index":837,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["overview.component.ts:83",{"_index":836,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["overview.component.ts:94",{"_index":833,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["overview/contacts",{"_index":263,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ContactsOverviewComponent.html":{},"coverage.html":{}}}],["package",{"_index":2494,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["pad",{"_index":1087,"title":{},"body":{"injectables/CustomDateParserFormatter-1.html":{}}}],["pad(number",{"_index":1089,"title":{},"body":{"injectables/CustomDateParserFormatter-1.html":{}}}],["padding",{"_index":582,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["page",{"_index":325,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"components/ContactsOverviewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{},"index.html":{}}}],["param",{"_index":108,"title":{},"body":{"injectables/AddContactService.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/ContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/ScreenSizeService.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["parameters",{"_index":44,"title":{},"body":{"injectables/AddContactService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/CategoryService.html":{},"injectables/ContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/ScreenSizeService.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["params['id",{"_index":1006,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["parse",{"_index":1070,"title":{},"body":{"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{}}}],["parse(value",{"_index":1074,"title":{},"body":{"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{}}}],["parseint(dateparts[0",{"_index":1080,"title":{},"body":{"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{}}}],["parseint(dateparts[1",{"_index":1082,"title":{},"body":{"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{}}}],["parseint(dateparts[2",{"_index":1084,"title":{},"body":{"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{}}}],["parser",{"_index":1067,"title":{},"body":{"injectables/CustomDateParserFormatter.html":{},"coverage.html":{}}}],["passiert",{"_index":1425,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["passing",{"_index":489,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{}}}],["password",{"_index":1258,"title":{},"body":{"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/ResetPasswordComponent.html":{},"components/SignUpComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["password'},{'name",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["password.component",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["password.component.html",{"_index":2019,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.scss",{"_index":2018,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts",{"_index":2017,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["password/reset",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["passwords",{"_index":2090,"title":{},"body":{"components/SignUpComponent.html":{}}}],["passwordsmatch",{"_index":2080,"title":{},"body":{"components/SignUpComponent.html":{}}}],["passwordvisible",{"_index":1265,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["path",{"_index":270,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ContactService.html":{},"components/SummaryComponent.html":{}}}],["pathmatch",{"_index":299,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pencilicon",{"_index":2365,"title":{},"body":{"components/SummaryComponent.html":{}}}],["per",{"_index":1642,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["pers&ouml;nlich",{"_index":1435,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["pers&ouml;nlichen",{"_index":1620,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["persist",{"_index":2429,"title":{},"body":{"injectables/UserService.html":{}}}],["persistently",{"_index":1308,"title":{},"body":{"components/LoginComponent.html":{}}}],["person",{"_index":1654,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["personaddicon",{"_index":923,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["personalize",{"_index":2260,"title":{},"body":{"components/SummaryComponent.html":{}}}],["personenbezogene",{"_index":1431,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["personenbezogenen",{"_index":1423,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["personenbezogener",{"_index":1697,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["personiconcontainer",{"_index":601,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{}}}],["personiconcontainerdesktop",{"_index":654,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["personiconformcontainer",{"_index":640,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["persönlich",{"_index":1931,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["persönlichen",{"_index":1955,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["pflicht&shy;informationen",{"_index":1615,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["pflicht­informationen",{"_index":1954,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["phone",{"_index":434,"title":{},"body":{"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{}}}],["pipe",{"_index":98,"title":{},"body":{"injectables/AddContactService.html":{},"injectables/LoginService.html":{},"injectables/UserService.html":{}}}],["pipe(catcherror(this.handleerror",{"_index":2216,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{}}}],["pipe(map((state",{"_index":2038,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["pipe(map(user",{"_index":2286,"title":{},"body":{"components/SummaryComponent.html":{}}}],["platform",{"_index":2546,"title":{},"body":{"index.html":{}}}],["please",{"_index":535,"title":{},"body":{"components/ContactsAddComponent.html":{},"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["pointer",{"_index":587,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["policy",{"_index":306,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{}}}],["policy'},{'name",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["policy.component",{"_index":282,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["policy.component.html",{"_index":1407,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["policy.component.scss",{"_index":1406,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["policy.component.ts",{"_index":1405,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"coverage.html":{}}}],["policy/privacy",{"_index":281,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/PrivacyPolicyComponent.html":{},"coverage.html":{}}}],["popperjs/core",{"_index":2506,"title":{},"body":{"dependencies.html":{}}}],["position",{"_index":544,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["post(this.registrationurl",{"_index":2426,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["pr&uuml;fung",{"_index":1848,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["predefined",{"_index":1288,"title":{},"body":{"components/LoginComponent.html":{}}}],["presence",{"_index":1388,"title":{},"body":{"injectables/LoginService.html":{}}}],["present",{"_index":997,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["priority",{"_index":2165,"title":{},"body":{"interfaces/Subtask-1.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["privacy",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["privacylink",{"_index":2118,"title":{},"body":{"components/SignUpComponent.html":{}}}],["privacypolicycomponent",{"_index":189,"title":{"components/PrivacyPolicyComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["privacypolicycontainer",{"_index":1925,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["privacypolicycontent",{"_index":1926,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["private",{"_index":27,"title":{},"body":{"injectables/AddContactService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/ContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"injectables/CustomDateParserFormatter-1.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/ScreenSizeService.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["proceed",{"_index":349,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/SignUpComponent.html":{}}}],["process",{"_index":2413,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["production",{"_index":2565,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profiling",{"_index":1782,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["progress",{"_index":2178,"title":{},"body":{"interfaces/Subtask-1.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["project",{"_index":1195,"title":{},"body":{"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{},"index.html":{}}}],["promise",{"_index":320,"title":{},"body":{"guards/AuthGuard.html":{}}}],["properties",{"_index":26,"title":{"properties.html":{}},"body":{"injectables/AddContactService.html":{},"components/AppComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"injectables/ContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/ScreenSizeService.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{},"properties.html":{}}}],["property",{"_index":1176,"title":{},"body":{"components/HeaderBarMobileComponent.html":{}}}],["protected",{"_index":1371,"title":{},"body":{"injectables/LoginService.html":{}}}],["protectedurl",{"_index":1373,"title":{},"body":{"injectables/LoginService.html":{}}}],["provide",{"_index":286,"title":{},"body":{"modules/AppModule.html":{},"injectables/UserService.html":{}}}],["provided",{"_index":54,"title":{},"body":{"injectables/AddContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{}}}],["providedin",{"_index":104,"title":{},"body":{"injectables/AddContactService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/ContactService.html":{},"injectables/ContactsOverlayService.html":{},"injectables/LoginService.html":{},"injectables/ScreenSizeService.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["providers",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["provides",{"_index":441,"title":{},"body":{"injectables/ContactService.html":{},"injectables/ContactsOverlayService.html":{},"injectables/ScreenSizeService.html":{},"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{}}}],["providing",{"_index":13,"title":{},"body":{"injectables/AddContactService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/FooterBarComponent.html":{},"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["prüfung",{"_index":2001,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["public",{"_index":776,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{}}}],["purposes",{"_index":991,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["put(`${this.baseurl}/tasks/${id",{"_index":2215,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["quelle",{"_index":1236,"title":{},"body":{"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["r",{"_index":521,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["radius",{"_index":564,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["rahmen",{"_index":1722,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["random",{"_index":494,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["reactiveformsmodule",{"_index":238,"title":{},"body":{"modules/AppModule.html":{}}}],["received",{"_index":2153,"title":{},"body":{"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{}}}],["recht",{"_index":1529,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["recht24.de",{"_index":1238,"title":{},"body":{"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["rechte",{"_index":1525,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["rechtlich",{"_index":1677,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["rechtlichen",{"_index":1708,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["rechtm&auml;&szlig;igkeit",{"_index":1761,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["rechtmäßigkeit",{"_index":1981,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["rechtsanspr&uuml;chen",{"_index":1800,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["rechtsansprüchen",{"_index":1989,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["rechtsbehelfe",{"_index":1825,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["rechtsgrundlage",{"_index":1742,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["rechtsgrundlagen",{"_index":1686,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["redirect",{"_index":324,"title":{},"body":{"guards/AuthGuard.html":{}}}],["redirecting",{"_index":387,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["redirects",{"_index":370,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"components/LoginComponent.html":{}}}],["redirectto",{"_index":297,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reference",{"_index":2554,"title":{},"body":{"index.html":{}}}],["refreshcontacts",{"_index":792,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["refreshes",{"_index":851,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["regel",{"_index":1844,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["registers",{"_index":2423,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["registeruser",{"_index":2415,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["registeruser(userdata",{"_index":2421,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["registration",{"_index":2074,"title":{},"body":{"components/SignUpComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["registrationurl",{"_index":2414,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["related",{"_index":2183,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["relative",{"_index":580,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["relevant",{"_index":1168,"title":{},"body":{"components/HeaderBarMobileComponent.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{}}}],["reload",{"_index":2528,"title":{},"body":{"index.html":{}}}],["reloading",{"_index":852,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["reloads",{"_index":843,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{}}}],["remember",{"_index":1295,"title":{},"body":{"components/LoginComponent.html":{}}}],["rememberme",{"_index":1266,"title":{},"body":{"components/LoginComponent.html":{}}}],["removing",{"_index":1393,"title":{},"body":{"injectables/LoginService.html":{}}}],["ren",{"_index":1948,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ren&eacute",{"_index":1573,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["repeat",{"_index":612,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["represented",{"_index":412,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["representing",{"_index":754,"title":{},"body":{"injectables/ContactsOverlayService.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["represents",{"_index":409,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/HeaderBarMobileComponent.html":{}}}],["req",{"_index":338,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["req.clone",{"_index":362,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["req.url.includes(url",{"_index":348,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["request",{"_index":24,"title":{},"body":{"injectables/AddContactService.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"injectables/LoginService.html":{},"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{}}}],["request.clone",{"_index":398,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["requested",{"_index":2134,"title":{},"body":{"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["requests",{"_index":43,"title":{},"body":{"injectables/AddContactService.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["required",{"_index":534,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["reset",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{},"overview.html":{}}}],["resetfields",{"_index":1271,"title":{},"body":{"components/LoginComponent.html":{}}}],["resetpageflags",{"_index":1109,"title":{},"body":{"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["resetpasswordcomponent",{"_index":192,"title":{"components/ResetPasswordComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resets",{"_index":1122,"title":{},"body":{"components/FooterBarComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{}}}],["resources",{"_index":1398,"title":{},"body":{"injectables/LoginService.html":{}}}],["response",{"_index":63,"title":{},"body":{"injectables/AddContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsViewComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{}}}],["response.token",{"_index":1313,"title":{},"body":{"components/LoginComponent.html":{},"injectables/LoginService.html":{}}}],["response.user",{"_index":1315,"title":{},"body":{"components/LoginComponent.html":{}}}],["responsible",{"_index":9,"title":{},"body":{"injectables/AddContactService.html":{},"injectables/ContactService.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"injectables/LoginService.html":{}}}],["results",{"_index":133,"title":{},"body":{"injectables/AddContactService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"injectables/ContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScreenSizeService.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["rethrows",{"_index":2418,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["retrieval",{"_index":418,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/ContactsViewComponent.html":{}}}],["retrieve",{"_index":353,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/ContactService.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsViewComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{}}}],["retrieved",{"_index":2271,"title":{},"body":{"components/SummaryComponent.html":{}}}],["retrieves",{"_index":81,"title":{},"body":{"injectables/AddContactService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/ContactService.html":{},"injectables/ContactsOverlayService.html":{},"injectables/LoginService.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{}}}],["retry",{"_index":2164,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["retry(3",{"_index":2195,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["return",{"_index":113,"title":{},"body":{"injectables/AddContactService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/ContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"injectables/LoginService.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["returned",{"_index":2188,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["returns",{"_index":60,"title":{},"body":{"injectables/AddContactService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/ContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["rgb",{"_index":498,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["rgba($color",{"_index":553,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{}}}],["rgba(0",{"_index":1047,"title":{},"body":{"components/ContactsViewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SummaryComponent.html":{}}}],["richtigkeit",{"_index":1841,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["right",{"_index":581,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["root",{"_index":105,"title":{},"body":{"injectables/AddContactService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/ContactService.html":{},"injectables/ContactsOverlayService.html":{},"injectables/LoginService.html":{},"injectables/ScreenSizeService.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["route",{"_index":319,"title":{},"body":{"guards/AuthGuard.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["router",{"_index":312,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptorService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["routerevent",{"_index":1133,"title":{},"body":{"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{},"components/SummaryComponent.html":{}}}],["routermodule",{"_index":292,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":307,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":317,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routes",{"_index":293,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing",{"_index":796,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["routing.module",{"_index":231,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":291,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":1064,"title":{},"body":{"components/ContactsViewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["run",{"_index":2522,"title":{},"body":{"index.html":{}}}],["running",{"_index":2539,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":99,"title":{},"body":{"injectables/AddContactService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/ContactService.html":{},"injectables/ContactsOverlayService.html":{},"injectables/LoginService.html":{},"injectables/ScreenSizeService.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":102,"title":{},"body":{"injectables/AddContactService.html":{},"injectables/LoginService.html":{},"injectables/ScreenSizeService.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["save",{"_index":733,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["savebutton",{"_index":742,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["scaffolding",{"_index":2531,"title":{},"body":{"index.html":{}}}],["scale(1",{"_index":1368,"title":{},"body":{"components/LoginComponent.html":{}}}],["scale(1.02",{"_index":2368,"title":{},"body":{"components/SummaryComponent.html":{}}}],["scale(1.05",{"_index":2358,"title":{},"body":{"components/SummaryComponent.html":{}}}],["scale(2",{"_index":1363,"title":{},"body":{"components/LoginComponent.html":{}}}],["schloss",{"_index":1895,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["schutz",{"_index":1619,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["schutzw&uuml;rdige",{"_index":1791,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["schutzwürdige",{"_index":1986,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["screen",{"_index":642,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"injectables/ScreenSizeService.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["screens",{"_index":848,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["screensizeservice",{"_index":794,"title":{"injectables/ScreenSizeService.html":{}},"body":{"components/ContactsOverviewComponent.html":{},"injectables/ScreenSizeService.html":{},"coverage.html":{}}}],["secondrow",{"_index":2343,"title":{},"body":{"components/SummaryComponent.html":{}}}],["sect",{"_index":1601,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["sections",{"_index":1098,"title":{},"body":{"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["sehr",{"_index":1621,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["sei",{"_index":1788,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["seite",{"_index":1877,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["seiten",{"_index":1617,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["seitenaufrufs",{"_index":1507,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["seitenbetreiber",{"_index":1885,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["selected",{"_index":827,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["selectedcontact",{"_index":780,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["selection",{"_index":1296,"title":{},"body":{"components/LoginComponent.html":{}}}],["selector",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["self",{"_index":2207,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["self.findindex(t",{"_index":2208,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["senden",{"_index":1886,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["sending",{"_index":424,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{}}}],["sends",{"_index":2412,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["serve",{"_index":2523,"title":{},"body":{"index.html":{}}}],["server",{"_index":420,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/LoginService.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["server's",{"_index":1382,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UserRegistrationService.html":{}}}],["service",{"_index":485,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["service.service",{"_index":868,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{}}}],["service.service.ts",{"_index":746,"title":{},"body":{"injectables/ContactsOverlayService.html":{},"coverage.html":{}}}],["service.service.ts:14",{"_index":766,"title":{},"body":{"injectables/ContactsOverlayService.html":{}}}],["service.service.ts:17",{"_index":761,"title":{},"body":{"injectables/ContactsOverlayService.html":{}}}],["service.service.ts:24",{"_index":756,"title":{},"body":{"injectables/ContactsOverlayService.html":{}}}],["service.service.ts:33",{"_index":753,"title":{},"body":{"injectables/ContactsOverlayService.html":{}}}],["services",{"_index":483,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/LoginComponent.html":{},"components/SummaryComponent.html":{}}}],["session",{"_index":1170,"title":{},"body":{"components/HeaderBarMobileComponent.html":{}}}],["sessionstorage",{"_index":354,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/LoginComponent.html":{}}}],["sessionstorage.getitem('auth_token",{"_index":124,"title":{},"body":{"injectables/AddContactService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/UserService.html":{}}}],["sessionstorage.getitem('showoverlaysummary",{"_index":2280,"title":{},"body":{"components/SummaryComponent.html":{}}}],["sessionstorage.removeitem('auth_token",{"_index":1191,"title":{},"body":{"components/HeaderBarMobileComponent.html":{}}}],["sessionstorage.removeitem('showoverlay",{"_index":1193,"title":{},"body":{"components/HeaderBarMobileComponent.html":{},"injectables/LoginService.html":{}}}],["sessionstorage.setitem('auth_token",{"_index":1334,"title":{},"body":{"components/LoginComponent.html":{}}}],["sessionstorage.setitem('showoverlaysummary",{"_index":1401,"title":{},"body":{"injectables/LoginService.html":{},"components/SummaryComponent.html":{}}}],["set",{"_index":442,"title":{},"body":{"injectables/ContactService.html":{},"injectables/ContactsOverlayService.html":{},"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{},"injectables/UserService.html":{}}}],["setcontacttoedit",{"_index":447,"title":{},"body":{"injectables/ContactService.html":{}}}],["setcontacttoedit(contact",{"_index":450,"title":{},"body":{"injectables/ContactService.html":{}}}],["setcurrentuser",{"_index":2433,"title":{},"body":{"injectables/UserService.html":{}}}],["setcurrentuser(user",{"_index":2439,"title":{},"body":{"injectables/UserService.html":{}}}],["setheaders",{"_index":363,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{}}}],["setoverlayvisibility",{"_index":752,"title":{},"body":{"injectables/ContactsOverlayService.html":{}}}],["setoverlayvisibility(isvisible",{"_index":755,"title":{},"body":{"injectables/ContactsOverlayService.html":{}}}],["setpageflag",{"_index":1110,"title":{},"body":{"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["setpageflag(url",{"_index":1125,"title":{},"body":{"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["sets",{"_index":452,"title":{},"body":{"injectables/ContactService.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{},"components/SummaryComponent.html":{},"injectables/UserService.html":{}}}],["settimeout",{"_index":517,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["setting",{"_index":838,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"injectables/UserService.html":{}}}],["settings",{"_index":962,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["shadow",{"_index":1046,"title":{},"body":{"components/ContactsViewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["shortcuts",{"_index":1097,"title":{},"body":{"components/FooterBarComponent.html":{}}}],["show",{"_index":2093,"title":{},"body":{"components/SignUpComponent.html":{}}}],["showcontactsadd",{"_index":793,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["showcontactsedit",{"_index":971,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["showeditoverlay",{"_index":966,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["showoverlaystored",{"_index":2279,"title":{},"body":{"components/SummaryComponent.html":{}}}],["showoverlaysummary",{"_index":2239,"title":{},"body":{"components/SummaryComponent.html":{}}}],["shows",{"_index":849,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["showstatusdropdown",{"_index":2181,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["sich",{"_index":1480,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["sicherheitsgr&uuml;nden",{"_index":1879,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["sicherheitsgründen",{"_index":2010,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["sicherheitsl&uuml;cken",{"_index":1643,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["sicherheitslücken",{"_index":1958,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["sidebar",{"_index":2045,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar'},{'name",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["sidebar.component.html",{"_index":2051,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar.component.scss",{"_index":2050,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar/sidebar.component",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["sidebarcomponent",{"_index":195,"title":{"components/SidebarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sidebarcontnentcontainer",{"_index":1240,"title":{},"body":{"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{}}}],["sie",{"_index":1427,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["sign",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["signal",{"_index":491,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["signed",{"_index":2115,"title":{},"body":{"components/SignUpComponent.html":{}}}],["signedsuccesscontainer",{"_index":2117,"title":{},"body":{"components/SignUpComponent.html":{}}}],["signup",{"_index":301,"title":{},"body":{"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"components/SignUpComponent.html":{}}}],["signupcomponent",{"_index":197,"title":{"components/SignUpComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["signupfootercontainer",{"_index":1351,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["signupsuccess",{"_index":2079,"title":{},"body":{"components/SignUpComponent.html":{}}}],["simplechanges",{"_index":994,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["sind",{"_index":1432,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["sinne",{"_index":1612,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["situation",{"_index":1775,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["size",{"_index":597,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/LoginComponent.html":{},"injectables/ScreenSizeService.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["size.service",{"_index":867,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["size.service.ts",{"_index":2021,"title":{},"body":{"injectables/ScreenSizeService.html":{},"coverage.html":{}}}],["size.service.ts:17",{"_index":2033,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["size.service.ts:27",{"_index":2041,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["size.service.ts:29",{"_index":2029,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["sizes",{"_index":2035,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["slash",{"_index":2146,"title":{},"body":{"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{}}}],["slideinfrombottom",{"_index":635,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/SignUpComponent.html":{}}}],["smallheadline",{"_index":2332,"title":{},"body":{"components/SummaryComponent.html":{}}}],["smallheadlineaddcontacts",{"_index":595,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{}}}],["smallheadlinecontacts",{"_index":956,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{}}}],["sobald",{"_index":1509,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["sofern",{"_index":1596,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["solange",{"_index":1859,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["solcher",{"_index":1805,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["solid",{"_index":591,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["sonstige",{"_index":1741,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["sorted",{"_index":814,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["sorts",{"_index":832,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/AddContactService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"injectables/ContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScreenSizeService.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["soweit",{"_index":1604,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["sowie",{"_index":1558,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["space",{"_index":624,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["specific",{"_index":2133,"title":{},"body":{"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["specifically",{"_index":386,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"injectables/ScreenSizeService.html":{}}}],["specified",{"_index":2253,"title":{},"body":{"components/SummaryComponent.html":{}}}],["speicherdauer",{"_index":1665,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["speicherung",{"_index":1605,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["speziellere",{"_index":1668,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["split",{"_index":714,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{}}}],["src/.../environment.development.ts",{"_index":2563,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2564,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/add",{"_index":2462,"title":{},"body":{"coverage.html":{}}}],["src/app/app",{"_index":290,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":152,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":223,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/auth.guard.ts",{"_index":310,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/auth.guard.ts:14",{"_index":313,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth.guard.ts:17",{"_index":318,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth.interceptor",{"_index":272,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/auth.interceptor.ts",{"_index":330,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"coverage.html":{}}}],["src/app/auth.interceptor.ts:6",{"_index":332,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/auth.interceptor.ts:9",{"_index":337,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/auth/login.service",{"_index":1309,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login.service.ts",{"_index":1370,"title":{},"body":{"injectables/LoginService.html":{},"coverage.html":{}}}],["src/app/auth/login.service.ts:15",{"_index":1395,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/auth/login.service.ts:18",{"_index":1376,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/auth/login.service.ts:35",{"_index":1391,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/auth/login.service.ts:52",{"_index":1392,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/auth/login.service.ts:62",{"_index":1380,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/auth/login.service.ts:79",{"_index":1384,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/board",{"_index":2469,"title":{},"body":{"coverage.html":{}}}],["src/app/board/board.component.ts",{"_index":2472,"title":{},"body":{"coverage.html":{}}}],["src/app/contacts/contacts",{"_index":463,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"coverage.html":{}}}],["src/app/custom",{"_index":1065,"title":{},"body":{"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"coverage.html":{}}}],["src/app/edit",{"_index":2479,"title":{},"body":{"coverage.html":{}}}],["src/app/footer",{"_index":1093,"title":{},"body":{"components/FooterBarComponent.html":{},"coverage.html":{}}}],["src/app/header",{"_index":1155,"title":{},"body":{"components/HeaderBarMobileComponent.html":{},"coverage.html":{}}}],["src/app/imprint/legal",{"_index":1214,"title":{},"body":{"components/LegalNoticeComponent.html":{},"coverage.html":{}}}],["src/app/imprint/privacy",{"_index":1404,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts",{"_index":1256,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:106",{"_index":1287,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:114",{"_index":1286,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:124",{"_index":1294,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:134",{"_index":1291,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:141",{"_index":1283,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:21",{"_index":1299,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:24",{"_index":1305,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:27",{"_index":1306,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:30",{"_index":1301,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:33",{"_index":1304,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:36",{"_index":1276,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:55",{"_index":1297,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:64",{"_index":1289,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:96",{"_index":1277,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/reset",{"_index":2016,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["src/app/services/add",{"_index":6,"title":{},"body":{"injectables/AddContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"coverage.html":{}}}],["src/app/services/auth",{"_index":367,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"coverage.html":{}}}],["src/app/services/auth.service",{"_index":259,"title":{},"body":{"modules/AppModule.html":{},"components/SignUpComponent.html":{}}}],["src/app/services/auth.service.ts",{"_index":2411,"title":{},"body":{"injectables/UserRegistrationService.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts:17",{"_index":2416,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["src/app/services/auth.service.ts:32",{"_index":2422,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["src/app/services/auth.service.ts:51",{"_index":2417,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["src/app/services/category.service.ts",{"_index":408,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"coverage.html":{}}}],["src/app/services/category.service.ts:33",{"_index":429,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/services/category.service.ts:47",{"_index":430,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/services/contact.service.ts",{"_index":438,"title":{},"body":{"injectables/ContactService.html":{},"coverage.html":{}}}],["src/app/services/contact.service.ts:16",{"_index":455,"title":{},"body":{"injectables/ContactService.html":{}}}],["src/app/services/contact.service.ts:23",{"_index":451,"title":{},"body":{"injectables/ContactService.html":{}}}],["src/app/services/contact.service.ts:32",{"_index":448,"title":{},"body":{"injectables/ContactService.html":{}}}],["src/app/services/contacts",{"_index":744,"title":{},"body":{"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"coverage.html":{}}}],["src/app/services/screen",{"_index":866,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"injectables/ScreenSizeService.html":{},"coverage.html":{}}}],["src/app/services/subtask.service.ts",{"_index":2122,"title":{},"body":{"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{},"coverage.html":{}}}],["src/app/services/subtask.service.ts:106",{"_index":2229,"title":{},"body":{"injectables/SubtaskService.html":{}}}],["src/app/services/subtask.service.ts:34",{"_index":2224,"title":{},"body":{"injectables/SubtaskService.html":{}}}],["src/app/services/subtask.service.ts:48",{"_index":2228,"title":{},"body":{"injectables/SubtaskService.html":{}}}],["src/app/services/subtask.service.ts:58",{"_index":2227,"title":{},"body":{"injectables/SubtaskService.html":{}}}],["src/app/services/subtask.service.ts:68",{"_index":2225,"title":{},"body":{"injectables/SubtaskService.html":{}}}],["src/app/services/subtask.service.ts:84",{"_index":2230,"title":{},"body":{"injectables/SubtaskService.html":{}}}],["src/app/services/subtask.service.ts:96",{"_index":2226,"title":{},"body":{"injectables/SubtaskService.html":{}}}],["src/app/services/task.service",{"_index":2278,"title":{},"body":{"components/SummaryComponent.html":{}}}],["src/app/services/task.service.ts",{"_index":2163,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["src/app/services/task.service.ts:107",{"_index":2406,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:120",{"_index":2405,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:130",{"_index":2403,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:142",{"_index":2408,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:161",{"_index":2404,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:78",{"_index":2402,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:93",{"_index":2407,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/user.service",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"components/SummaryComponent.html":{}}}],["src/app/services/user.service.ts",{"_index":2427,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/services/user.service.ts:18",{"_index":2444,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:21",{"_index":2434,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:42",{"_index":2436,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:65",{"_index":2438,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:75",{"_index":2440,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/sidebar/sidebar.component.ts",{"_index":2044,"title":{},"body":{"components/SidebarComponent.html":{},"coverage.html":{}}}],["src/app/sidebar/sidebar.component.ts:105",{"_index":2058,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:17",{"_index":2068,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:20",{"_index":2067,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:23",{"_index":2065,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:26",{"_index":2054,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:40",{"_index":2062,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:54",{"_index":2063,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:66",{"_index":2064,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:75",{"_index":2057,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:81",{"_index":2061,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:87",{"_index":2055,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:93",{"_index":2056,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sidebar/sidebar.component.ts:99",{"_index":2060,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/sign",{"_index":2072,"title":{},"body":{"components/SignUpComponent.html":{},"coverage.html":{}}}],["src/app/summary/summary.component.ts",{"_index":2231,"title":{},"body":{"components/SummaryComponent.html":{},"coverage.html":{}}}],["src/app/summary/summary.component.ts:107",{"_index":2266,"title":{},"body":{"components/SummaryComponent.html":{}}}],["src/app/summary/summary.component.ts:125",{"_index":2255,"title":{},"body":{"components/SummaryComponent.html":{}}}],["src/app/summary/summary.component.ts:136",{"_index":2249,"title":{},"body":{"components/SummaryComponent.html":{}}}],["src/app/summary/summary.component.ts:146",{"_index":2256,"title":{},"body":{"components/SummaryComponent.html":{}}}],["src/app/summary/summary.component.ts:169",{"_index":2263,"title":{},"body":{"components/SummaryComponent.html":{}}}],["src/app/summary/summary.component.ts:22",{"_index":2269,"title":{},"body":{"components/SummaryComponent.html":{}}}],["src/app/summary/summary.component.ts:25",{"_index":2272,"title":{},"body":{"components/SummaryComponent.html":{}}}],["src/app/summary/summary.component.ts:28",{"_index":2270,"title":{},"body":{"components/SummaryComponent.html":{}}}],["src/app/summary/summary.component.ts:31",{"_index":2277,"title":{},"body":{"components/SummaryComponent.html":{}}}],["src/app/summary/summary.component.ts:34",{"_index":2274,"title":{},"body":{"components/SummaryComponent.html":{}}}],["src/app/summary/summary.component.ts:37",{"_index":2247,"title":{},"body":{"components/SummaryComponent.html":{}}}],["src/app/summary/summary.component.ts:56",{"_index":2268,"title":{},"body":{"components/SummaryComponent.html":{}}}],["src/app/summary/summary.component.ts:86",{"_index":2258,"title":{},"body":{"components/SummaryComponent.html":{}}}],["src/assets/models/contact.model",{"_index":459,"title":{},"body":{"injectables/ContactService.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{}}}],["src/assets/models/contact.model.ts",{"_index":431,"title":{},"body":{"interfaces/Contact.html":{},"coverage.html":{}}}],["src/assets/models/user.model",{"_index":1182,"title":{},"body":{"components/HeaderBarMobileComponent.html":{},"components/SummaryComponent.html":{},"injectables/UserService.html":{}}}],["src/assets/models/user.model.ts",{"_index":2409,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/environments/environment",{"_index":416,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["src/environments/environment.development.ts",{"_index":2489,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":2491,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ssl",{"_index":1874,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["standalone",{"_index":961,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["start",{"_index":661,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{}}}],["started",{"_index":2515,"title":{"index.html":{}},"body":{}}],["state",{"_index":316,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ContactService.html":{},"injectables/ContactsOverlayService.html":{}}}],["state.matches",{"_index":2040,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["statements",{"_index":2459,"title":{},"body":{"coverage.html":{}}}],["statt",{"_index":1851,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["status",{"_index":748,"title":{},"body":{"injectables/ContactsOverlayService.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["steht",{"_index":1551,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["stelle",{"_index":1650,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["stelle&ldquo",{"_index":1467,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["stellen",{"_index":1727,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["steuer",{"_index":1680,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["steuerbeh&ouml;rden",{"_index":1740,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["steuerbehörden",{"_index":1978,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["storage",{"_index":1171,"title":{},"body":{"components/HeaderBarMobileComponent.html":{},"injectables/LoginService.html":{},"injectables/UserService.html":{}}}],["store",{"_index":859,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/LoginComponent.html":{}}}],["stored",{"_index":68,"title":{},"body":{"injectables/AddContactService.html":{},"components/ContactsOverviewComponent.html":{},"components/LoginComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["storedcontactid",{"_index":781,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["storeduser",{"_index":2445,"title":{},"body":{"injectables/UserService.html":{}}}],["stores",{"_index":828,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{}}}],["storetoken",{"_index":1272,"title":{},"body":{"components/LoginComponent.html":{}}}],["storetoken(token",{"_index":1293,"title":{},"body":{"components/LoginComponent.html":{}}}],["storing",{"_index":509,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["string",{"_index":88,"title":{},"body":{"injectables/AddContactService.html":{},"components/AppComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/SidebarComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["stroke",{"_index":2362,"title":{},"body":{"components/SummaryComponent.html":{}}}],["structure",{"_index":1321,"title":{},"body":{"components/LoginComponent.html":{}}}],["styles",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["styleurls",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["submission",{"_index":467,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/SignUpComponent.html":{}}}],["submitcontactform",{"_index":477,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["submits",{"_index":501,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/SignUpComponent.html":{}}}],["subscribe",{"_index":764,"title":{},"body":{"injectables/ContactsOverlayService.html":{}}}],["subscribing",{"_index":1119,"title":{},"body":{"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["subscriptions",{"_index":840,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["subtask",{"_index":2121,"title":{"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{}},"body":{"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["subtask).pipe",{"_index":2139,"title":{},"body":{"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{}}}],["subtask).pipe(catcherror(this.handleerror",{"_index":2148,"title":{},"body":{"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{}}}],["subtask.id",{"_index":2210,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["subtask.text",{"_index":2212,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["subtasks",{"_index":2126,"title":{},"body":{"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["subtaskservice",{"_index":2125,"title":{"injectables/SubtaskService.html":{}},"body":{"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{},"coverage.html":{}}}],["success",{"_index":503,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/SignUpComponent.html":{}}}],["successful",{"_index":702,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/SignUpComponent.html":{},"injectables/UserService.html":{}}}],["successfully",{"_index":469,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/SignUpComponent.html":{}}}],["summary",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["summary.component.html",{"_index":2235,"title":{},"body":{"components/SummaryComponent.html":{}}}],["summary.component.scss",{"_index":2234,"title":{},"body":{"components/SummaryComponent.html":{}}}],["summary/summary.component",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["summarycomponent",{"_index":200,"title":{"components/SummaryComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{},"coverage.html":{},"overview.html":{}}}],["summarycontainer",{"_index":2329,"title":{},"body":{"components/SummaryComponent.html":{}}}],["summarycontent",{"_index":2330,"title":{},"body":{"components/SummaryComponent.html":{}}}],["summarydesktopcontainer",{"_index":2378,"title":{},"body":{"components/SummaryComponent.html":{}}}],["summarydividingline",{"_index":2375,"title":{},"body":{"components/SummaryComponent.html":{}}}],["summaryunderline",{"_index":2333,"title":{},"body":{"components/SummaryComponent.html":{}}}],["support",{"_index":2555,"title":{},"body":{"modules.html":{}}}],["supports",{"_index":960,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["svg",{"_index":1154,"title":{},"body":{"components/FooterBarComponent.html":{},"modules.html":{}}}],["symbol",{"_index":1896,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["systeme",{"_index":1497,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["t.id",{"_index":2209,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["t.text",{"_index":2211,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["tab",{"_index":2059,"title":{},"body":{"components/SidebarComponent.html":{}}}],["table",{"_index":2493,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2492,"title":{},"body":{"coverage.html":{}}}],["tablet",{"_index":822,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"injectables/ScreenSizeService.html":{}}}],["takes",{"_index":810,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["tap",{"_index":101,"title":{},"body":{"injectables/AddContactService.html":{},"injectables/LoginService.html":{},"injectables/UserService.html":{}}}],["tap(response",{"_index":1400,"title":{},"body":{"injectables/LoginService.html":{}}}],["tap(user",{"_index":2451,"title":{},"body":{"injectables/UserService.html":{}}}],["task",{"_index":166,"title":{"interfaces/Task.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask-1.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["task'},{'name",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["task).pipe(catcherror(this.handleerror",{"_index":2202,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["task.component",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["task.component.ts",{"_index":2463,"title":{},"body":{"coverage.html":{}}}],["task.priority",{"_index":2301,"title":{},"body":{"components/SummaryComponent.html":{}}}],["task.status",{"_index":2200,"title":{},"body":{"interfaces/Subtask-1.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["task.subtasks.filter",{"_index":2206,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["task/add",{"_index":245,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["task/edit",{"_index":276,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["tasks",{"_index":531,"title":{},"body":{"components/ContactsAddComponent.html":{},"interfaces/Subtask-1.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["tasks.length",{"_index":2324,"title":{},"body":{"components/SummaryComponent.html":{}}}],["taskservice",{"_index":2182,"title":{"injectables/TaskService.html":{}},"body":{"interfaces/Subtask-1.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["team",{"_index":533,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{}}}],["technisch",{"_index":1835,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["technische",{"_index":1502,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["teil",{"_index":1513,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["teilweise",{"_index":1730,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["telefon",{"_index":1230,"title":{},"body":{"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["template",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["templateurl",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["test",{"_index":2542,"title":{},"body":{"index.html":{}}}],["testing",{"_index":2550,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2541,"title":{},"body":{"index.html":{}}}],["text",{"_index":1205,"title":{},"body":{"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["textcenter",{"_index":2356,"title":{},"body":{"components/SummaryComponent.html":{}}}],["thema",{"_index":1442,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["thirdrow",{"_index":2347,"title":{},"body":{"components/SummaryComponent.html":{}}}],["this.addcontactservice.addcontact(this.contactdata).subscribe",{"_index":514,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["this.addcontactservice.deletecontact(contactid).subscribe",{"_index":1012,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["this.addcontactservice.deletecontact(this.contact.id).subscribe",{"_index":728,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["this.addcontactservice.getcontactbyid(contactid).subscribe",{"_index":711,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{}}}],["this.addcontactservice.getcontacts().subscribe",{"_index":880,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["this.addcontactservice.updatecontact(this.contact.id",{"_index":719,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["this.addcontactsuccess",{"_index":515,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["this.apiurl.replace",{"_index":2143,"title":{},"body":{"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{}}}],["this.breakpointobserver",{"_index":2036,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["this.close.emit",{"_index":518,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{}}}],["this.closeeditcomponent",{"_index":723,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["this.contact",{"_index":712,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{}}}],["this.contact).subscribe",{"_index":720,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["this.contact.id",{"_index":718,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{}}}],["this.contactadded.emit(true",{"_index":516,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["this.contactdata.color",{"_index":512,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["this.contactdeleted.emit",{"_index":1013,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["this.contactedited.emit(false",{"_index":725,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["this.contactedited.emit(true",{"_index":722,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["this.contactid",{"_index":709,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{}}}],["this.contactsoverlayservice.overlayvisibility$.subscribe(isvisible",{"_index":874,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["this.contactsoverlayservice.setoverlayvisibility(false",{"_index":900,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{}}}],["this.contactsoverlayservice.setoverlayvisibility(true",{"_index":908,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["this.contactsubject.asobservable",{"_index":462,"title":{},"body":{"injectables/ContactService.html":{}}}],["this.contactsubject.next(contact",{"_index":461,"title":{},"body":{"injectables/ContactService.html":{}}}],["this.contactsviewnotvisible",{"_index":875,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["this.contactupdated.emit",{"_index":1015,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["this.createauthorizationheader",{"_index":112,"title":{},"body":{"injectables/AddContactService.html":{}}}],["this.currentuser",{"_index":2288,"title":{},"body":{"components/SummaryComponent.html":{}}}],["this.currentusersubject",{"_index":2448,"title":{},"body":{"injectables/UserService.html":{}}}],["this.currentusersubject.asobservable",{"_index":2453,"title":{},"body":{"injectables/UserService.html":{}}}],["this.currentusersubject.next(user",{"_index":2454,"title":{},"body":{"injectables/UserService.html":{}}}],["this.displayerrormessage",{"_index":1322,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.email",{"_index":1326,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.fetchcontactdetails(changes['contactid'].currentvalue",{"_index":1010,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["this.fetchcontactdetails(contactid",{"_index":1007,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["this.fetchcontactdetails(this.contact.id",{"_index":1014,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["this.fetchcontactdetails(this.contactid",{"_index":1004,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["this.findcontactbyid(contactid",{"_index":906,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["this.findnearestduedate",{"_index":2297,"title":{},"body":{"components/SummaryComponent.html":{}}}],["this.generategreeting(user",{"_index":2287,"title":{},"body":{"components/SummaryComponent.html":{}}}],["this.generaterandomdarkcolor",{"_index":513,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["this.getinitials(contact.name",{"_index":885,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["this.gotocontactdetails(contactid",{"_index":901,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["this.gotodesktopcontactdetails(contactid",{"_index":902,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["this.gotodesktopcontactdetails(this.storedcontactid",{"_index":878,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["this.greeting",{"_index":2283,"title":{},"body":{"components/SummaryComponent.html":{}}}],["this.groupcontactsbyfirstletter(contacts",{"_index":881,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["this.groupedcontacts",{"_index":879,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["this.groupedcontacts[firstletter",{"_index":887,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["this.groupedcontacts[firstletter].push",{"_index":888,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["this.groupedcontacts[letter].find(contact",{"_index":909,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["this.groupedcontacts[letter].sort((a",{"_index":889,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["this.http",{"_index":2214,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{}}}],["this.http.delete(`${this.apiurl}/${id}`).pipe(catcherror(this.handleerror",{"_index":2151,"title":{},"body":{"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{}}}],["this.http.delete(`${this.baseurl}/contact/${contactid",{"_index":129,"title":{},"body":{"injectables/AddContactService.html":{}}}],["this.http.delete(`${this.baseurl}/tasks/${id}/`).pipe(catcherror(this.handleerror",{"_index":2218,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["this.http.get(`${this.apiurl}/${id}`).pipe(catcherror(this.handleerror",{"_index":2136,"title":{},"body":{"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{}}}],["this.http.get(`${this.baseurl}/addcontact",{"_index":121,"title":{},"body":{"injectables/AddContactService.html":{}}}],["this.http.get(`${this.baseurl}/contact/${contactid",{"_index":127,"title":{},"body":{"injectables/AddContactService.html":{}}}],["this.http.get(`${this.baseurl}/tasks/${id}/`).pipe(catcherror(this.handleerror",{"_index":2198,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["this.http.get(`${this.baseurl}/tasks/`).pipe",{"_index":2194,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["this.http.get(this.apiurl",{"_index":428,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["this.http.get(this.apiurl).pipe(catcherror(this.handleerror",{"_index":2132,"title":{},"body":{"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{}}}],["this.http.get(this.protectedurl",{"_index":1403,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.http.get(this.userdetailsurl",{"_index":2450,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.post(`${this.baseurl}/addcontact",{"_index":114,"title":{},"body":{"injectables/AddContactService.html":{}}}],["this.http.post(`${this.baseurl}/tasks",{"_index":2201,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["this.http.post(this.apiurl",{"_index":2138,"title":{},"body":{"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{}}}],["this.http.post(this.loginurl",{"_index":1399,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.http.put(`${this.baseurl}/contact/${contactid",{"_index":131,"title":{},"body":{"injectables/AddContactService.html":{}}}],["this.http.put(url",{"_index":2147,"title":{},"body":{"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{}}}],["this.isaddtaskpage",{"_index":1140,"title":{},"body":{"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["this.isboardpage",{"_index":1139,"title":{},"body":{"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["this.iscontactspage",{"_index":1141,"title":{},"body":{"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["this.isdropdownopen",{"_index":1189,"title":{},"body":{"components/HeaderBarMobileComponent.html":{}}}],["this.ishandsetortablet",{"_index":873,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["this.ispasswordwrong",{"_index":1318,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.issummarypage",{"_index":1138,"title":{},"body":{"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["this.isusernamewrong",{"_index":1319,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.isvisible",{"_index":870,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["this.loadcontact",{"_index":708,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["this.loadcontacts",{"_index":871,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["this.loadstoredcontactdetails",{"_index":877,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["this.loadtasks",{"_index":2282,"title":{},"body":{"components/SummaryComponent.html":{}}}],["this.login",{"_index":1330,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginservice.login(this.email",{"_index":1311,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.nearestduedate",{"_index":2303,"title":{},"body":{"components/SummaryComponent.html":{}}}],["this.overlayvisibilitysubject.asobservable",{"_index":760,"title":{},"body":{"injectables/ContactsOverlayService.html":{}}}],["this.overlayvisibilitysubject.next(isvisible",{"_index":767,"title":{},"body":{"injectables/ContactsOverlayService.html":{}}}],["this.overlayvisibilitysubject.value",{"_index":768,"title":{},"body":{"injectables/ContactsOverlayService.html":{}}}],["this.pad(date.day)}/${this.pad(date.month)}/${date.year",{"_index":1092,"title":{},"body":{"injectables/CustomDateParserFormatter-1.html":{}}}],["this.password",{"_index":1328,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.password).subscribe",{"_index":1312,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.passwordvisible",{"_index":1310,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["this.rememberme",{"_index":1332,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.resetfields",{"_index":1325,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.resetpageflags",{"_index":1135,"title":{},"body":{"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["this.route.params.subscribe(params",{"_index":1005,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["this.route.snapshot.params['id",{"_index":710,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["this.router.events.subscribe(event",{"_index":1134,"title":{},"body":{"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["this.router.navigate(['/addtask",{"_index":1147,"title":{},"body":{"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["this.router.navigate(['/board",{"_index":1148,"title":{},"body":{"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["this.router.navigate(['/contacts",{"_index":729,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["this.router.navigate(['/login",{"_index":326,"title":{},"body":{"guards/AuthGuard.html":{},"components/SignUpComponent.html":{}}}],["this.router.navigate(['/signup",{"_index":1331,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate(['/summary",{"_index":1146,"title":{},"body":{"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{}}}],["this.router.navigatebyurl('/login",{"_index":404,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"components/HeaderBarMobileComponent.html":{}}}],["this.screensizeservice.ishandsetortablet$.subscribe",{"_index":872,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["this.selectedcontact",{"_index":907,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["this.setcurrentuser(user",{"_index":2452,"title":{},"body":{"injectables/UserService.html":{}}}],["this.setpageflag(event.urlafterredirects",{"_index":1136,"title":{},"body":{"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["this.setpageflag(this.router.url",{"_index":1137,"title":{},"body":{"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["this.showeditoverlay",{"_index":1011,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["this.showoverlaysummary",{"_index":2289,"title":{},"body":{"components/SummaryComponent.html":{}}}],["this.signupsuccess",{"_index":2108,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.storedcontactid",{"_index":876,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["this.storetoken(response.token",{"_index":1314,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.tasks",{"_index":2296,"title":{},"body":{"components/SummaryComponent.html":{}}}],["this.tasks.filter(task",{"_index":2299,"title":{},"body":{"components/SummaryComponent.html":{}}}],["this.tasks.foreach(task",{"_index":2310,"title":{},"body":{"components/SummaryComponent.html":{}}}],["this.tasks.length",{"_index":2302,"title":{},"body":{"components/SummaryComponent.html":{}}}],["this.tasks[0",{"_index":2306,"title":{},"body":{"components/SummaryComponent.html":{}}}],["this.user.acceptsprivacypolicy",{"_index":2101,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.user.confirmpassword",{"_index":2106,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.user.email",{"_index":2104,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.user.name",{"_index":2103,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.user.password",{"_index":2105,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.userinitial",{"_index":1187,"title":{},"body":{"components/HeaderBarMobileComponent.html":{}}}],["this.userregistrationservice.registeruser(userdatatosend).subscribe",{"_index":2107,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.userservice",{"_index":2284,"title":{},"body":{"components/SummaryComponent.html":{}}}],["this.userservice.getcurrentuser().subscribe(user",{"_index":1183,"title":{},"body":{"components/HeaderBarMobileComponent.html":{},"components/SummaryComponent.html":{}}}],["this.userservice.setcurrentuser(response.user",{"_index":1316,"title":{},"body":{"components/LoginComponent.html":{}}}],["throwerror",{"_index":103,"title":{},"body":{"injectables/AddContactService.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{}}}],["throwerror('something",{"_index":2189,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["throwerror(error",{"_index":120,"title":{},"body":{"injectables/AddContactService.html":{},"injectables/UserRegistrationService.html":{}}}],["throwerror(errormessage",{"_index":2162,"title":{},"body":{"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{}}}],["tickicon",{"_index":2359,"title":{},"body":{"components/SummaryComponent.html":{}}}],["time",{"_index":2259,"title":{},"body":{"components/SummaryComponent.html":{}}}],["title",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["tls",{"_index":1875,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["tmg",{"_index":1222,"title":{},"body":{"components/LegalNoticeComponent.html":{}}}],["todo",{"_index":2177,"title":{},"body":{"interfaces/Subtask-1.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["toggle",{"_index":1353,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["toggledropdown",{"_index":1162,"title":{},"body":{"components/HeaderBarMobileComponent.html":{}}}],["togglepasswordvisibility",{"_index":1273,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["toggles",{"_index":1178,"title":{},"body":{"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["toggling",{"_index":2076,"title":{},"body":{"components/SignUpComponent.html":{}}}],["token",{"_index":69,"title":{},"body":{"injectables/AddContactService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/UserService.html":{}}}],["tool",{"_index":1196,"title":{},"body":{"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["top",{"_index":547,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["topcontaineraddcontacts",{"_index":571,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{}}}],["touppercase",{"_index":717,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{}}}],["tracking",{"_index":1113,"title":{},"body":{"components/FooterBarComponent.html":{}}}],["tracks",{"_index":1302,"title":{},"body":{"components/LoginComponent.html":{}}}],["trailing",{"_index":2145,"title":{},"body":{"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{}}}],["transform",{"_index":568,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["transition",{"_index":2354,"title":{},"body":{"components/SummaryComponent.html":{}}}],["translate",{"_index":569,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["translate(0",{"_index":1369,"title":{},"body":{"components/LoginComponent.html":{}}}],["translatey(0",{"_index":2120,"title":{},"body":{"components/SignUpComponent.html":{}}}],["translatey(100vh",{"_index":2119,"title":{},"body":{"components/SignUpComponent.html":{}}}],["translatey(80",{"_index":1049,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["transparent",{"_index":1354,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["tree",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["tries",{"_index":693,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["triggers",{"_index":978,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["true",{"_index":289,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/ContactsAddComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["try",{"_index":1336,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["tslib",{"_index":2510,"title":{},"body":{"dependencies.html":{}}}],["ttdsg",{"_index":1603,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["type",{"_index":47,"title":{},"body":{"injectables/AddContactService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interceptors/AuthInterceptorService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Contact.html":{},"interfaces/Contact-1.html":{},"injectables/ContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/ScreenSizeService.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":903,"title":{},"body":{"components/ContactsOverviewComponent.html":{}}}],["uhrzeit",{"_index":1505,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["um",{"_index":1482,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["umfasst",{"_index":1613,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["umst&auml;nden",{"_index":1547,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["umständen",{"_index":1943,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["unauthorized",{"_index":372,"title":{},"body":{"interceptors/AuthInterceptorService.html":{}}}],["unber&uuml;hrt",{"_index":1765,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["unberührt",{"_index":1982,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["unbeschadet",{"_index":1821,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["und",{"_index":1535,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["undefined",{"_index":688,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/SummaryComponent.html":{}}}],["underline",{"_index":1339,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["unentgeltlich",{"_index":1530,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["unentgeltliche",{"_index":1838,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["union",{"_index":1872,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["unique",{"_index":413,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["uniquesubtasks",{"_index":2205,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["unit",{"_index":2540,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":2156,"title":{},"body":{"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{}}}],["unrechtm&auml;&szlig;ig",{"_index":1849,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["unrechtmäßig",{"_index":2002,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["uns",{"_index":1475,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["unsere",{"_index":1496,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["unserem",{"_index":1916,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["unseren",{"_index":1857,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["unserer",{"_index":1444,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["unseres",{"_index":1712,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["unter",{"_index":1445,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["up",{"_index":839,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["up'},{'name",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["up.component",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["up.component.html",{"_index":2078,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.scss",{"_index":2077,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts",{"_index":2073,"title":{},"body":{"components/SignUpComponent.html":{},"coverage.html":{}}}],["up.component.ts:20",{"_index":2092,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:23",{"_index":2096,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:32",{"_index":2082,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:50",{"_index":2085,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:79",{"_index":2091,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:88",{"_index":2087,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:94",{"_index":2084,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up/sign",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/SignUpComponent.html":{},"coverage.html":{}}}],["upcoming",{"_index":2322,"title":{},"body":{"components/SummaryComponent.html":{}}}],["update",{"_index":17,"title":{},"body":{"injectables/AddContactService.html":{},"components/ContactsEditComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["updatecontact",{"_index":34,"title":{},"body":{"injectables/AddContactService.html":{}}}],["updatecontact(contactid",{"_index":83,"title":{},"body":{"injectables/AddContactService.html":{}}}],["updated",{"_index":87,"title":{},"body":{"injectables/AddContactService.html":{},"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["updatedcontact",{"_index":721,"title":{},"body":{"components/ContactsEditComponent.html":{}}}],["updatedtask",{"_index":2213,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["updates",{"_index":85,"title":{},"body":{"injectables/AddContactService.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsViewComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{}}}],["updatesubtask",{"_index":2223,"title":{},"body":{"injectables/SubtaskService.html":{}}}],["updatesubtask(id",{"_index":2142,"title":{},"body":{"interfaces/Subtask.html":{},"injectables/SubtaskService.html":{}}}],["updatetask",{"_index":2401,"title":{},"body":{"injectables/TaskService.html":{}}}],["updatetask(id",{"_index":2204,"title":{},"body":{"interfaces/Subtask-1.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["updating",{"_index":132,"title":{},"body":{"injectables/AddContactService.html":{},"injectables/ContactService.html":{},"components/ContactsEditComponent.html":{}}}],["upon",{"_index":376,"title":{},"body":{"interceptors/AuthInterceptorService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{}}}],["urgent",{"_index":2320,"title":{},"body":{"components/SummaryComponent.html":{}}}],["urgentdate",{"_index":2374,"title":{},"body":{"components/SummaryComponent.html":{}}}],["urgenticontextcontainer",{"_index":2372,"title":{},"body":{"components/SummaryComponent.html":{}}}],["urgentshadow",{"_index":2369,"title":{},"body":{"components/SummaryComponent.html":{}}}],["url",{"_index":93,"title":{},"body":{"injectables/AddContactService.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/FooterBarComponent.html":{},"injectables/LoginService.html":{},"components/SidebarComponent.html":{},"interfaces/Subtask.html":{},"interfaces/Subtask-1.html":{},"injectables/SubtaskService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{}}}],["url('/assets/img/mail.png",{"_index":616,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["url('/assets/img/person.png",{"_index":611,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/SignUpComponent.html":{}}}],["url('/assets/img/phone.png",{"_index":618,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{}}}],["url.includes('/addtask",{"_index":1144,"title":{},"body":{"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["url.includes('/board",{"_index":1143,"title":{},"body":{"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["url.includes('/contacts",{"_index":1145,"title":{},"body":{"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["url.includes('/summary",{"_index":1142,"title":{},"body":{"components/FooterBarComponent.html":{},"components/SidebarComponent.html":{}}}],["urls",{"_index":341,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["urltree",{"_index":322,"title":{},"body":{"guards/AuthGuard.html":{}}}],["use",{"_index":2533,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":287,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":816,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/SignUpComponent.html":{}}}],["user",{"_index":371,"title":{"interfaces/User.html":{},"interfaces/User-1.html":{}},"body":{"interceptors/AuthInterceptorService.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask-1.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user's",{"_index":1174,"title":{},"body":{"components/HeaderBarMobileComponent.html":{},"injectables/LoginService.html":{}}}],["user.name",{"_index":1184,"title":{},"body":{"components/HeaderBarMobileComponent.html":{}}}],["user.name.charat(0).touppercase",{"_index":1188,"title":{},"body":{"components/HeaderBarMobileComponent.html":{}}}],["userdata",{"_index":2424,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["userdatatosend",{"_index":2102,"title":{},"body":{"components/SignUpComponent.html":{}}}],["userdetailsurl",{"_index":2431,"title":{},"body":{"injectables/UserService.html":{}}}],["userinitial",{"_index":1161,"title":{},"body":{"components/HeaderBarMobileComponent.html":{}}}],["username",{"_index":1280,"title":{},"body":{"components/LoginComponent.html":{}}}],["userregistrationservice",{"_index":219,"title":{"injectables/UserRegistrationService.html":{}},"body":{"modules/AppModule.html":{},"components/SignUpComponent.html":{},"injectables/UserRegistrationService.html":{},"coverage.html":{},"overview.html":{}}}],["userservice",{"_index":220,"title":{"injectables/UserService.html":{}},"body":{"modules/AppModule.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"components/SummaryComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["uses",{"_index":2428,"title":{},"body":{"injectables/UserService.html":{}}}],["using",{"_index":685,"title":{},"body":{"components/ContactsEditComponent.html":{},"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["uuml;ber",{"_index":1532,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["uuml;berblick",{"_index":1419,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["uuml;bermitteln",{"_index":1899,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["uuml;bermittlung",{"_index":1731,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["uuml;berpr&uuml;fen",{"_index":1846,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["uuml;bertragung",{"_index":1696,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["uuml;berwiegen",{"_index":1795,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["uuml;brigen",{"_index":1915,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["valid",{"_index":537,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{}}}],["validation",{"_index":2075,"title":{},"body":{"components/SignUpComponent.html":{}}}],["validators",{"_index":2100,"title":{},"body":{"components/SignUpComponent.html":{}}}],["value",{"_index":90,"title":{},"body":{"injectables/AddContactService.html":{},"components/AppComponent.html":{},"injectables/CategoryService.html":{},"injectables/ContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/ScreenSizeService.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"injectables/SubtaskService.html":{},"components/SummaryComponent.html":{},"injectables/TaskService.html":{},"injectables/UserRegistrationService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["value.trim().split",{"_index":1077,"title":{},"body":{"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{}}}],["values",{"_index":499,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["var",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["variable",{"_index":2490,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2562,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":2047,"title":{},"body":{"components/SidebarComponent.html":{}}}],["verantwortlich",{"_index":1453,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verantwortliche",{"_index":1651,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verantwortlichen",{"_index":1466,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verarbeiten",{"_index":1688,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verarbeitet",{"_index":1693,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verarbeitung",{"_index":1549,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verbindung",{"_index":1806,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verbleiben",{"_index":1670,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verifying",{"_index":1387,"title":{},"body":{"injectables/LoginService.html":{}}}],["verlangen",{"_index":1542,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verpflichtet",{"_index":1738,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verpflichtung",{"_index":1709,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verschiedene",{"_index":1629,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verschiedenen",{"_index":1725,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verschl&uuml;sselte",{"_index":1887,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verschl&uuml;sselung",{"_index":1876,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verschlüsselte",{"_index":2011,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verschlüsselung",{"_index":2009,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["version",{"_index":2519,"title":{},"body":{"index.html":{},"properties.html":{}}}],["verst&ouml;&szlig;en",{"_index":1811,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["versto&szlig;es",{"_index":1819,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verstoßes",{"_index":1995,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verstößen",{"_index":1992,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verteidigung",{"_index":1799,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["vertrag",{"_index":1753,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["vertrags",{"_index":1750,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["vertragserf&uuml;llung",{"_index":1702,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["vertragserfüllung",{"_index":1970,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["vertraulich",{"_index":1624,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["vertraulicher",{"_index":1880,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verwaltungsrechtlicher",{"_index":1823,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verwendet",{"_index":1523,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verwendung",{"_index":1582,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["via",{"_index":1700,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"index.html":{}}}],["viele",{"_index":1757,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["view",{"_index":800,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/SummaryComponent.html":{}}}],["view'},{'name",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["view.component",{"_index":262,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["view.component.html",{"_index":965,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["view.component.scss",{"_index":964,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["view.component.ts",{"_index":958,"title":{},"body":{"components/ContactsViewComponent.html":{},"coverage.html":{}}}],["view.component.ts:103",{"_index":988,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["view.component.ts:119",{"_index":1000,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["view.component.ts:133",{"_index":990,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["view.component.ts:148",{"_index":984,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["view.component.ts:172",{"_index":999,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["view.component.ts:190",{"_index":992,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["view.component.ts:28",{"_index":977,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["view.component.ts:31",{"_index":979,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["view.component.ts:34",{"_index":1001,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["view.component.ts:37",{"_index":976,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["view.component.ts:40",{"_index":981,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["view.component.ts:43",{"_index":983,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["view.component.ts:46",{"_index":980,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["view.component.ts:49",{"_index":975,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["view.component.ts:71",{"_index":996,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["view.component.ts:91",{"_index":995,"title":{},"body":{"components/ContactsViewComponent.html":{}}}],["view/contacts",{"_index":261,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ContactsViewComponent.html":{},"coverage.html":{}}}],["visibility",{"_index":747,"title":{},"body":{"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"components/SignUpComponent.html":{},"interfaces/Subtask-1.html":{},"components/SummaryComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["visible",{"_index":759,"title":{},"body":{"injectables/ContactsOverlayService.html":{}}}],["void",{"_index":453,"title":{},"body":{"injectables/ContactService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"injectables/ContactsOverlayService.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{},"injectables/UserService.html":{}}}],["vom",{"_index":1764,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["von",{"_index":1579,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["vor",{"_index":1500,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["vorgenommen",{"_index":1858,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["vorliegende",{"_index":1630,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["vorvertraglicher",{"_index":1704,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["website",{"_index":1429,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["websitebetreiber",{"_index":1459,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["wechselt",{"_index":1894,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["weight",{"_index":946,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["weisen",{"_index":1636,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["weiter",{"_index":1735,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["weiteren",{"_index":1550,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["weitergabe",{"_index":1739,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["welche",{"_index":1524,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["welchem",{"_index":1634,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["wenden",{"_index":1560,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["wenn",{"_index":1426,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["wer",{"_index":1451,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["werbung",{"_index":1804,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["werden",{"_index":1437,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["wessen",{"_index":1862,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["whether",{"_index":758,"title":{},"body":{"injectables/ContactsOverlayService.html":{},"components/ContactsViewComponent.html":{}}}],["white",{"_index":631,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["wichtigen",{"_index":1869,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["widerruf",{"_index":1756,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["widerrufbar",{"_index":1614,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["widerrufen",{"_index":1545,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["widersprechen",{"_index":1807,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["widerspruch",{"_index":1777,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["widerspruchsrecht",{"_index":1766,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["width",{"_index":548,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"injectables/ScreenSizeService.html":{},"components/SidebarComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["wie",{"_index":1468,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["window.open('/legal",{"_index":2071,"title":{},"body":{"components/SidebarComponent.html":{}}}],["window.open('/privacy",{"_index":2069,"title":{},"body":{"components/SidebarComponent.html":{}}}],["wir",{"_index":1470,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["wird",{"_index":1514,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["within",{"_index":804,"title":{},"body":{"components/ContactsOverviewComponent.html":{},"components/ContactsViewComponent.html":{},"components/FooterBarComponent.html":{},"components/SummaryComponent.html":{}}}],["without",{"_index":350,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/ContactsEditComponent.html":{},"components/ContactsViewComponent.html":{}}}],["wof&uuml;r",{"_index":1511,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["wofür",{"_index":1937,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["works",{"_index":2020,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["wrong",{"_index":1335,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["wurde",{"_index":1599,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["x.tostring(16",{"_index":527,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["y",{"_index":1927,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["year",{"_index":1079,"title":{},"body":{"injectables/CustomDateParserFormatter.html":{},"injectables/CustomDateParserFormatter-1.html":{}}}],["z",{"_index":557,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsEditComponent.html":{},"components/HeaderBarMobileComponent.html":{},"components/LegalNoticeComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SignUpComponent.html":{},"components/SummaryComponent.html":{}}}],["z.&nbsp;b",{"_index":1481,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["zeit",{"_index":1845,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["zone.js",{"_index":2512,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["zu",{"_index":1518,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["zugriff",{"_index":1607,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["zukommen",{"_index":1902,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["zukunft",{"_index":1544,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["zul&auml;ssigen",{"_index":1678,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["zulässigen",{"_index":1965,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["zum",{"_index":1441,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["zur",{"_index":1465,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["zus&auml;tzlich",{"_index":1701,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["zusammen",{"_index":1728,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["zusammenh&auml;ngt",{"_index":1913,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["zusammenhängt",{"_index":2014,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["zust&auml;ndigen",{"_index":1555,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["zuständigen",{"_index":1945,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["zusätzlich",{"_index":1969,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["zuverl&auml;ssigen",{"_index":1594,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["zuverlässigen",{"_index":1951,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["zweck",{"_index":1536,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["zwecke",{"_index":1658,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["zwecks",{"_index":1907,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["zwingende",{"_index":1790,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["zwischen",{"_index":1856,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/AddContactService.html":{"url":"injectables/AddContactService.html","title":"injectable - AddContactService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AddContactService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/add-contact.service.ts\n        \n\n\n            \n                Description\n            \n            \n                AddContactService is responsible for managing contact data by providing\nmethods to add, fetch, update, and delete contacts. It includes authentication\nin the header of each request.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addContact\n                            \n                            \n                                    Private\n                                createAuthorizationHeader\n                            \n                            \n                                deleteContact\n                            \n                            \n                                getContactById\n                            \n                            \n                                getContacts\n                            \n                            \n                                updateContact\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/add-contact.service.ts:19\n                            \n                        \n\n                \n                    \n                            Constructor to inject HttpClient for making HTTP requests.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe HttpClient instance for making HTTP requests.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addContact\n                        \n                    \n                \n            \n            \n                \naddContact(contactData: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/add-contact.service.ts:34\n                        \n                    \n\n\n            \n                \n                        Adds a new contact with the provided contact data.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                contactData\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nObject containing the contact's information.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that emits the response from the API.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createAuthorizationHeader\n                        \n                    \n                \n            \n            \n                \n                        \n                    createAuthorizationHeader()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/add-contact.service.ts:64\n                        \n                    \n\n\n            \n                \n                        Creates an HTTP Authorization header with the stored authentication token.\n\n\n                        \n                            Returns :     HttpHeaders\n\n                        \n                            \n                                An HttpHeaders object containing the Authorization header.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteContact\n                        \n                    \n                \n            \n            \n                \ndeleteContact(contactId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/add-contact.service.ts:94\n                        \n                    \n\n\n            \n                \n                        Deletes a contact by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                contactId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the contact to delete.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that emits the response from the API.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getContactById\n                        \n                    \n                \n            \n            \n                \ngetContactById(contactId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/add-contact.service.ts:78\n                        \n                    \n\n\n            \n                \n                        Fetches a contact by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                contactId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the contact to fetch.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that emits the contact's data.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getContacts\n                        \n                    \n                \n            \n            \n                \ngetContacts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/add-contact.service.ts:49\n                        \n                    \n\n\n            \n                \n                        Retrieves the list of contacts from the API.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that emits the list of contacts.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateContact\n                        \n                    \n                \n            \n            \n                \nupdateContact(contactId: number, contactData: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/add-contact.service.ts:111\n                        \n                    \n\n\n            \n                \n                        Updates an existing contact with new data.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                contactId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the contact to update.\n\n\n                                            \n                                        \n                                        \n                                                contactData\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nObject containing the updated contact information.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that emits the response from the API.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://join.server.fabianduerr.com'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/add-contact.service.ts:19\n                        \n                    \n\n            \n                \n                    Base URL for the API endpoints.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, pipe } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\n\n\n/**\n * AddContactService is responsible for managing contact data by providing\n * methods to add, fetch, update, and delete contacts. It includes authentication\n * in the header of each request.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class AddContactService {\n\n  /** Base URL for the API endpoints. */\n  private baseUrl = 'https://join.server.fabianduerr.com';\n\n\n    /**\n   * Constructor to inject HttpClient for making HTTP requests.\n   * @param http - The HttpClient instance for making HTTP requests.\n   */\n  constructor(private http: HttpClient) {}\n\n\n    /**\n   * Adds a new contact with the provided contact data.\n   * @param contactData - Object containing the contact's information.\n   * @returns An Observable that emits the response from the API.\n   */\n  addContact(contactData: any): Observable {\n    const headers = this.createAuthorizationHeader();\n    return this.http.post(`${this.baseUrl}/addcontact/`, contactData, { headers }).pipe(\n      catchError(error => {\n        console.error('Error occurred while adding contact:', error);\n        return throwError(error);\n      }),\n    );\n  }\n\n\n    /**\n   * Retrieves the list of contacts from the API.\n   * @returns An Observable that emits the list of contacts.\n   */\n  getContacts(): Observable {\n    const headers = this.createAuthorizationHeader();\n    return this.http.get(`${this.baseUrl}/addcontact/`, { headers }).pipe(\n      catchError(error => {\n        console.error('Error occurred while fetching contacts:', error);\n        return throwError(error);\n      }),\n    );\n  }\n\n\n  /**\n   * Creates an HTTP Authorization header with the stored authentication token.\n   * @returns An HttpHeaders object containing the Authorization header.\n   */\n  private createAuthorizationHeader(): HttpHeaders {\n    const token = localStorage.getItem('auth_token') || sessionStorage.getItem('auth_token');\n    return new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: `Token ${token}`,\n    });\n  }\n\n\n    /**\n   * Fetches a contact by its ID.\n   * @param contactId - The ID of the contact to fetch.\n   * @returns An Observable that emits the contact's data.\n   */\n  getContactById(contactId: number): Observable {\n    const headers = this.createAuthorizationHeader();\n    return this.http.get(`${this.baseUrl}/contact/${contactId}/`, { headers }).pipe(\n      catchError(error => {\n        console.error(`Error occurred while fetching contact with ID ${contactId}:`, error);\n        return throwError(error);\n      }),\n    );\n  }\n\n\n    /**\n   * Deletes a contact by its ID.\n   * @param contactId - The ID of the contact to delete.\n   * @returns An Observable that emits the response from the API.\n   */\n  deleteContact(contactId: number): Observable {\n    const headers = this.createAuthorizationHeader();\n    return this.http.delete(`${this.baseUrl}/contact/${contactId}/`, { headers }).pipe(\n      catchError(error => {\n        console.error(`Error occurred while deleting contact with ID ${contactId}:`, error);\n        return throwError(error);\n      }),\n    );\n  }\n\n\n    /**\n   * Updates an existing contact with new data.\n   * @param contactId - The ID of the contact to update.\n   * @param contactData - Object containing the updated contact information.\n   * @returns An Observable that emits the response from the API.\n   */\n  updateContact(contactId: number, contactData: any): Observable {\n    const headers = this.createAuthorizationHeader();\n    return this.http.put(`${this.baseUrl}/contact/${contactId}/`, contactData, { headers }).pipe(\n      catchError(error => {\n        console.error(`Error occurred while updating contact with ID ${contactId}:`, error);\n        return throwError(error);\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'join2.0_angular'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'join2.0_angular';\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'BoardTaskOverlayComponent', 'selector': 'app-board-task-overlay'},{'name': 'ContactsAddComponent', 'selector': 'app-contacts-add'},{'name': 'ContactsEditComponent', 'selector': 'app-contacts-edit'},{'name': 'ContactsOverviewComponent', 'selector': 'app-contacts-overview'},{'name': 'ContactsViewComponent', 'selector': 'app-contacts-view'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'FooterBarComponent', 'selector': 'app-footer-bar'},{'name': 'HeaderBarMobileComponent', 'selector': 'app-header-bar-mobile'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'SummaryComponent', 'selector': 'app-summary'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAddTaskComponent\n\nAddTaskComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddTaskComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBoardComponent\n\nBoardComponent\n\nAppModule -->\n\nBoardComponent->AppModule\n\n\n\n\n\nBoardTaskOverlayComponent\n\nBoardTaskOverlayComponent\n\nAppModule -->\n\nBoardTaskOverlayComponent->AppModule\n\n\n\n\n\nContactsAddComponent\n\nContactsAddComponent\n\nAppModule -->\n\nContactsAddComponent->AppModule\n\n\n\n\n\nContactsEditComponent\n\nContactsEditComponent\n\nAppModule -->\n\nContactsEditComponent->AppModule\n\n\n\n\n\nContactsOverviewComponent\n\nContactsOverviewComponent\n\nAppModule -->\n\nContactsOverviewComponent->AppModule\n\n\n\n\n\nContactsViewComponent\n\nContactsViewComponent\n\nAppModule -->\n\nContactsViewComponent->AppModule\n\n\n\n\n\nEditTaskComponent\n\nEditTaskComponent\n\nAppModule -->\n\nEditTaskComponent->AppModule\n\n\n\n\n\nFooterBarComponent\n\nFooterBarComponent\n\nAppModule -->\n\nFooterBarComponent->AppModule\n\n\n\n\n\nHeaderBarMobileComponent\n\nHeaderBarMobileComponent\n\nAppModule -->\n\nHeaderBarMobileComponent->AppModule\n\n\n\n\n\nLegalNoticeComponent\n\nLegalNoticeComponent\n\nAppModule -->\n\nLegalNoticeComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nPrivacyPolicyComponent\n\nPrivacyPolicyComponent\n\nAppModule -->\n\nPrivacyPolicyComponent->AppModule\n\n\n\n\n\nResetPasswordComponent\n\nResetPasswordComponent\n\nAppModule -->\n\nResetPasswordComponent->AppModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nAppModule -->\n\nSidebarComponent->AppModule\n\n\n\n\n\nSignUpComponent\n\nSignUpComponent\n\nAppModule -->\n\nSignUpComponent->AppModule\n\n\n\n\n\nSummaryComponent\n\nSummaryComponent\n\nAppModule -->\n\nSummaryComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\n\n\nUserRegistrationService\n\nUserRegistrationService\n\nAppModule -->\n\nUserRegistrationService->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nAppModule -->\n\nUserService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AddTaskComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            BoardComponent\n                        \n                        \n                            BoardTaskOverlayComponent\n                        \n                        \n                            ContactsAddComponent\n                        \n                        \n                            ContactsEditComponent\n                        \n                        \n                            ContactsOverviewComponent\n                        \n                        \n                            ContactsViewComponent\n                        \n                        \n                            EditTaskComponent\n                        \n                        \n                            FooterBarComponent\n                        \n                        \n                            HeaderBarMobileComponent\n                        \n                        \n                            LegalNoticeComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            PrivacyPolicyComponent\n                        \n                        \n                            ResetPasswordComponent\n                        \n                        \n                            SidebarComponent\n                        \n                        \n                            SignUpComponent\n                        \n                        \n                            SummaryComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AuthInterceptor\n                        \n                        \n                            UserRegistrationService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { SignUpComponent } from './sign-up/sign-up.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FooterBarComponent } from './footer-bar/footer-bar.component';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { SummaryComponent } from './summary/summary.component';\nimport { HeaderBarMobileComponent } from './header-bar-mobile/header-bar-mobile.component';\nimport { AddTaskComponent } from './add-task/add-task.component';\nimport { NgbModule, NgbDateParserFormatter } from '@ng-bootstrap/ng-bootstrap';\nimport { NgbDatepickerModule } from '@ng-bootstrap/ng-bootstrap';\nimport { CustomDateParserFormatter } from './custom-dateparser-formatter';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { UserService } from 'src/app/services/user.service';\nimport { UserRegistrationService } from 'src/app/services/auth.service';\nimport { ContactsViewComponent } from './contacts/contacts-view/contacts-view.component';\nimport { ContactsOverviewComponent } from './contacts/contacts-overview/contacts-overview.component';\nimport { ContactsAddComponent } from './contacts/contacts-add/contacts-add.component';\nimport { ContactsEditComponent } from './contacts/contacts-edit/contacts-edit.component'; // Adjust path as needed\nimport { AuthInterceptor } from 'src/app/auth.interceptor';\nimport { BoardComponent } from './board/board.component';\nimport { BoardTaskOverlayComponent } from './board-task-overlay/board-task-overlay.component';\nimport { EditTaskComponent } from './edit-task/edit-task.component';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { PrivacyPolicyComponent } from './imprint/privacy-policy/privacy-policy.component';\nimport { LegalNoticeComponent } from './imprint/legal-notice/legal-notice.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    SignUpComponent,\n    ResetPasswordComponent,\n    FooterBarComponent,\n    SidebarComponent,\n    SummaryComponent,\n    HeaderBarMobileComponent,\n    AddTaskComponent,\n    ContactsViewComponent,\n    ContactsOverviewComponent,\n    ContactsAddComponent,\n    ContactsEditComponent,\n    BoardComponent,\n    BoardTaskOverlayComponent,\n    EditTaskComponent,\n    PrivacyPolicyComponent,\n    LegalNoticeComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    NgbModule,\n    NgbDatepickerModule,\n    HttpClientModule,\n    FormsModule,\n    DragDropModule,\n  ],\n  providers: [\n    { provide: NgbDateParserFormatter, useClass: CustomDateParserFormatter },\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n    UserService,\n    UserRegistrationService,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './/login/login.component';\nimport { SignUpComponent } from './sign-up/sign-up.component';\nimport { SummaryComponent } from './summary/summary.component';\nimport { AddTaskComponent } from './add-task/add-task.component';\nimport { ContactsOverviewComponent } from './contacts/contacts-overview/contacts-overview.component';\nimport { ContactsViewComponent } from './contacts/contacts-view/contacts-view.component';\nimport { BoardComponent } from './board/board.component';\nimport { LegalNoticeComponent } from './imprint/legal-notice/legal-notice.component';\nimport { PrivacyPolicyComponent } from './imprint/privacy-policy/privacy-policy.component';\n\nimport { AuthGuard } from './auth.guard';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'login', pathMatch: 'full' },\n  { path: 'login', component: LoginComponent },\n  { path: 'signup', component: SignUpComponent },\n  { path: 'summary', component: SummaryComponent, canActivate: [AuthGuard] },\n  { path: 'addtask', component: AddTaskComponent, canActivate: [AuthGuard] },\n  { path: 'contacts', component: ContactsOverviewComponent, canActivate: [AuthGuard] },\n  { path: 'contacts-detail/:id', component: ContactsViewComponent, canActivate: [AuthGuard] },\n  { path: 'board', component: BoardComponent, canActivate: [AuthGuard] },\n  { path: 'legal-notice', component: LegalNoticeComponent },\n  { path: 'privacy-policy', component: PrivacyPolicyComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth.guard.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth.guard.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                        ActivatedRouteSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                state\n                                            \n                                                        RouterStateSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable | Promise | boolean | UrlTree\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  Router,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot,\n  ): Observable | Promise | boolean | UrlTree {\n    const token = localStorage.getItem('auth_token') || sessionStorage.getItem('auth_token');\n    if (!token) {\n      // Redirect to login page\n      this.router.navigate(['/login']);\n      return false;\n    }\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthInterceptor.html":{"url":"interceptors/AuthInterceptor.html","title":"interceptor - AuthInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/auth.interceptor.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth.interceptor.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        HttpRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor() {}\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    // List of URLs to exclude from adding the Authorization header\n    const excludedUrls = ['/signup/', '/login/'];\n\n    // Check if the request URL matches any of the excluded URLs\n    if (excludedUrls.some(url => req.url.includes(url))) {\n      // Proceed without adding the Authorization header\n      return next.handle(req);\n    }\n\n    // Attempt to retrieve the token from sessionStorage first, then localStorage\n    const authToken = sessionStorage.getItem('auth_token') || localStorage.getItem('auth_token');\n\n    // If the token exists, clone the request to include the authorization header.\n    if (authToken) {\n      const authReq = req.clone({\n        setHeaders: { Authorization: `Token ${authToken}` },\n      });\n      return next.handle(authReq);\n    }\n    // For requests without a token, proceed without modifying the request.\n    return next.handle(req);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthInterceptorService.html":{"url":"interceptors/AuthInterceptorService.html","title":"interceptor - AuthInterceptorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthInterceptorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth-interceptor.service.ts\n        \n\n\n            \n                Description\n            \n            \n                AuthInterceptorService intercepts HTTP requests to add an authorization token\nand redirects to the login page if the user is unauthorized (401 error).\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth-interceptor.service.ts:20\n                            \n                        \n\n                \n                    \n                            Constructor to inject the Router for navigation upon authentication failure.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAngular Router to navigate on unauthorized access.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth-interceptor.service.ts:37\n                        \n                    \n\n\n            \n                \n                        Intercepts HTTP requests to add an Authorization header with a token, if available.\nHandles errors, specifically redirecting to login on 401 Unauthorized errors.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        HttpRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe outgoing HTTP request to be intercepted.\n\n\n                                            \n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe next interceptor in the chain or the final backend handler.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                An Observable of the HTTP event with authorization headers applied, if a token is available.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpErrorResponse,\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable, catchError, throwError } from 'rxjs';\n\n\n/**\n * AuthInterceptorService intercepts HTTP requests to add an authorization token\n * and redirects to the login page if the user is unauthorized (401 error).\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthInterceptorService implements HttpInterceptor {\n\n\n    /**\n   * Constructor to inject the Router for navigation upon authentication failure.\n   * @param router - Angular Router to navigate on unauthorized access.\n   */\n  constructor(private router: Router) {}\n\n\n    /**\n   * Intercepts HTTP requests to add an Authorization header with a token, if available.\n   * Handles errors, specifically redirecting to login on 401 Unauthorized errors.\n   * @param request - The outgoing HTTP request to be intercepted.\n   * @param next - The next interceptor in the chain or the final backend handler.\n   * @returns An Observable of the HTTP event with authorization headers applied, if a token is available.\n   */\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n    const token = localStorage.getItem('token');\n    if (token) {\n      request = request.clone({\n        setHeaders: { Authorization: `Token ${token}` },\n      });\n    }\n\n    return next.handle(request).pipe(\n      catchError(err => {\n        if (err instanceof HttpErrorResponse) {\n          if (err.status === 401) {\n            this.router.navigateByUrl('/login');\n          }\n        }\n        return throwError(() => err);\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Category.html":{"url":"interfaces/Category.html","title":"interface - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/category.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents a Category with its ID, name, and associated color.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Color associated with the category, represented as a string.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique identifier for the category.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Name of the category.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n\n/**\n * Represents a Category with its ID, name, and associated color.\n */\nexport interface Category {\n\n  /** Unique identifier for the category. */\n  id: number;\n\n  /** Name of the category. */\n  name: string;\n\n  /** Color associated with the category, represented as a string. */\n  color: string;\n}\n\n\n/**\n * CategoryService handles retrieval of categories from the server,\n * providing an observable that emits the list of categories.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class CategoryService {\n\n    /** API URL for accessing category data. */\n  private apiUrl = `${environment.apiUrl}/categories`;\n\n\n    /**\n   * Constructor to inject HttpClient for making HTTP requests.\n   * @param http - HttpClient instance for sending requests to the API.\n   */\n  constructor(private http: HttpClient) {}\n\n\n    /**\n   * Retrieves the list of categories from the server.\n   * @returns An Observable that emits an array of Category objects.\n   */\n  getCategories(): Observable {\n    return this.http.get(this.apiUrl);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CategoryService.html":{"url":"injectables/CategoryService.html","title":"injectable - CategoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CategoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/category.service.ts\n        \n\n\n            \n                Description\n            \n            \n                CategoryService handles retrieval of categories from the server,\nproviding an observable that emits the list of categories.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCategories\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/category.service.ts:33\n                            \n                        \n\n                \n                    \n                            Constructor to inject HttpClient for making HTTP requests.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nHttpClient instance for sending requests to the API.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCategories\n                        \n                    \n                \n            \n            \n                \ngetCategories()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/category.service.ts:47\n                        \n                    \n\n\n            \n                \n                        Retrieves the list of categories from the server.\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits an array of Category objects.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${environment.apiUrl}/categories`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/category.service.ts:33\n                        \n                    \n\n            \n                \n                    API URL for accessing category data.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n\n/**\n * Represents a Category with its ID, name, and associated color.\n */\nexport interface Category {\n\n  /** Unique identifier for the category. */\n  id: number;\n\n  /** Name of the category. */\n  name: string;\n\n  /** Color associated with the category, represented as a string. */\n  color: string;\n}\n\n\n/**\n * CategoryService handles retrieval of categories from the server,\n * providing an observable that emits the list of categories.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class CategoryService {\n\n    /** API URL for accessing category data. */\n  private apiUrl = `${environment.apiUrl}/categories`;\n\n\n    /**\n   * Constructor to inject HttpClient for making HTTP requests.\n   * @param http - HttpClient instance for sending requests to the API.\n   */\n  constructor(private http: HttpClient) {}\n\n\n    /**\n   * Retrieves the list of categories from the server.\n   * @returns An Observable that emits an array of Category objects.\n   */\n  getCategories(): Observable {\n    return this.http.get(this.apiUrl);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Contact.html":{"url":"interfaces/Contact.html","title":"interface - Contact","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Contact\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/assets/models/contact.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            initials\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            phone\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initials\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initials:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Contact {\n  id: number;\n  name: string;\n  initials: string;\n  email: string;\n  phone: string;\n  color: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Contact-1.html":{"url":"interfaces/Contact-1.html","title":"interface - Contact-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Contact\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            dist/join2.0_angular/assets/models/contact.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            initials\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            phone\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initials\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initials:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Contact {\n  id: number;\n  name: string;\n  initials: string;\n  email: string;\n  phone: string;\n  color: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ContactService.html":{"url":"injectables/ContactService.html","title":"injectable - ContactService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ContactService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/contact.service.ts\n        \n\n\n            \n                Description\n            \n            \n                ContactService is responsible for managing the state of the contact being edited.\nIt provides methods to set and retrieve the current contact for editing.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                contactSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getContactToEdit\n                            \n                            \n                                setContactToEdit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getContactToEdit\n                        \n                    \n                \n            \n            \n                \ngetContactToEdit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/contact.service.ts:32\n                        \n                    \n\n\n            \n                \n                        Retrieves an observable of the current contact being edited.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that emits the Contact object or null if no contact is set.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setContactToEdit\n                        \n                    \n                \n            \n            \n                \nsetContactToEdit(contact: Contact)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/contact.service.ts:23\n                        \n                    \n\n\n            \n                \n                        Sets the contact to be edited by updating the contactSubject.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                contact\n                                            \n                                                            Contact\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe Contact object to set as the current contact for editing.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        contactSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/contact.service.ts:16\n                        \n                    \n\n            \n                \n                    BehaviorSubject that holds the contact currently being edited.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { Contact } from 'src/assets/models/contact.model'; // Adjust path as necessary\n\n\n/**\n * ContactService is responsible for managing the state of the contact being edited.\n * It provides methods to set and retrieve the current contact for editing.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ContactService {\n\n  /** BehaviorSubject that holds the contact currently being edited. */\n  private contactSubject = new BehaviorSubject(null);\n\n\n    /**\n   * Sets the contact to be edited by updating the contactSubject.\n   * @param contact - The Contact object to set as the current contact for editing.\n   */\n  setContactToEdit(contact: Contact): void {\n    this.contactSubject.next(contact);\n  }\n\n\n    /**\n   * Retrieves an observable of the current contact being edited.\n   * @returns An Observable that emits the Contact object or null if no contact is set.\n   */\n  getContactToEdit(): Observable {\n    return this.contactSubject.asObservable();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContactsAddComponent.html":{"url":"components/ContactsAddComponent.html","title":"component - ContactsAddComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ContactsAddComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/contacts/contacts-add/contacts-add.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for adding new contacts. Manages contact form data and submission.\nEmits events when a contact is successfully added or when the form is closed.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-contacts-add\n            \n\n\n\n            \n                styleUrls\n                ./contacts-add.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./contacts-add.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addContactSuccess\n                            \n                            \n                                contactData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeComponent\n                            \n                            \n                                generateRandomDarkColor\n                            \n                            \n                                submitContactForm\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                contactAdded\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(addContactService: AddContactService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/contacts/contacts-add/contacts-add.component.ts:32\n                            \n                        \n\n                \n                    \n                            Constructor to inject services for contact management and navigation.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        addContactService\n                                                  \n                                                        \n                                                                        AddContactService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService for adding contacts.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAngular Router for navigation.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/contacts/contacts-add/contacts-add.component.ts:32\n                            \n                        \n                \n                    \n                        Event emitted when the contact add component is closed.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        contactAdded\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/contacts/contacts-add/contacts-add.component.ts:29\n                            \n                        \n                \n                    \n                        Event emitted when a contact is successfully added, passing a boolean value.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeComponent\n                        \n                    \n                \n            \n            \n                \ncloseComponent()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contacts/contacts-add/contacts-add.component.ts:93\n                        \n                    \n\n\n            \n                \n                        Emits the close event to signal that the component should be closed.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateRandomDarkColor\n                        \n                    \n                \n            \n            \n                \ngenerateRandomDarkColor()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contacts/contacts-add/contacts-add.component.ts:74\n                        \n                    \n\n\n            \n                \n                        Generates a random dark color in HEX format.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                A hex color string with dark RGB values.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitContactForm\n                        \n                    \n                \n            \n            \n                \nsubmitContactForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contacts/contacts-add/contacts-add.component.ts:50\n                        \n                    \n\n\n            \n                \n                        Submits the contact form data to add a new contact.\nGenerates a random dark color if none is provided, then emits events on success.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addContactSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/contacts/contacts-add/contacts-add.component.ts:18\n                        \n                    \n\n            \n                \n                    Flag indicating if a contact has been successfully added.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        contactData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    name: '',\n    email: '',\n    phone: '',\n    color: '',\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/contacts/contacts-add/contacts-add.component.ts:21\n                        \n                    \n\n            \n                \n                    Data model for storing contact information from the form.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Output } from '@angular/core';\nimport { AddContactService } from 'src/app/services/add-contact.service';\nimport { Router } from '@angular/router';\n\n\n/**\n * Component for adding new contacts. Manages contact form data and submission.\n * Emits events when a contact is successfully added or when the form is closed.\n */\n@Component({\n  selector: 'app-contacts-add',\n  templateUrl: './contacts-add.component.html',\n  styleUrls: ['./contacts-add.component.scss'],\n})\nexport class ContactsAddComponent {\n\n    /** Flag indicating if a contact has been successfully added. */\n  addContactSuccess = false;\n\n    /** Data model for storing contact information from the form. */\n  contactData = {\n    name: '',\n    email: '',\n    phone: '',\n    color: '',\n  };\n\n    /** Event emitted when a contact is successfully added, passing a boolean value. */\n  @Output() contactAdded = new EventEmitter();\n\n    /** Event emitted when the contact add component is closed. */\n  @Output() close = new EventEmitter();\n\n\n    /**\n   * Constructor to inject services for contact management and navigation.\n   * @param addContactService - Service for adding contacts.\n   * @param router - Angular Router for navigation.\n   */\n  constructor(\n    private addContactService: AddContactService,\n    private router: Router,\n  ) {}\n\n\n    /**\n   * Submits the contact form data to add a new contact.\n   * Generates a random dark color if none is provided, then emits events on success.\n   */\n  submitContactForm() {\n    if (!this.contactData.color) {\n      this.contactData.color = this.generateRandomDarkColor();\n    }\n    this.addContactService.addContact(this.contactData).subscribe({\n      next: response => {\n        this.addContactSuccess = true;\n\n        this.contactAdded.emit(true);\n        setTimeout(() => {\n          this.close.emit();\n        }, 3000);\n      },\n      error: error => {\n        console.error('There was an error adding the contact:', error);\n      },\n    });\n  }\n\n\n    /**\n   * Generates a random dark color in HEX format.\n   * @returns A hex color string with dark RGB values.\n   */\n  generateRandomDarkColor(): string {\n    const r = Math.floor(Math.random() * 100);\n    const g = Math.floor(Math.random() * 100);\n    const b = Math.floor(Math.random() * 100);\n    return (\n      '#' +\n      [r, g, b]\n        .map(x => {\n          const hex = x.toString(16);\n          return hex.length === 1 ? '0' + hex : hex;\n        })\n        .join('')\n    );\n  }\n\n\n    /**\n   * Emits the close event to signal that the component should be closed.\n   */\n  closeComponent() {\n    this.close.emit();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n      \n        Add Contact\n        Tasks are better with a team!\n        \n      \n      \n        \n          \n        \n      \n    \n    \n      \n        \n          \n        \n      \n    \n    \n      \n        \n      \n\n      \n        \n          \n          Name\n          Name is required.\n        \n\n        \n          \n          Email\n          \n            Email is required.\n            Please enter a valid email address.\n          \n        \n\n        \n          \n          Phone\n          \n            Phone number is required.\n            \n              Please enter a valid phone number (15 digits).\n            \n          \n        \n        Create contact\n      \n    \n    \n      Contact successfully created!\n    \n  \n\n\n    \n\n    \n                \n                    ./contacts-add.component.scss\n                \n                .addContactsBackground {\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba($color: #000000, $alpha: 0.1);\n  z-index: 10;\n}\n\n.addContactsContentConatiner {\n  height: 80vh;\n  width: 90vw;\n  position: absolute;\n  top: 10vh;\n  border-radius: 30px;\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  z-index: 11;\n}\n\n.topContainerAddContacts {\n  height: 30vh;\n  width: 100%;\n  background-color: #2a3647;\n  color: #ffffff;\n  display: flex;\n  align-items: center;\n  position: relative;\n  border-top-right-radius: 30px;\n  border-top-left-radius: 30px;\n  padding-left: 16px;\n}\n\n.closeIconContainer {\n  display: block;\n  position: absolute;\n  top: 16px;\n  right: 16px;\n  cursor: pointer;\n}\n\n.addContactsUnderline {\n  border-bottom: 3px solid;\n  border-color: #29abe2;\n  width: min(120px, 50%);\n  padding-bottom: 8px;\n}\n\n.smallHeadlineAddContacts {\n  font-size: calc(1.175rem + 0.5vw) !important;\n}\n\n.personIconContainer {\n  background-color: #d1d1d1;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 120px;\n  width: 120px;\n  border-radius: 50%;\n  border: solid 3px #ffffff;\n  position: absolute;\n  bottom: -60px;\n  left: 50%;\n  transform: translate(-50%, 0%);\n}\n\n.bottomContainerContacts {\n  height: 50vh;\n  width: 90vw;\n  background-color: #ffffff;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-bottom-right-radius: 30px;\n  border-bottom-left-radius: 30px;\n}\n\n.colorFont {\n  color: #d1d1d1;\n}\n\n.formInputContacsName {\n  background-image: url('/assets/img/person.png');\n  background-repeat: no-repeat;\n  background-position: calc(100% - 18px);\n}\n\n.formInputContactsMail {\n  background-image: url('/assets/img/mail.png');\n  background-repeat: no-repeat;\n  background-position: calc(100% - 18px);\n}\n\n.formInputContacsPhone {\n  background-image: url('/assets/img/phone.png');\n  background-repeat: no-repeat;\n  background-position: calc(100% - 18px);\n}\n.inputContainer {\n  width: 80vw;\n  display: flex;\n  align-items: center;\n  position: relative;\n  flex-direction: column;\n}\n\n.formContainerAddContacts {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n}\n\n.addedContactSuccessContainer {\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: #2a3647;\n  border-radius: 20px;\n  height: 72px;\n  width: min(652px, 90%);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  font-size: 1.25rem;\n  z-index: 3;\n  animation: slideInFromBottom 0.5s ease forwards;\n}\n\n.closeIconContainerDesktop {\n  display: none;\n}\n\n.personIconFormContainer {\n  display: none;\n}\n\n@media screen and (max-height: 740px) {\n  .personIconContainer {\n    height: 100px;\n    width: 100px;\n    bottom: -50px;\n  }\n\n  .formContainerAddContacts {\n    position: absolute;\n    bottom: 8px;\n  }\n}\n\n@media (min-width: 1025px) {\n  .addContactsContentConatiner {\n    display: flex !important;\n    width: 90%;\n    height: 50vh;\n  }\n\n  .topContainerAddContacts {\n    width: 35vw;\n    height: 50vh;\n    border-top-right-radius: 0px;\n    border-bottom-left-radius: 30px;\n  }\n\n  .closeIconContainerDesktop {\n    display: block;\n    position: absolute;\n    top: 32px;\n    right: 3vw;\n    cursor: pointer;\n  }\n\n  .personIconFormContainer {\n    background-color: #ffffff;\n    width: 17vw;\n    height: 50vh;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  .personIconContainerDesktop {\n    background-color: #d1d1d1;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 120px;\n    width: 120px;\n    border-radius: 50%;\n    border: solid 3px #ffffff;\n  }\n\n  .bottomContainerContacts {\n    width: 38vw;\n    padding-right: 3vw;\n    justify-content: flex-end;\n    border-bottom-left-radius: 0px;\n    border-top-right-radius: 30px;\n  }\n\n  .inputContainer {\n    width: 35vw;\n  }\n\n  .closeIconContainer {\n    display: none;\n  }\n\n  .personIconContainer {\n    display: none;\n  }\n}\n@media screen and (orientation: landscape) and (max-width: 1024px) and (max-height: 512px) {\n  .addContactsContentConatiner {\n    height: 100vh;\n  }\n\n  .topContainerAddContacts {\n    height: 80vh;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n  }\n\n  .bottomContainerContacts {\n    height: 20vh;\n  }\n\n  .smallHeadlineAddContacts {\n    display: none;\n  }\n\n  .addContactsUnderline {\n    display: none;\n  }\n\n  .personIconContainer {\n    display: none;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Add Contact        Tasks are better with a team!                                                                                                                                                                Name          Name is required.                                    Email                      Email is required.            Please enter a valid email address.                                              Phone                      Phone number is required.                          Please enter a valid phone number (15 digits).                                      Create contact                    Contact successfully created!      '\n    var COMPONENTS = [{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'BoardTaskOverlayComponent', 'selector': 'app-board-task-overlay'},{'name': 'ContactsAddComponent', 'selector': 'app-contacts-add'},{'name': 'ContactsEditComponent', 'selector': 'app-contacts-edit'},{'name': 'ContactsOverviewComponent', 'selector': 'app-contacts-overview'},{'name': 'ContactsViewComponent', 'selector': 'app-contacts-view'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'FooterBarComponent', 'selector': 'app-footer-bar'},{'name': 'HeaderBarMobileComponent', 'selector': 'app-header-bar-mobile'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'SummaryComponent', 'selector': 'app-summary'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContactsAddComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContactsEditComponent.html":{"url":"components/ContactsEditComponent.html","title":"component - ContactsEditComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ContactsEditComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/contacts/contacts-edit/contacts-edit.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for editing contact details. Allows updating and deleting contact information.\nEmits events when a contact is successfully edited or when the edit form is closed.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-contacts-edit\n            \n\n\n\n            \n                styleUrls\n                ./contacts-edit.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./contacts-edit.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contact\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeEditComponent\n                            \n                            \n                                deleteContact\n                            \n                            \n                                getInitials\n                            \n                            \n                                loadContact\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                contactId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                contactEdited\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, router: Router, addContactService: AddContactService)\n                    \n                \n                        \n                            \n                                Defined in src/app/contacts/contacts-edit/contacts-edit.component.ts:29\n                            \n                        \n\n                \n                    \n                            Constructor to inject necessary services for managing contact data and navigation.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nActivatedRoute for accessing route parameters.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAngular Router for navigation.\n\n\n                                                        \n                                                \n                                                \n                                                        addContactService\n                                                  \n                                                        \n                                                                        AddContactService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService for managing contact data.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        contactId\n                    \n                \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/contacts/contacts-edit/contacts-edit.component.ts:20\n                            \n                        \n                \n                    \n                        ID of the contact to be edited, can be provided as input.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/contacts/contacts-edit/contacts-edit.component.ts:29\n                            \n                        \n                \n                    \n                        Event emitted when the edit component is closed.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        contactEdited\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/contacts/contacts-edit/contacts-edit.component.ts:26\n                            \n                        \n                \n                    \n                        Event emitted when a contact is successfully edited, passing a boolean value.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeEditComponent\n                        \n                    \n                \n            \n            \n                \ncloseEditComponent()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contacts/contacts-edit/contacts-edit.component.ts:130\n                        \n                    \n\n\n            \n                \n                        Closes the edit component and emits a close event.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteContact\n                        \n                    \n                \n            \n            \n                \ndeleteContact()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contacts/contacts-edit/contacts-edit.component.ts:111\n                        \n                    \n\n\n            \n                \n                        Deletes the contact using the service and navigates to the contact list.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getInitials\n                        \n                    \n                \n            \n            \n                \ngetInitials(name: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contacts/contacts-edit/contacts-edit.component.ts:75\n                        \n                    \n\n\n            \n                \n                        Generates initials from the contact's name for display.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the contact.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The initials derived from the contact's name.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadContact\n                        \n                    \n                \n            \n            \n                \nloadContact()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contacts/contacts-edit/contacts-edit.component.ts:57\n                        \n                    \n\n\n            \n                \n                        Loads the contact data by ID from the service.\nIf no contactId is provided, it tries to load the ID from route parameters.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contacts/contacts-edit/contacts-edit.component.ts:48\n                        \n                    \n\n\n            \n                \n                        Initializes the component by loading the contact information based on the provided contact ID.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit(contactForm: NgForm)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contacts/contacts-edit/contacts-edit.component.ts:90\n                        \n                    \n\n\n            \n                \n                        Submits the updated contact data to the service.\nEmits an event on successful update or failure.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                contactForm\n                                            \n                                                        NgForm\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe form containing contact data.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        contact\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Contact\n\n                    \n                \n                \n                    \n                        Default value : { id: 0, name: '', email: '', phone: '', color: '', initials: '' }\n                    \n                \n                    \n                        \n                                Defined in src/app/contacts/contacts-edit/contacts-edit.component.ts:23\n                        \n                    \n\n            \n                \n                    Contact model for holding the contact's details.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, OnInit, Output, Input } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AddContactService } from 'src/app/services/add-contact.service';\nimport { Contact } from 'src/assets/models/contact.model';\n\n\n/**\n * Component for editing contact details. Allows updating and deleting contact information.\n * Emits events when a contact is successfully edited or when the edit form is closed.\n */\n@Component({\n  selector: 'app-contacts-edit',\n  templateUrl: './contacts-edit.component.html',\n  styleUrls: ['./contacts-edit.component.scss'],\n})\nexport class ContactsEditComponent implements OnInit {\n\n    /** ID of the contact to be edited, can be provided as input. */\n  @Input() contactId: number | null = null;\n\n    /** Contact model for holding the contact's details. */\n  contact: Contact = { id: 0, name: '', email: '', phone: '', color: '', initials: '' }; // include `initials` if it's mandatory\n\n    /** Event emitted when a contact is successfully edited, passing a boolean value. */\n  @Output() contactEdited = new EventEmitter();\n\n    /** Event emitted when the edit component is closed. */\n  @Output() close = new EventEmitter();\n\n\n    /**\n   * Constructor to inject necessary services for managing contact data and navigation.\n   * @param route - ActivatedRoute for accessing route parameters.\n   * @param router - Angular Router for navigation.\n   * @param addContactService - Service for managing contact data.\n   */\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private addContactService: AddContactService,\n  ) {}\n\n\n    /**\n   * Initializes the component by loading the contact information based on the provided contact ID.\n   */\n  ngOnInit(): void {\n    this.loadContact();\n  }\n\n\n    /**\n   * Loads the contact data by ID from the service.\n   * If no `contactId` is provided, it tries to load the ID from route parameters.\n   */\n  loadContact(): void {\n    const contactId = this.contactId !== null ? this.contactId : this.route.snapshot.params['id'];\n    if (contactId) {\n      this.addContactService.getContactById(contactId).subscribe({\n        next: contactData => {\n          this.contact = contactData;\n        },\n        error: err => console.error(err),\n      });\n    }\n  }\n\n\n    /**\n   * Generates initials from the contact's name for display.\n   * @param name - The name of the contact.\n   * @returns The initials derived from the contact's name.\n   */\n  getInitials(name: string | undefined): string {\n    if (!name) return '';\n    return name\n      .split(' ')\n      .map(n => n[0])\n      .join('')\n      .toUpperCase();\n  }\n\n\n  /**\n   * Submits the updated contact data to the service.\n   * Emits an event on successful update or failure.\n   * @param contactForm - The form containing contact data.\n   */\n  onSubmit(contactForm: NgForm): void {\n    if (this.contact && this.contact.id) {\n      this.addContactService.updateContact(this.contact.id, this.contact).subscribe({\n        next: updatedContact => {\n          this.contactEdited.emit(true); \n          this.closeEditComponent();\n        },\n        error: error => {\n          console.error('Failed to update contact', error);\n          this.contactEdited.emit(false); \n        },\n      });\n    } else {\n      console.error('Contact data is incomplete.');\n    }\n  }\n\n\n    /**\n   * Deletes the contact using the service and navigates to the contact list.\n   */\n  deleteContact(): void {\n    if (this.contact.id) {\n      this.addContactService.deleteContact(this.contact.id).subscribe({\n        next: () => {\n          this.router.navigate(['/contacts']); \n        },\n        error: error => {\n          console.error(`Failed to delete contact with ID ${this.contact.id}`, error);\n        },\n      });\n    } else {\n      console.error('Attempted to delete a contact without a valid ID.');\n    }\n  }\n\n\n    /**\n   * Closes the edit component and emits a close event.\n   */\n  closeEditComponent() {\n    this.close.emit();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n      \n        Edit Contact\n        \n      \n      \n        {{ getInitials(contact.name) }}\n      \n    \n    \n      \n        \n          \n          Name\n        \n\n        \n          \n          Email\n        \n\n        \n          \n          Phone\n        \n        \n          \n            Delete\n          \n          \n            Save\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./contacts-edit.component.scss\n                \n                .editContactsBackground {\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba($color: #000000, $alpha: 0.1);\n  z-index: 10;\n}\n\n.addContactsContentConatiner {\n  height: 80vh;\n  width: 90vw;\n  position: absolute;\n  top: 10vh;\n  border-radius: 30px;\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n\n.topContainerAddContacts {\n  height: 30vh;\n  width: 100%;\n  background-color: #2a3647;\n  color: #ffffff;\n  display: flex;\n  align-items: center;\n  position: relative;\n  border-top-right-radius: 30px;\n  border-top-left-radius: 30px;\n  padding-left: 16px;\n}\n\n.closeIconContainer {\n  position: absolute;\n  top: 16px;\n  right: 16px;\n  cursor: pointer;\n}\n\n.addContactsUnderline {\n  border-bottom: 3px solid;\n  border-color: #29abe2;\n  width: min(120px, 50%);\n  padding-bottom: 8px;\n}\n\n.smallHeadlineAddContacts {\n  font-size: calc(1.175rem + 0.5vw) !important;\n}\n\n.intitialsEditContactContainer {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 120px;\n  width: 120px;\n  border-radius: 50%;\n  border: solid 3px #ffffff;\n  position: absolute;\n  bottom: -60px;\n  left: 50%;\n  transform: translate(-50%, 0%);\n}\n\n.initialsCircleContactEdit {\n  font-size: 2rem;\n}\n\n.personIconContainer {\n  background-color: #d1d1d1;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 120px;\n  width: 120px;\n  border-radius: 50%;\n  border: solid 3px #ffffff;\n  position: absolute;\n  bottom: -60px;\n  left: 50%;\n  transform: translate(-50%, 0%);\n}\n\n.bottomContainerContacts {\n  height: 50vh;\n  width: 90vw;\n  background-color: #ffffff;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-bottom-right-radius: 30px;\n  border-bottom-left-radius: 30px;\n}\n\n.colorFont {\n  color: #d1d1d1;\n}\n\n.formInputContacsName {\n  background-image: url('/assets/img/person.png');\n  background-repeat: no-repeat;\n  background-position: calc(100% - 18px);\n}\n\n.formInputContactsMail {\n  background-image: url('/assets/img/mail.png');\n  background-repeat: no-repeat;\n  background-position: calc(100% - 18px);\n}\n\n.formInputContacsPhone {\n  background-image: url('/assets/img/phone.png');\n  background-repeat: no-repeat;\n  background-position: calc(100% - 18px);\n}\n\n.inputContainer {\n  width: 80vw;\n  display: flex;\n  align-items: center;\n  position: relative;\n}\n\n.formContainerAddContacts {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n}\n\n.addedContactSuccessContainer {\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: #2a3647;\n  border-radius: 20px;\n  height: 72px;\n  width: min(652px, 90%);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  font-size: 1.25rem;\n  z-index: 3;\n  animation: slideInFromBottom 0.5s ease forwards;\n}\n\n.deleteSaveContainer {\n  display: flex;\n  width: 80%;\n  justify-content: space-around;\n}\n\n.deleteButton {\n  width: 82px;\n  display: flex;\n  justify-content: center;\n}\n\n.saveButton {\n  width: 100px;\n}\n\n@media screen and (max-height: 740px) {\n  .personIconContainer {\n    height: 100px;\n    width: 100px;\n    bottom: -50px;\n  }\n\n  .formContainerAddContacts {\n    position: absolute;\n    bottom: 8px;\n  }\n}\n\n@media screen and (orientation: landscape) and (max-width: 1024px) and (max-height: 512px) {\n  .addContactsContentConatiner {\n    height: 100vh;\n  }\n\n  .topContainerAddContacts {\n    height: 80vh;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n  }\n\n  .bottomContainerContacts {\n    height: 20vh;\n  }\n\n  .smallHeadlineAddContacts {\n    display: none;\n  }\n\n  .addContactsUnderline {\n    display: none;\n  }\n\n  .personIconContainer {\n    display: none;\n  }\n\n  .intitialsEditContactContainer {\n    display: none;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Edit Contact                            {{ getInitials(contact.name) }}                                                Name                                    Email                                    Phone                                      Delete                                Save                              '\n    var COMPONENTS = [{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'BoardTaskOverlayComponent', 'selector': 'app-board-task-overlay'},{'name': 'ContactsAddComponent', 'selector': 'app-contacts-add'},{'name': 'ContactsEditComponent', 'selector': 'app-contacts-edit'},{'name': 'ContactsOverviewComponent', 'selector': 'app-contacts-overview'},{'name': 'ContactsViewComponent', 'selector': 'app-contacts-view'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'FooterBarComponent', 'selector': 'app-footer-bar'},{'name': 'HeaderBarMobileComponent', 'selector': 'app-header-bar-mobile'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'SummaryComponent', 'selector': 'app-summary'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContactsEditComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ContactsOverlayService.html":{"url":"injectables/ContactsOverlayService.html","title":"injectable - ContactsOverlayService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ContactsOverlayService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/contacts-overlay-service.service.ts\n        \n\n\n            \n                Description\n            \n            \n                ContactsOverlayService manages the visibility state of the contacts overlay.\nIt provides methods to set and retrieve the overlay visibility status.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                overlayVisibility$\n                            \n                            \n                                    Private\n                                overlayVisibilitySubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getOverlayVisibility\n                            \n                            \n                                setOverlayVisibility\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getOverlayVisibility\n                        \n                    \n                \n            \n            \n                \ngetOverlayVisibility()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/contacts-overlay-service.service.ts:33\n                        \n                    \n\n\n            \n                \n                        Retrieves the current visibility state of the contacts overlay.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                A boolean representing the current visibility of the overlay.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setOverlayVisibility\n                        \n                    \n                \n            \n            \n                \nsetOverlayVisibility(isVisible: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/contacts-overlay-service.service.ts:24\n                        \n                    \n\n\n            \n                \n                        Sets the visibility state of the contacts overlay.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                isVisible\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nBoolean indicating whether the overlay should be visible.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        overlayVisibility$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.overlayVisibilitySubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/contacts-overlay-service.service.ts:17\n                        \n                    \n\n            \n                \n                    Observable for overlay visibility changes, allowing components to subscribe to visibility updates.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        overlayVisibilitySubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/contacts-overlay-service.service.ts:14\n                        \n                    \n\n            \n                \n                    BehaviorSubject that holds the current visibility state of the overlay.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n\n/**\n * ContactsOverlayService manages the visibility state of the contacts overlay.\n * It provides methods to set and retrieve the overlay visibility status.\n */@Injectable({\n  providedIn: 'root',\n})\nexport class ContactsOverlayService {\n\n  /** BehaviorSubject that holds the current visibility state of the overlay. */\n  private overlayVisibilitySubject = new BehaviorSubject(false);\n\n  /** Observable for overlay visibility changes, allowing components to subscribe to visibility updates. */\n  overlayVisibility$ = this.overlayVisibilitySubject.asObservable();\n\n\n    /**\n   * Sets the visibility state of the contacts overlay.\n   * @param isVisible - Boolean indicating whether the overlay should be visible.\n   */\n  setOverlayVisibility(isVisible: boolean): void {\n    this.overlayVisibilitySubject.next(isVisible);\n  }\n\n\n  /**\n   * Retrieves the current visibility state of the contacts overlay.\n   * @returns A boolean representing the current visibility of the overlay.\n   */\n  getOverlayVisibility(): boolean {\n    return this.overlayVisibilitySubject.value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContactsOverviewComponent.html":{"url":"components/ContactsOverviewComponent.html","title":"component - ContactsOverviewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ContactsOverviewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/contacts/contacts-overview/contacts-overview.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for displaying an overview of contacts. Groups contacts alphabetically,\nhandles display based on screen size, and manages visibility of the contacts overlay.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-contacts-overview\n            \n\n\n\n            \n                styleUrls\n                ./contacts-overview.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./contacts-overview.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                contactsOverlayService\n                            \n                            \n                                contactsViewNotVisible\n                            \n                            \n                                groupedContacts\n                            \n                            \n                                isHandsetOrTablet\n                            \n                            \n                                isVisible\n                            \n                            \n                                selectedContact\n                            \n                            \n                                storedContactId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeContactsView\n                            \n                            \n                                findContactById\n                            \n                            \n                                getInitials\n                            \n                            \n                                getSortedLetters\n                            \n                            \n                                goToContactDetails\n                            \n                            \n                                goToDesktopContactDetails\n                            \n                            \n                                groupContactsByFirstLetter\n                            \n                            \n                                loadContacts\n                            \n                            \n                                loadStoredContactDetails\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onContactAdded\n                            \n                            \n                                openContact\n                            \n                            \n                                refreshContacts\n                            \n                            \n                                showContactsAdd\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(addContactService: AddContactService, router: Router, screenSizeService: ScreenSizeService, contactsOverlayService: ContactsOverlayService)\n                    \n                \n                        \n                            \n                                Defined in src/app/contacts/contacts-overview/contacts-overview.component.ts:36\n                            \n                        \n\n                \n                    \n                            Constructor to inject necessary services for managing contacts, routing, screen size, and overlay visibility.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        addContactService\n                                                  \n                                                        \n                                                                        AddContactService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService for handling contact data.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAngular Router for navigation.\n\n\n                                                        \n                                                \n                                                \n                                                        screenSizeService\n                                                  \n                                                        \n                                                                        ScreenSizeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService for detecting screen size.\n\n\n                                                        \n                                                \n                                                \n                                                        contactsOverlayService\n                                                  \n                                                        \n                                                                        ContactsOverlayService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService for managing overlay visibility.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeContactsView\n                        \n                    \n                \n            \n            \n                \ncloseContactsView()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contacts/contacts-overview/contacts-overview.component.ts:176\n                        \n                    \n\n\n            \n                \n                        Closes the contacts view overlay.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findContactById\n                        \n                    \n                \n            \n            \n                \nfindContactById(contactId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contacts/contacts-overview/contacts-overview.component.ts:236\n                        \n                    \n\n\n            \n                \n                        Finds a contact by ID within the grouped contacts.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                contactId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nID of the contact to find.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Contact | undefined\n\n                        \n                            \n                                The contact object if found, otherwise undefined.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getInitials\n                        \n                    \n                \n            \n            \n                \ngetInitials(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contacts/contacts-overview/contacts-overview.component.ts:141\n                        \n                    \n\n\n            \n                \n                        Generates initials from a contact's name.\nTakes the first letter of the first and last name, if available.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe full name of the contact.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                A string containing the initials.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSortedLetters\n                        \n                    \n                \n            \n            \n                \ngetSortedLetters()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contacts/contacts-overview/contacts-overview.component.ts:157\n                        \n                    \n\n\n            \n                \n                        Returns an array of sorted letters used to group contacts.\n\n\n                        \n                            Returns :     string[]\n\n                        \n                            \n                                An alphabetically sorted array of first letters.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToContactDetails\n                        \n                    \n                \n            \n            \n                \ngoToContactDetails(contactId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contacts/contacts-overview/contacts-overview.component.ts:201\n                        \n                    \n\n\n            \n                \n                        Navigates to the contact detail page for mobile or tablet view.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                contactId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nID of the contact to navigate to.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToDesktopContactDetails\n                        \n                    \n                \n            \n            \n                \ngoToDesktopContactDetails(contactId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contacts/contacts-overview/contacts-overview.component.ts:215\n                        \n                    \n\n\n            \n                \n                        Opens the desktop contact details overlay and sets the selected contact.\nStores the contact ID and displays the overlay with contact details.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                contactId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nID of the contact to display in overlay.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupContactsByFirstLetter\n                        \n                    \n                \n            \n            \n                \ngroupContactsByFirstLetter(contacts: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contacts/contacts-overview/contacts-overview.component.ts:114\n                        \n                    \n\n\n            \n                \n                        Groups an array of contacts by the first letter of each contact's name.\nAdds initials and color properties to each contact.\nSorts contacts within each letter group alphabetically by name.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                contacts\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nArray of contacts to group.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadContacts\n                        \n                    \n                \n            \n            \n                \nloadContacts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contacts/contacts-overview/contacts-overview.component.ts:94\n                        \n                    \n\n\n            \n                \n                        Loads all contacts from the service and groups them alphabetically by the first letter.\nInitializes groupedContacts as an empty object before adding contacts.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadStoredContactDetails\n                        \n                    \n                \n            \n            \n                \nloadStoredContactDetails()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contacts/contacts-overview/contacts-overview.component.ts:83\n                        \n                    \n\n\n            \n                \n                        Loads contact details for a stored contact ID, if available.\nNavigates to the desktop contact details view for the contact.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contacts/contacts-overview/contacts-overview.component.ts:62\n                        \n                    \n\n\n            \n                \n                        Initializes the component by loading contacts and setting up subscriptions to screen size and overlay visibility.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onContactAdded\n                        \n                    \n                \n            \n            \n                \nonContactAdded(contactAdded: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contacts/contacts-overview/contacts-overview.component.ts:166\n                        \n                    \n\n\n            \n                \n                        Reloads the contacts list when a new contact is successfully added.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                contactAdded\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nBoolean indicating if a contact was added.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openContact\n                        \n                    \n                \n            \n            \n                \nopenContact(contactId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contacts/contacts-overview/contacts-overview.component.ts:188\n                        \n                    \n\n\n            \n                \n                        Opens the contact details view based on screen size.\nFor handset or tablet, navigates to the contact detail route.\nFor larger screens, shows the contact details in an overlay.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                contactId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nID of the contact to display.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refreshContacts\n                        \n                    \n                \n            \n            \n                \nrefreshContacts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contacts/contacts-overview/contacts-overview.component.ts:250\n                        \n                    \n\n\n            \n                \n                        Refreshes the contacts list by reloading contacts from the service.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showContactsAdd\n                        \n                    \n                \n            \n            \n                \nshowContactsAdd()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contacts/contacts-overview/contacts-overview.component.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        contactsOverlayService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ContactsOverlayService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/contacts/contacts-overview/contacts-overview.component.ts:51\n                        \n                    \n\n            \n                \n                    - Service for managing overlay visibility.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        contactsViewNotVisible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/contacts/contacts-overview/contacts-overview.component.ts:30\n                        \n                    \n\n            \n                \n                    Boolean to control the visibility of the contacts view overlay.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupedContacts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/contacts/contacts-overview/contacts-overview.component.ts:24\n                        \n                    \n\n            \n                \n                    Object to store contacts grouped alphabetically by first letter.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isHandsetOrTablet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/contacts/contacts-overview/contacts-overview.component.ts:27\n                        \n                    \n\n            \n                \n                    Boolean to indicate if the device is a handset or tablet.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isVisible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/contacts/contacts-overview/contacts-overview.component.ts:21\n                        \n                    \n\n            \n                \n                    Controls visibility of the add contact overlay.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedContact\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Contact | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/contacts/contacts-overview/contacts-overview.component.ts:33\n                        \n                    \n\n            \n                \n                    Currently selected contact to display in detail view.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        storedContactId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/contacts/contacts-overview/contacts-overview.component.ts:36\n                        \n                    \n\n            \n                \n                    Stores contact ID for desktop contact detail display.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AddContactService } from 'src/app/services/add-contact.service';\nimport { Contact } from 'src/assets/models/contact.model';\nimport { ScreenSizeService } from 'src/app/services/screen-size.service';\nimport { ContactsOverlayService } from 'src/app/services/contacts-overlay-service.service';\n\n\n/**\n * Component for displaying an overview of contacts. Groups contacts alphabetically,\n * handles display based on screen size, and manages visibility of the contacts overlay.\n */\n@Component({\n  selector: 'app-contacts-overview',\n  templateUrl: './contacts-overview.component.html',\n  styleUrls: ['./contacts-overview.component.scss'],\n})\nexport class ContactsOverviewComponent implements OnInit {\n\n/** Controls visibility of the add contact overlay. */\n  isVisible: boolean = false;\n\n  /** Object to store contacts grouped alphabetically by first letter. */\n  groupedContacts: { [key: string]: Contact[] } = {};\n\n  /** Boolean to indicate if the device is a handset or tablet. */\n  isHandsetOrTablet: boolean = false;\n\n  /** Boolean to control the visibility of the contacts view overlay. */\n  contactsViewNotVisible: boolean = true;\n\n  /** Currently selected contact to display in detail view. */\n  selectedContact: Contact | null = null;\n\n  /** Stores contact ID for desktop contact detail display. */\n  storedContactId: number | null = null;\n\n\n\n    /**\n   * Constructor to inject necessary services for managing contacts, routing, screen size, and overlay visibility.\n   * @param addContactService - Service for handling contact data.\n   * @param router - Angular Router for navigation.\n   * @param screenSizeService - Service for detecting screen size.\n   * @param contactsOverlayService - Service for managing overlay visibility.\n   */\n  constructor(\n    private addContactService: AddContactService,\n    private router: Router,\n    private screenSizeService: ScreenSizeService,\n    public contactsOverlayService: ContactsOverlayService, \n  ) {}\n\n  showContactsAdd(): void {\n    this.isVisible = true; \n  }\n\n\n    /**\n   * Initializes the component by loading contacts and setting up subscriptions to screen size and overlay visibility.\n   */\n  ngOnInit(): void {\n    this.loadContacts();\n    this.screenSizeService.isHandsetOrTablet$.subscribe(\n      isHandsetOrTablet => (this.isHandsetOrTablet = isHandsetOrTablet),\n    );\n\n    \n    this.contactsOverlayService.overlayVisibility$.subscribe(isVisible => {\n      this.contactsViewNotVisible = !isVisible;\n    });\n\n    if (this.storedContactId) {\n      this.loadStoredContactDetails();\n    }\n  }\n\n\n  /**\n * Loads contact details for a stored contact ID, if available.\n * Navigates to the desktop contact details view for the contact.\n */\n  loadStoredContactDetails(): void {\n    if (this.storedContactId !== null) {\n      this.goToDesktopContactDetails(this.storedContactId);\n    }\n  }\n\n\n  /**\n * Loads all contacts from the service and groups them alphabetically by the first letter.\n * Initializes `groupedContacts` as an empty object before adding contacts.\n */\n  loadContacts(): void {\n    this.groupedContacts = {};\n\n    this.addContactService.getContacts().subscribe({\n      next: contacts => {\n        this.groupContactsByFirstLetter(contacts);\n      },\n      error: error => {\n        console.error('Error loading contacts:', error);\n      },\n    });\n  }\n\n\n  /**\n * Groups an array of contacts by the first letter of each contact's name.\n * Adds initials and color properties to each contact.\n * Sorts contacts within each letter group alphabetically by name.\n * @param contacts - Array of contacts to group.\n */\n  groupContactsByFirstLetter(contacts: any[]): void {\n    this.groupedContacts = {};\n\n    contacts.forEach(contact => {\n      const firstLetter = contact.name[0].toUpperCase();\n      const initials = this.getInitials(contact.name);\n      const color = contact.color;\n\n      if (!this.groupedContacts[firstLetter]) {\n        this.groupedContacts[firstLetter] = [];\n      }\n\n      this.groupedContacts[firstLetter].push({ ...contact, initials, color });\n    });\n\n    for (const letter in this.groupedContacts) {\n      this.groupedContacts[letter].sort((a, b) => a.name.localeCompare(b.name));\n    }\n  }\n\n\n  /**\n * Generates initials from a contact's name.\n * Takes the first letter of the first and last name, if available.\n * @param name - The full name of the contact.\n * @returns A string containing the initials.\n */\n  getInitials(name: string): string {\n    const names = name.split(' ');\n    let initials = names[0].substring(0, 1).toUpperCase();\n\n    if (names.length > 1) {\n      initials += names[names.length - 1].substring(0, 1).toUpperCase();\n    }\n\n    return initials;\n  }\n\n\n  /**\n * Returns an array of sorted letters used to group contacts.\n * @returns An alphabetically sorted array of first letters.\n */\n  getSortedLetters(): string[] {\n    return Object.keys(this.groupedContacts).sort();\n  }\n\n\n  /**\n * Reloads the contacts list when a new contact is successfully added.\n * @param contactAdded - Boolean indicating if a contact was added.\n */\n  onContactAdded(contactAdded: boolean): void {\n    if (contactAdded) {\n      this.loadContacts(); \n    }\n  }\n\n\n  /**\n * Closes the contacts view overlay.\n */\n  closeContactsView(): void {\n    console.log('Closing contacts view...');\n    this.contactsOverlayService.setOverlayVisibility(false); \n  }\n\n\n  /**\n * Opens the contact details view based on screen size.\n * For handset or tablet, navigates to the contact detail route.\n * For larger screens, shows the contact details in an overlay.\n * @param contactId - ID of the contact to display.\n */\n  openContact(contactId: number): void {\n    if (this.isHandsetOrTablet) {\n      this.goToContactDetails(contactId);\n    } else {\n      this.goToDesktopContactDetails(contactId);\n    }\n  }\n\n\n  /**\n * Navigates to the contact detail page for mobile or tablet view.\n * @param contactId - ID of the contact to navigate to.\n */\n  goToContactDetails(contactId: number) {\n    if (typeof contactId === 'undefined' || isNaN(contactId)) {\n      console.error('Contact ID is undefined or NaN');\n      return;\n    }\n    this.router.navigate(['/contacts-detail', contactId]);\n  }\n\n\n  /**\n * Opens the desktop contact details overlay and sets the selected contact.\n * Stores the contact ID and displays the overlay with contact details.\n * @param contactId - ID of the contact to display in overlay.\n */\n  goToDesktopContactDetails(contactId: number) {\n    this.storedContactId = contactId;\n    if (typeof contactId === 'undefined' || isNaN(contactId)) {\n      console.error('Contact ID is undefined or NaN');\n      return;\n    }\n    const contact = this.findContactById(contactId);\n    if (!contact) {\n      console.error('Contact not found');\n      return;\n    }\n    this.selectedContact = contact;\n    this.contactsOverlayService.setOverlayVisibility(true);\n  }\n\n\n  /**\n * Finds a contact by ID within the grouped contacts.\n * @param contactId - ID of the contact to find.\n * @returns The contact object if found, otherwise undefined.\n */\n  findContactById(contactId: number): Contact | undefined {\n    for (const letter in this.groupedContacts) {\n      const contact = this.groupedContacts[letter].find(contact => contact.id === contactId);\n      if (contact) {\n        return contact;\n      }\n    }\n    return undefined;\n  }\n\n\n  /**\n * Refreshes the contacts list by reloading contacts from the service.\n */\n  refreshContacts(): void {\n    this.loadContacts();\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n    \n    \n      \n        \n          Add new contact\n\n          \n            \n          \n        \n\n        \n          \n            {{ letter }}\n            \n          \n          \n            \n              {{\n                contact.initials\n              }}\n              \n                {{ contact.name }}\n                {{ contact.email }}\n              \n            \n          \n        \n      \n\n      \n        \n      \n    \n\n    \n    \n\n    \n      \n        Contacts\n        \n        Better with a team\n      \n    \n    \n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./contacts-overview.component.scss\n                \n                .contactsContainer {\n  width: 100vw;\n  height: 100vh;\n  background-color: #f6f7f8;\n  display: flex;\n  flex-direction: column;\n}\n\n.contactsContent {\n  height: 80vh;\n  position: relative;\n  width: 100vw;\n  padding-right: 32px;\n  padding-left: 32px;\n  overflow: auto;\n  margin-top: 10vh;\n  margin-bottom: 10vh;\n}\n\n.addIconContainer {\n  height: 56px;\n  width: 56px;\n  background-color: #2a3647;\n  border-radius: 50%;\n  position: fixed;\n  bottom: calc(10vh + 16px);\n  right: 16px;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.personAddIcon {\n  padding-left: 4px;\n  padding-bottom: 4px;\n}\n\n.headlineContactOverview {\n  font-size: 1.3rem;\n  padding-left: 24px;\n}\n\n.headlineUnderline {\n  border-bottom: 1px solid;\n  border-color: #d1d1d1;\n  width: 100%;\n}\n\n.initialsCircle {\n  color: #ffffff;\n  height: 32px;\n  width: 32px;\n  border-radius: 50%;\n  font-size: 0.75rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.contactItem {\n  display: flex;\n  align-items: center;\n  padding-left: 16px;\n  margin-top: 16px;\n  margin-bottom: 16px;\n  cursor: pointer;\n}\n\n.contactNameEmailContainer {\n  margin-left: 32px;\n}\n\n.contactName {\n  font-size: 1.3rem;\n}\n\n.contactEmail {\n  color: #007cee;\n  font-size: 0.75rem;\n}\n\n.sidebarComponent {\n  display: none;\n}\n\n.contactsDesktopScreen {\n  display: none;\n}\n\n.contactsAddDesktop {\n  display: none;\n}\n\n@media (min-width: 1025px) {\n  .sidebarComponent {\n    display: block;\n  }\n\n  .addIconContainer {\n    display: none;\n  }\n\n  .contactsDesktopContainer {\n    display: flex;\n  }\n\n  .footerComponent {\n    display: none;\n  }\n\n  .contactsContent {\n    height: 90vh;\n    margin-bottom: 0vh;\n    margin-top: 10vh;\n    padding-top: 5vh;\n    width: 30vw;\n    background-color: white;\n  }\n\n  .contactsAddDesktop {\n    background-color: #2a3647;\n    border-radius: 10px;\n    display: flex;\n    justify-content: center;\n    cursor: pointer;\n    font-weight: bold;\n    color: white;\n    padding-top: 8px;\n    padding-bottom: 8px;\n    margin-bottom: 16px;\n  }\n\n  .contactsAddDesktop:hover {\n    background-color: #29abe2;\n  }\n\n  .addIconDesktop {\n    padding-left: 8px;\n  }\n\n  .contactItem:hover {\n    background-color: #f6f7f8;\n    border-radius: 10px;\n  }\n\n  .contactsDesktopScreen {\n    width: 55vw;\n    background-color: #f6f7f8;\n    margin-top: 15vh;\n    height: 80vh;\n    padding-left: 32px;\n    display: block;\n  }\n\n  .contactsSmallHeadline {\n    display: flex;\n    align-items: center;\n  }\n\n  .contactsDividingLine {\n    display: block;\n    border-right: 3px solid;\n    border-color: #29abe2;\n    height: 48px;\n    padding-bottom: 8px;\n    margin-right: 16px;\n    margin-left: 16px;\n  }\n\n  .smallHeadlineContacts {\n    font-size: calc(1.175rem + 0.5vw) !important;\n  }\n}\n\n@media screen and (orientation: landscape) and (max-width: 1024px) and (max-height: 512px) {\n  .contactsContent {\n    height: 70vh;\n    margin-top: 15vh;\n    margin-bottom: 15vh;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          Add new contact                                                                      {{ letter }}                                                          {{                contact.initials              }}                              {{ contact.name }}                {{ contact.email }}                                                                                                    Contacts                Better with a team                        '\n    var COMPONENTS = [{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'BoardTaskOverlayComponent', 'selector': 'app-board-task-overlay'},{'name': 'ContactsAddComponent', 'selector': 'app-contacts-add'},{'name': 'ContactsEditComponent', 'selector': 'app-contacts-edit'},{'name': 'ContactsOverviewComponent', 'selector': 'app-contacts-overview'},{'name': 'ContactsViewComponent', 'selector': 'app-contacts-view'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'FooterBarComponent', 'selector': 'app-footer-bar'},{'name': 'HeaderBarMobileComponent', 'selector': 'app-header-bar-mobile'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'SummaryComponent', 'selector': 'app-summary'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContactsOverviewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContactsViewComponent.html":{"url":"components/ContactsViewComponent.html","title":"component - ContactsViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ContactsViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/contacts/contacts-view/contacts-view.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component to view detailed information of a contact. Allows editing and deleting a contact.\nSupports displaying contact details in an overlay or standalone view based on screen size and visibility settings.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-contacts-view\n            \n\n\n\n            \n                styleUrls\n                ./contacts-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./contacts-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isVisible\n                            \n                            \n                                    Public\n                                showEditOverlay\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteContact\n                            \n                            \n                                    Private\n                                fetchContactDetails\n                            \n                            \n                                getInitials\n                            \n                            \n                                goBackToContacts\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onContactEdited\n                            \n                            \n                                showContactsEdit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                contact\n                            \n                            \n                                contactId\n                            \n                            \n                                isOverlayVisibleContactsView\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                contactDeleted\n                            \n                            \n                                contactUpdated\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, router: Router, addContactService: AddContactService, contactsOverlayService: ContactsOverlayService)\n                    \n                \n                        \n                            \n                                Defined in src/app/contacts/contacts-view/contacts-view.component.ts:49\n                            \n                        \n\n                \n                    \n                            Constructor to inject necessary services for managing contact data, navigation, and overlay visibility.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nActivatedRoute for accessing route parameters.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAngular Router for navigation.\n\n\n                                                        \n                                                \n                                                \n                                                        addContactService\n                                                  \n                                                        \n                                                                        AddContactService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService for managing contact data.\n\n\n                                                        \n                                                \n                                                \n                                                        contactsOverlayService\n                                                  \n                                                        \n                                                                        ContactsOverlayService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService for managing overlay visibility.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        contact\n                    \n                \n                \n                    \n                        Type :     Contact | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/contacts/contacts-view/contacts-view.component.ts:37\n                            \n                        \n                \n                    \n                        Contact model containing details of the current contact.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        contactId\n                    \n                \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/contacts/contacts-view/contacts-view.component.ts:28\n                            \n                        \n                \n                    \n                        The ID of the contact to view, which triggers fetching of contact details.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isOverlayVisibleContactsView\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/contacts/contacts-view/contacts-view.component.ts:31\n                            \n                        \n                \n                    \n                        Boolean to control the visibility of the contact view overlay.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/contacts/contacts-view/contacts-view.component.ts:46\n                            \n                        \n                \n                    \n                        Event emitted when the contact view component is closed.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        contactDeleted\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/contacts/contacts-view/contacts-view.component.ts:40\n                            \n                        \n                \n                    \n                        Event emitted when a contact is deleted.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        contactUpdated\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/contacts/contacts-view/contacts-view.component.ts:43\n                            \n                        \n                \n                    \n                        Event emitted when a contact is updated.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteContact\n                        \n                    \n                \n            \n            \n                \ndeleteContact()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contacts/contacts-view/contacts-view.component.ts:148\n                        \n                    \n\n\n            \n                \n                        Deletes the current contact and emits a contactDeleted event.\nIf deletion is successful, navigates back to the contacts list.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fetchContactDetails\n                        \n                    \n                \n            \n            \n                \n                        \n                    fetchContactDetails(contactId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contacts/contacts-view/contacts-view.component.ts:103\n                        \n                    \n\n\n            \n                \n                        Fetches contact details based on the provided contact ID.\nIf retrieval fails, navigates back to the contacts list.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                contactId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the contact to retrieve.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getInitials\n                        \n                    \n                \n            \n            \n                \ngetInitials(name: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contacts/contacts-view/contacts-view.component.ts:133\n                        \n                    \n\n\n            \n                \n                        Generates initials from the contact's name for display purposes.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the contact.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                A string with the initials derived from the name.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goBackToContacts\n                        \n                    \n                \n            \n            \n                \ngoBackToContacts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contacts/contacts-view/contacts-view.component.ts:190\n                        \n                    \n\n\n            \n                \n                        Navigates back to the contacts list view.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contacts/contacts-view/contacts-view.component.ts:91\n                        \n                    \n\n\n            \n                \n                        Updates the contact details when the contact ID input changes.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nObject containing the changes in component input properties.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contacts/contacts-view/contacts-view.component.ts:71\n                        \n                    \n\n\n            \n                \n                        Initializes the component by loading contact details if a contact ID is provided\nor if present in the route parameters.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onContactEdited\n                        \n                    \n                \n            \n            \n                \nonContactEdited(contactEdited: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contacts/contacts-view/contacts-view.component.ts:172\n                        \n                    \n\n\n            \n                \n                        Handles the contact edit event. If successful, reloads contact details and emits contactUpdated event.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                contactEdited\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nBoolean indicating whether the contact was successfully edited.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showContactsEdit\n                        \n                    \n                \n            \n            \n                \nshowContactsEdit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contacts/contacts-view/contacts-view.component.ts:119\n                        \n                    \n\n\n            \n                \n                        Displays the edit overlay for the current contact, if available.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isVisible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/contacts/contacts-view/contacts-view.component.ts:34\n                        \n                    \n\n            \n                \n                    Boolean to manage internal visibility of the overlay within the component.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        showEditOverlay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/contacts/contacts-view/contacts-view.component.ts:49\n                        \n                    \n\n            \n                \n                    Boolean to control the display of the edit overlay for the contact.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  OnInit,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AddContactService } from 'src/app/services/add-contact.service';\nimport { Contact } from 'src/assets/models/contact.model';\nimport { ContactsOverlayService } from 'src/app/services/contacts-overlay-service.service';\n\n\n/**\n * Component to view detailed information of a contact. Allows editing and deleting a contact.\n * Supports displaying contact details in an overlay or standalone view based on screen size and visibility settings.\n */\n@Component({\n  selector: 'app-contacts-view',\n  templateUrl: './contacts-view.component.html',\n  styleUrls: ['./contacts-view.component.scss'],\n})\nexport class ContactsViewComponent implements OnInit, OnChanges {\n\n  /** The ID of the contact to view, which triggers fetching of contact details. */\n  @Input() contactId: number | null = null;\n\n  /** Boolean to control the visibility of the contact view overlay. */\n  @Input() isOverlayVisibleContactsView: boolean = false;\n\n  /** Boolean to manage internal visibility of the overlay within the component. */\n  isVisible: boolean = false;\n\n  /** Contact model containing details of the current contact. */\n  @Input() contact: Contact | null = null;\n\n  /** Event emitted when a contact is deleted. */\n  @Output() contactDeleted = new EventEmitter();\n\n  /** Event emitted when a contact is updated. */\n  @Output() contactUpdated = new EventEmitter();\n\n  /** Event emitted when the contact view component is closed. */\n  @Output() close = new EventEmitter();\n\n  /** Boolean to control the display of the edit overlay for the contact. */\n  public showEditOverlay: boolean = false;\n\n\n    /**\n   * Constructor to inject necessary services for managing contact data, navigation, and overlay visibility.\n   * @param route - ActivatedRoute for accessing route parameters.\n   * @param router - Angular Router for navigation.\n   * @param addContactService - Service for managing contact data.\n   * @param contactsOverlayService - Service for managing overlay visibility.\n   */\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private addContactService: AddContactService,\n    private contactsOverlayService: ContactsOverlayService,\n  ) {}\n\n\n    /**\n   * Initializes the component by loading contact details if a contact ID is provided\n   * or if present in the route parameters.\n   */\n  ngOnInit(): void {\n    if (this.contactId) {\n      this.fetchContactDetails(this.contactId);\n    } else if (!this.contact) {\n      this.route.params.subscribe(params => {\n        const contactId = +params['id'];\n        if (contactId) {\n          this.fetchContactDetails(contactId);\n        } else {\n          this.router.navigate(['/contacts']);\n        }\n      });\n    }\n  }\n\n\n    /**\n   * Updates the contact details when the contact ID input changes.\n   * @param changes - Object containing the changes in component input properties.\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['contactId'] && changes['contactId'].currentValue) {\n      this.fetchContactDetails(changes['contactId'].currentValue);\n    }\n  }\n\n\n  /**\n   * Fetches contact details based on the provided contact ID.\n   * If retrieval fails, navigates back to the contacts list.\n   * @param contactId - The ID of the contact to retrieve.\n   */\n  private fetchContactDetails(contactId: number): void {\n    this.addContactService.getContactById(contactId).subscribe({\n      next: (response: Contact) => {\n        this.contact = response;\n      },\n      error: error => {\n        console.error('Failed to load contact details', error);\n        this.router.navigate(['/contacts']);\n      },\n    });\n  }\n\n\n    /**\n   * Displays the edit overlay for the current contact, if available.\n   */\n  showContactsEdit(): void {\n    if (this.contact) {\n      this.showEditOverlay = true;\n    } else {\n      console.error('Contact data is not available.');\n    }\n  }\n\n\n    /**\n   * Generates initials from the contact's name for display purposes.\n   * @param name - The name of the contact.\n   * @returns A string with the initials derived from the name.\n   */\n  getInitials(name: string | undefined): string {\n    if (!name) return '';\n    return name\n      .split(' ')\n      .map(n => n[0])\n      .join('')\n      .toUpperCase();\n  }\n\n\n    /**\n   * Deletes the current contact and emits a contactDeleted event.\n   * If deletion is successful, navigates back to the contacts list.\n   */\n\n  deleteContact(): void {\n    if (!this.contact || !this.contact.id) {\n      console.error('Attempted to delete a contact without an ID.');\n      return;\n    }\n\n    const contactId = this.contact.id;\n    this.addContactService.deleteContact(contactId).subscribe({\n      next: () => {\n        this.router.navigate(['/contacts']);\n        this.contactDeleted.emit();\n        this.contactsOverlayService.setOverlayVisibility(false);\n      },\n      error: error => {\n        console.error('Failed to delete contact', error);\n      },\n    });\n  }\n\n\n    /**\n   * Handles the contact edit event. If successful, reloads contact details and emits contactUpdated event.\n   * @param contactEdited - Boolean indicating whether the contact was successfully edited.\n   */\n  onContactEdited(contactEdited: boolean): void {\n    if (contactEdited) {\n      if (this.contact && this.contact.id) {\n        this.fetchContactDetails(this.contact.id);\n        this.contactUpdated.emit();\n        this.showEditOverlay = false;\n      } else {\n        console.error('No contact or contact ID available for editing.');\n      }\n    } else {\n      console.log('Contact edit was not successful.');\n    }\n  }\n\n\n    /**\n   * Navigates back to the contacts list view.\n   */\n  goBackToContacts(): void {\n    this.router.navigate(['/contacts']);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n\n    \n      \n        Contacts\n        \n        Better with a team\n        \n        \n          \n            \n          \n        \n      \n\n      \n        {{\n          getInitials(contact?.name)\n        }}\n        \n          {{ contact?.name }}\n          \n             Edit\n             Delete\n          \n        \n      \n\n      \n        Contact information\n\n        \n          Email\n          {{ contact?.email }}\n          Phone\n          {{ contact?.phone }}\n        \n      \n\n      \n        \n          \n        \n\n        \n          \n            \n               Edit\n            \n          \n          \n            \n              \n              Delete\n            \n          \n        \n      \n    \n    \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./contacts-view.component.scss\n                \n                .contactsViewPage {\n  display: block;\n}\n\n.contactsViewContainer {\n  width: 100vw;\n  height: 100vh;\n  background-color: #f6f7f8;\n  display: flex;\n  flex-direction: column;\n}\n\n.contactsSmallHeadline {\n  display: block;\n}\n\n.contactsBackArrow {\n  display: block;\n  position: absolute;\n  top: 16px;\n  right: 16px;\n  cursor: pointer;\n}\n\n.contactsViewContent {\n  height: 80vh;\n  position: relative;\n  width: 100vw;\n  padding-right: 32px;\n  padding-left: 32px;\n  overflow: auto;\n  margin-top: 10vh;\n  margin-bottom: 10vh;\n}\n\n.smallHeadlineContacts {\n  font-size: calc(1.175rem + 0.5vw) !important;\n}\n\n.contactsUnderline {\n  border-bottom: 3px solid;\n  border-color: #29abe2;\n  width: min(120px, 50%);\n  padding-bottom: 8px;\n}\n\n.contactsDividingLine {\n  display: none;\n}\n\n.contactsInformationContainer {\n  display: flex;\n  flex-direction: column;\n}\n\n.intitialsContactNameContainer {\n  display: flex;\n  align-items: center;\n  margin-top: 32px;\n  margin-bottom: 16px;\n}\n\n.initialsCircleContactView {\n  color: #ffffff;\n  height: 80px;\n  width: 80px;\n  border-radius: 50%;\n  font-size: 2rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.contactsEditDeleteDesktop {\n  display: none;\n}\n\n.contactName {\n  font-family: 'InterBold';\n  font-size: calc(1.4rem + 1.5vw);\n  font-weight: 700;\n  margin-left: 16px;\n}\n\n.contactsInformation {\n  font-size: calc(1.175rem + 0.5vw);\n}\n\n.contactsEmailHeadline {\n  font-family: 'InterBold';\n  font-weight: 700;\n  margin-bottom: 8px;\n}\n\n.contactsEmail {\n  color: #007cee;\n  margin-bottom: 8px;\n}\n\n.contactsPhoneHeadline {\n  font-family: 'InterBold';\n  font-weight: 700;\n  margin-bottom: 8px;\n  margin-top: 8px;\n}\n\n.contactsPhone {\n  margin-bottom: 8px;\n}\n\n.moreIconContainer {\n  height: 56px;\n  width: 56px;\n  background-color: #2a3647;\n  border-radius: 50%;\n  position: fixed;\n  bottom: calc(10vh + 16px);\n  right: 16px;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.dropup {\n  position: fixed;\n  bottom: calc(10vh + 56px + 16px); \n  right: 16px; \n  cursor: pointer;\n}\n\n.linkContainerContactView {\n  border: none;\n  border-radius: 20px 20px 0px 20px;\n  background-color: #ffffff;\n  box-shadow: 0px 3px 3px rgba(0, 0, 0, 0.25);\n  position: absolute; \n  transform: translateY(80%) !important; \n}\n\n.footerComponent {\n  display: block;\n}\n\n.sidebarComponent {\n  display: none;\n}\n\n.contactsInformationContainerSmall {\n  display: flex;\n  flex-direction: column;\n}\n\n@media (min-width: 1025px) {\n  .headerDesktopContactsView {\n    display: none;\n  }\n\n  .sidebarComponent {\n    display: block;\n  }\n\n  .footerComponent {\n    display: none;\n  }\n\n  .contactsViewPage {\n    display: flex;\n  }\n\n  .contactsViewContainer {\n    width: 55vw;\n  }\n\n  .contactsViewContent {\n    width: 100%;\n    margin-bottom: 0vh;\n    overflow: hidden;\n    margin-top: 15vh;\n  }\n\n  .contactsSmallHeadline {\n    display: flex;\n    align-items: center;\n  }\n\n  .contactsUnderline {\n    display: none;\n  }\n\n  .contactsDividingLine {\n    display: block;\n    border-right: 3px solid;\n    border-color: #29abe2;\n    height: 48px;\n    padding-bottom: 8px;\n    margin-right: 16px;\n    margin-left: 16px;\n  }\n\n  .initialsCircleContactView {\n    height: 100px;\n    width: 100px;\n    font-size: 2.5rem;\n  }\n\n  .contactsEditDeleteDesktop {\n    display: block;\n    width: 100%;\n    margin-left: 16px;\n    margin-bottom: 8px;\n  }\n\n  .contactsEditLink {\n    margin-right: 16px;\n  }\n\n  .contactsEditLink:hover {\n    color: #29abe2;\n    cursor: pointer;\n  }\n\n  .moreIconContainer {\n    display: none;\n  }\n\n  .contactsBackArrow {\n    display: none;\n  }\n\n  .contactsInformationContainerSmall {\n    display: flex;\n    flex-direction: column;\n  }\n}\n\n@media screen and (orientation: landscape) and (max-width: 1024px) and (max-height: 512px) {\n  .contactsViewContent {\n    height: 70vh;\n    margin-top: 15vh;\n    margin-bottom: 15vh;\n  }\n\n  h1,\n  .h1 {\n    font-size: calc(1.375rem + 1.5vw) !important;\n  }\n\n  .smallHeadlineContacts {\n    font-size: calc(1rem + 0.5vw) !important;\n  }\n\n  .intitialsContactNameContainer {\n    margin-top: 15px;\n    margin-bottom: 8px;\n  }\n\n  .initialsCircleContactView {\n    height: 40px;\n    width: 40px;\n    font-size: 1rem;\n  }\n\n  .contactsSmallHeadline {\n    display: flex;\n    align-items: center;\n  }\n\n  .contactsDividingLine {\n    display: block;\n    border-right: 3px solid;\n    border-color: #29abe2;\n    height: 32px;\n    padding-bottom: 8px;\n    margin-right: 16px;\n    margin-left: 16px;\n  }\n\n  .contactsUnderline {\n    display: none;\n  }\n\n  .moreIconContainer {\n    bottom: calc(12vh + 16px);\n  }\n\n  .linkContainerContactView {\n    bottom: 17px !important;\n    position: absolute;\n  }\n\n  .contactsInformationContainerSmall {\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n  }\n\n  .contactsEmail {\n    margin-left: 8px;\n  }\n\n  .contactsPhoneHeadline {\n    margin-left: 16px;\n    margin-top: 0px;\n  }\n\n  .contactsPhone {\n    margin-left: 8px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  Contacts                Better with a team                                                                            {{          getInitials(contact?.name)        }}                  {{ contact?.name }}                       Edit             Delete                                      Contact information                  Email          {{ contact?.email }}          Phone          {{ contact?.phone }}                                                                                           Edit                                                                        Delete                                                            '\n    var COMPONENTS = [{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'BoardTaskOverlayComponent', 'selector': 'app-board-task-overlay'},{'name': 'ContactsAddComponent', 'selector': 'app-contacts-add'},{'name': 'ContactsEditComponent', 'selector': 'app-contacts-edit'},{'name': 'ContactsOverviewComponent', 'selector': 'app-contacts-overview'},{'name': 'ContactsViewComponent', 'selector': 'app-contacts-view'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'FooterBarComponent', 'selector': 'app-footer-bar'},{'name': 'HeaderBarMobileComponent', 'selector': 'app-header-bar-mobile'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'SummaryComponent', 'selector': 'app-summary'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContactsViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomDateParserFormatter.html":{"url":"injectables/CustomDateParserFormatter.html","title":"injectable - CustomDateParserFormatter","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CustomDateParserFormatter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/custom-date-parser-formatter.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        NgbDateParserFormatter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                format\n                            \n                            \n                                parse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        format\n                        \n                    \n                \n            \n            \n                \nformat(date: NgbDateStruct | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/custom-date-parser-formatter.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                        NgbDateStruct | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parse\n                        \n                    \n                \n            \n            \n                \nparse(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/custom-date-parser-formatter.service.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     NgbDateStruct | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { NgbDateParserFormatter, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\n\n@Injectable()\nexport class CustomDateParserFormatter extends NgbDateParserFormatter {\n  parse(value: string): NgbDateStruct | null {\n    if (value) {\n      const dateParts = value.trim().split('-');\n      if (dateParts.length === 3) {\n        return {\n          year: parseInt(dateParts[0], 10),\n          month: parseInt(dateParts[1], 10),\n          day: parseInt(dateParts[2], 10),\n        };\n      }\n    }\n    return null;\n  }\n\n  format(date: NgbDateStruct | null): string {\n    if (!date) return '';\n    const month = date.month \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomDateParserFormatter-1.html":{"url":"injectables/CustomDateParserFormatter-1.html","title":"injectable - CustomDateParserFormatter-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CustomDateParserFormatter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/custom-dateparser-formatter.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        NgbDateParserFormatter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                format\n                            \n                            \n                                    Private\n                                pad\n                            \n                            \n                                parse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        format\n                        \n                    \n                \n            \n            \n                \nformat(date: NgbDateStruct | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/custom-dateparser-formatter.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                        NgbDateStruct | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        pad\n                        \n                    \n                \n            \n            \n                \n                        \n                    pad(number: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/custom-dateparser-formatter.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                number\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parse\n                        \n                    \n                \n            \n            \n                \nparse(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/custom-dateparser-formatter.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     NgbDateStruct | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { NgbDateParserFormatter, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\n\n@Injectable()\nexport class CustomDateParserFormatter extends NgbDateParserFormatter {\n  parse(value: string): NgbDateStruct | null {\n    if (value) {\n      const dateParts = value.trim().split('/');\n      if (dateParts.length === 3) {\n        return {\n          day: parseInt(dateParts[0], 10),\n          month: parseInt(dateParts[1], 10),\n          year: parseInt(dateParts[2], 10),\n        };\n      }\n    }\n    return null;\n  }\n\n  format(date: NgbDateStruct | null): string {\n    return date ? `${this.pad(date.day)}/${this.pad(date.month)}/${date.year}` : '';\n  }\n\n  private pad(number: number) {\n    return number \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterBarComponent.html":{"url":"components/FooterBarComponent.html","title":"component - FooterBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterBarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/footer-bar/footer-bar.component.ts\n\n\n\n    \n        Description\n    \n    \n        FooterBarComponent is responsible for navigation within the footer bar,\nhighlighting the active page and providing shortcuts to key sections.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer-bar\n            \n\n\n\n            \n                styleUrls\n                ./footer-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./footer-bar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isAddTaskPage\n                            \n                            \n                                isBoardPage\n                            \n                            \n                                isContactsPage\n                            \n                            \n                                isSummaryPage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToAddtask\n                            \n                            \n                                goToBoard\n                            \n                            \n                                goToContacts\n                            \n                            \n                                goToSummary\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                resetPageFlags\n                            \n                            \n                                    Private\n                                setPageFlag\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/footer-bar/footer-bar.component.ts:26\n                            \n                        \n\n                \n                    \n                            Constructor to inject the Angular Router for navigation and URL monitoring.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nRouter for navigation and tracking route events.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goToAddtask\n                        \n                    \n                \n            \n            \n                \ngoToAddtask()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/footer-bar/footer-bar.component.ts:87\n                        \n                    \n\n\n            \n                \n                        Navigates to the Add Task page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToBoard\n                        \n                    \n                \n            \n            \n                \ngoToBoard()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/footer-bar/footer-bar.component.ts:93\n                        \n                    \n\n\n            \n                \n                        Navigates to the Board page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToContacts\n                        \n                    \n                \n            \n            \n                \ngoToContacts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/footer-bar/footer-bar.component.ts:75\n                        \n                    \n\n\n            \n                \n                        Navigates to the Contacts page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToSummary\n                        \n                    \n                \n            \n            \n                \ngoToSummary()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/footer-bar/footer-bar.component.ts:81\n                        \n                    \n\n\n            \n                \n                        Navigates to the Summary page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/footer-bar/footer-bar.component.ts:40\n                        \n                    \n\n\n            \n                \n                        Initializes the component by subscribing to router events to set the current active page.\nSets the page flag based on the initial route on component load.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resetPageFlags\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetPageFlags()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/footer-bar/footer-bar.component.ts:54\n                        \n                    \n\n\n            \n                \n                        Resets all page flags to false. Called before setting the active page flag.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setPageFlag\n                        \n                    \n                \n            \n            \n                \n                        \n                    setPageFlag(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/footer-bar/footer-bar.component.ts:66\n                        \n                    \n\n\n            \n                \n                        Sets the appropriate page flag to true based on the current URL.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe current URL to determine the active page.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isAddTaskPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/footer-bar/footer-bar.component.ts:23\n                        \n                    \n\n            \n                \n                    Boolean indicating if the Add Task page is active.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isBoardPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/footer-bar/footer-bar.component.ts:20\n                        \n                    \n\n            \n                \n                    Boolean indicating if the Board page is active.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isContactsPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/footer-bar/footer-bar.component.ts:26\n                        \n                    \n\n            \n                \n                    Boolean indicating if the Contacts page is active.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSummaryPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/footer-bar/footer-bar.component.ts:17\n                        \n                    \n\n            \n                \n                    Boolean indicating if the Summary page is active.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router, NavigationEnd, Event as RouterEvent } from '@angular/router';\n\n\n/**\n * FooterBarComponent is responsible for navigation within the footer bar,\n * highlighting the active page and providing shortcuts to key sections.\n */\n@Component({\n  selector: 'app-footer-bar',\n  templateUrl: './footer-bar.component.html',\n  styleUrls: ['./footer-bar.component.scss'],\n})\nexport class FooterBarComponent implements OnInit {\n\n  /** Boolean indicating if the Summary page is active. */\n  isSummaryPage: boolean = false;\n\n  /** Boolean indicating if the Board page is active. */\n  isBoardPage: boolean = false;\n\n  /** Boolean indicating if the Add Task page is active. */\n  isAddTaskPage: boolean = false;\n\n  /** Boolean indicating if the Contacts page is active. */\n  isContactsPage: boolean = false;\n\n\n   /**\n   * Constructor to inject the Angular Router for navigation and URL monitoring.\n   * @param router - Router for navigation and tracking route events.\n   */\n  constructor(private router: Router) {}\n\n\n    /**\n   * Initializes the component by subscribing to router events to set the current active page.\n   * Sets the page flag based on the initial route on component load.\n   */\n  ngOnInit() {\n    this.router.events.subscribe(event => {\n      if (event instanceof NavigationEnd) {\n        this.resetPageFlags();\n        this.setPageFlag(event.urlAfterRedirects);\n      }\n    });\n    this.setPageFlag(this.router.url);\n  }\n\n\n    /**\n   * Resets all page flags to false. Called before setting the active page flag.\n   */\n  private resetPageFlags() {\n    this.isSummaryPage = false;\n    this.isBoardPage = false;\n    this.isAddTaskPage = false;\n    this.isContactsPage = false;\n  }\n\n\n    /**\n   * Sets the appropriate page flag to true based on the current URL.\n   * @param url - The current URL to determine the active page.\n   */\n  private setPageFlag(url: string) {\n    this.isSummaryPage = url.includes('/summary');\n    this.isBoardPage = url.includes('/board');\n    this.isAddTaskPage = url.includes('/addtask');\n    this.isContactsPage = url.includes('/contacts');\n  }\n\n\n    /** Navigates to the Contacts page. */\n  goToContacts() {\n    this.router.navigate(['/contacts']);\n  }\n\n\n  /** Navigates to the Summary page. */\n  goToSummary() {\n    this.router.navigate(['/summary']);\n  }\n\n\n  /** Navigates to the Add Task page. */\n  goToAddtask() {\n    this.router.navigate(['/addtask']);\n  }\n\n\n  /** Navigates to the Board page. */\n  goToBoard() {\n    this.router.navigate(['/board']);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        \n      \n    \n    \n  \n  \n    \n      \n        \n        \n        \n      \n    \n    \n  \n  \n    \n      \n        \n          \n        \n        \n          \n        \n        \n      \n    \n    \n  \n  \n    \n      \n        \n          \n        \n        \n          \n        \n        \n      \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./footer-bar.component.scss\n                \n                .footerBar {\n  background-color: #2a3647;\n  height: 10vh;\n  width: 100%;\n  position: absolute;\n  bottom: 0;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n}\n\n.iconContainerFooter {\n  height: 100%;\n  display: flex;\n  align-items: center;\n  border-radius: 16px;\n  padding-left: 8px;\n  padding-right: 8px;\n}\n\n.hoverFooterIcons:hover {\n  background-color: #091931;\n  cursor: pointer;\n}\n\n.activeRouteIcon {\n  background-color: #091931 !important;\n}\n\n@media screen and (orientation: landscape) and (max-width: 1024px) and (max-height: 512px) {\n  .footerBar {\n    height: 15vh;\n  }\n\n  svg {\n    height: 50px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                                                                                '\n    var COMPONENTS = [{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'BoardTaskOverlayComponent', 'selector': 'app-board-task-overlay'},{'name': 'ContactsAddComponent', 'selector': 'app-contacts-add'},{'name': 'ContactsEditComponent', 'selector': 'app-contacts-edit'},{'name': 'ContactsOverviewComponent', 'selector': 'app-contacts-overview'},{'name': 'ContactsViewComponent', 'selector': 'app-contacts-view'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'FooterBarComponent', 'selector': 'app-footer-bar'},{'name': 'HeaderBarMobileComponent', 'selector': 'app-header-bar-mobile'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'SummaryComponent', 'selector': 'app-summary'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderBarMobileComponent.html":{"url":"components/HeaderBarMobileComponent.html","title":"component - HeaderBarMobileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderBarMobileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/header-bar-mobile/header-bar-mobile.component.ts\n\n\n\n    \n        Description\n    \n    \n        HeaderBarMobileComponent is responsible for managing the mobile header bar,\ndisplaying user initials, and handling navigation and logout.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header-bar-mobile\n            \n\n\n\n            \n                styleUrls\n                ./header-bar-mobile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header-bar-mobile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isDropdownOpen\n                            \n                            \n                                userInitial\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToSummary\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleDropdown\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/header-bar-mobile/header-bar-mobile.component.ts:22\n                            \n                        \n\n                \n                    \n                            Constructor to inject the Angular Router for navigation and UserService for user data.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nRouter for navigation.\n\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService for fetching user information.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goToSummary\n                        \n                    \n                \n            \n            \n                \ngoToSummary()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/header-bar-mobile/header-bar-mobile.component.ts:70\n                        \n                    \n\n\n            \n                \n                        Navigates to the Summary page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/header-bar-mobile/header-bar-mobile.component.ts:60\n                        \n                    \n\n\n            \n                \n                        Logs the user out by clearing relevant local and session storage data\nand navigating to the login page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/header-bar-mobile/header-bar-mobile.component.ts:40\n                        \n                    \n\n\n            \n                \n                        Initializes the component by fetching the current user and setting the user's initial.\nAssumes name property in User model represents the full name.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleDropdown\n                        \n                    \n                \n            \n            \n                \ntoggleDropdown()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/header-bar-mobile/header-bar-mobile.component.ts:51\n                        \n                    \n\n\n            \n                \n                        Toggles the visibility of the dropdown menu.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isDropdownOpen\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/header-bar-mobile/header-bar-mobile.component.ts:19\n                        \n                    \n\n            \n                \n                    Controls the visibility of the dropdown menu.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userInitial\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/header-bar-mobile/header-bar-mobile.component.ts:22\n                        \n                    \n\n            \n                \n                    Stores the initial of the user's name for display.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router'; // Import Router from '@angular/router'\nimport { UserService } from 'src/app/services/user.service';\nimport { User } from 'src/assets/models/user.model';\n\n\n/**\n * HeaderBarMobileComponent is responsible for managing the mobile header bar,\n * displaying user initials, and handling navigation and logout.\n */\n@Component({\n  selector: 'app-header-bar-mobile',\n  templateUrl: './header-bar-mobile.component.html',\n  styleUrls: ['./header-bar-mobile.component.scss'],\n})\nexport class HeaderBarMobileComponent implements OnInit {\n\n    /** Controls the visibility of the dropdown menu. */\n  isDropdownOpen: boolean = false;\n\n  /** Stores the initial of the user's name for display. */\n  userInitial: string = '';\n\n\n    /**\n   * Constructor to inject the Angular Router for navigation and UserService for user data.\n   * @param router - Router for navigation.\n   * @param userService - Service for fetching user information.\n   */\n  constructor(\n    private router: Router,\n    private userService: UserService,\n  ) {}\n\n\n  /**\n   * Initializes the component by fetching the current user and setting the user's initial.\n   * Assumes `name` property in User model represents the full name.\n   */\n  ngOnInit() {\n    this.userService.getCurrentUser().subscribe(user => {\n      if (user && user.name) {\n        // Assuming 'name' is a property of the User model and contains the full name\n        this.userInitial = user.name.charAt(0).toUpperCase();\n      }\n    });\n  }\n\n\n  /** Toggles the visibility of the dropdown menu. */\n  toggleDropdown() {\n    this.isDropdownOpen = !this.isDropdownOpen;\n  }\n\n\n    /**\n   * Logs the user out by clearing relevant local and session storage data\n   * and navigating to the login page.\n   */\n  logout() {\n    localStorage.removeItem('auth_token');\n    sessionStorage.removeItem('auth_token');\n    localStorage.removeItem('user_details');\n    this.router.navigateByUrl('/login');\n    sessionStorage.removeItem('showOverlay');\n  }\n\n\n  /** Navigates to the Summary page. */\n  goToSummary() {\n    this.router.navigate(['/summary']);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n      \n      \n      \n      \n    \n  \n  Kanban Project Management Tool\n  \n    \n      {{ userInitial }}\n    \n\n    \n      Legal Notice\n      Privacy Policy\n      \n        Log out\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./header-bar-mobile.component.scss\n                \n                .headerContainer {\n  box-shadow: 0px 5px 5px rgba(0, 0, 0, 0.1);\n  height: 10vh;\n  width: 100%;\n  position: absolute;\n  top: 0;\n  background-color: #ffffff;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  z-index: 3;\n}\n\n.iconContainerHeader {\n  margin-left: 16px;\n  display: block;\n}\n\n.logo {\n  cursor: pointer;\n}\n\n.initialsContainer {\n  width: 40px;\n  height: 40px;\n  border: 2px solid #2a3647;\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-right: 16px;\n}\n\n.initials {\n  font-weight: bold;\n  color: #29abe2;\n  text-decoration: none;\n}\n\n.linkContainer {\n  background-color: #2a3647;\n  inset: 56px 4px auto auto !important;\n  border-top-left-radius: 20px;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  transform: none !important;\n}\n\n.link {\n  color: #ffffff;\n}\n\n.link:hover {\n  background-color: #091931;\n  border-radius: 10px;\n}\n\n.headerText {\n  display: none;\n}\n\n@media (min-width: 1025px) {\n  .headerContainer {\n    width: 85vw;\n    right: 0;\n  }\n\n  .iconContainerHeader {\n    display: none;\n  }\n\n  .headerText {\n    display: block;\n    font-weight: 500;\n    margin-left: 48px;\n  }\n}\n\n@media screen and (orientation: landscape) and (max-width: 1024px) and (max-height: 512px) {\n  .headerContainer {\n    height: 15vh;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                  Kanban Project Management Tool            {{ userInitial }}              Legal Notice      Privacy Policy              Log out            '\n    var COMPONENTS = [{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'BoardTaskOverlayComponent', 'selector': 'app-board-task-overlay'},{'name': 'ContactsAddComponent', 'selector': 'app-contacts-add'},{'name': 'ContactsEditComponent', 'selector': 'app-contacts-edit'},{'name': 'ContactsOverviewComponent', 'selector': 'app-contacts-overview'},{'name': 'ContactsViewComponent', 'selector': 'app-contacts-view'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'FooterBarComponent', 'selector': 'app-footer-bar'},{'name': 'HeaderBarMobileComponent', 'selector': 'app-header-bar-mobile'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'SummaryComponent', 'selector': 'app-summary'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderBarMobileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LegalNoticeComponent.html":{"url":"components/LegalNoticeComponent.html","title":"component - LegalNoticeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LegalNoticeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/imprint/legal-notice/legal-notice.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-legal-notice\n            \n\n\n\n            \n                styleUrls\n                ./legal-notice.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./legal-notice.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-legal-notice',\n  templateUrl: './legal-notice.component.html',\n  styleUrls: ['./legal-notice.component.scss'],\n})\nexport class LegalNoticeComponent {}\n\n    \n\n    \n        \n  \n    \n      \n        \n        \n        \n        \n        \n        \n      \n    \n    Kanban Project Management Tool\n  \n  \n    \n      \n        \n          \n          \n          \n          \n          \n          \n        \n        \n          \n            \n          \n        \n      \n    \n  \n  \n    Impressum\n    \n    \n    Angaben gemäß § 5 TMG\n\n    Fabian Dürr\n    Haubenschloßstr. 13\n    87435 Kempten\n    \n    Kontakt\n    Telefon: +49 (0) 15172536808\n    E-Mail: fabianduerr&#64;web.de\n    \n    Quelle: https://www.e-recht24.de\n  \n\n\n    \n\n    \n                \n                    ./legal-notice.component.scss\n                \n                .legalNoticeContainer {\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n}\n\n.sidebarContnentContainer {\n  display: none;\n}\n\n.legalNoticeContent {\n  background-color: #f6f7f8;\n  width: 100vw;\n  font-weight: bold;\n  padding: 32px;\n  margin-top: 10vh;\n}\n\n.headerContainer {\n  box-shadow: 0px 5px 5px rgba(0, 0, 0, 0.1);\n  height: 10vh;\n  width: 100%;\n  position: absolute;\n  top: 0;\n  background-color: #ffffff;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  z-index: 3;\n}\n\n.iconContainerHeader {\n  margin-left: 16px;\n  display: block;\n}\n\n.initialsContainer {\n  width: 40px;\n  height: 40px;\n  border: 2px solid #2a3647;\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-right: 16px;\n}\n\n.initials {\n  font-weight: bold;\n  color: #29abe2;\n  text-decoration: none;\n}\n\n.linkContainer {\n  background-color: #2a3647;\n  inset: 56px 4px auto auto !important;\n  border-top-left-radius: 20px;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  transform: none !important;\n}\n\n.link {\n  color: #ffffff;\n}\n\n.link:hover {\n  background-color: #091931;\n  border-radius: 10px;\n}\n\n.headerText {\n  display: none;\n}\n\n@media (min-width: 1025px) {\n  .sidebarContnentContainer {\n    background-color: #2a3647;\n    height: 100vh;\n    width: 15vw;\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n  }\n\n  .legalNoticeContent {\n    width: 85vw;\n  }\n\n  .iconContainerSidebar {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding-top: 8px;\n    padding-bottom: 8px;\n    margin-top: 40px;\n    width: 15vw;\n  }\n\n  .boardIcon {\n    padding-right: 16px;\n  }\n\n  .iconText {\n    color: white;\n    font-weight: 500;\n    margin-left: 10px;\n  }\n\n  .hoverSidebarIcons:hover {\n    background-color: #091931;\n    cursor: pointer;\n  }\n\n  .activeRouteIconSidebar {\n    background-color: #091931 !important;\n  }\n\n  .logoContainer {\n    height: 30vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .allIconsContainer {\n    height: 55vh;\n    display: flex;\n    flex-direction: column;\n    width: 15vw;\n  }\n\n  .imprintContainer {\n    height: 10vh;\n    color: #ffffff;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-evenly;\n  }\n\n  .imprintLink {\n    cursor: pointer;\n  }\n\n  .imprintLink:hover {\n    color: #29abe2;\n  }\n\n  .headerContainer {\n    width: 85vw;\n    right: 0;\n  }\n\n  .iconContainerHeader {\n    display: none;\n  }\n\n  .headerText {\n    display: block;\n    font-weight: 500;\n    margin-left: 48px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                          Kanban Project Management Tool                                                                                                                                                            Impressum            Angaben gemäß § 5 TMG    Fabian Dürr    Haubenschloßstr. 13    87435 Kempten        Kontakt    Telefon: +49 (0) 15172536808    E-Mail: fabianduerr@web.de        Quelle: https://www.e-recht24.de  '\n    var COMPONENTS = [{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'BoardTaskOverlayComponent', 'selector': 'app-board-task-overlay'},{'name': 'ContactsAddComponent', 'selector': 'app-contacts-add'},{'name': 'ContactsEditComponent', 'selector': 'app-contacts-edit'},{'name': 'ContactsOverviewComponent', 'selector': 'app-contacts-overview'},{'name': 'ContactsViewComponent', 'selector': 'app-contacts-view'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'FooterBarComponent', 'selector': 'app-footer-bar'},{'name': 'HeaderBarMobileComponent', 'selector': 'app-header-bar-mobile'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'SummaryComponent', 'selector': 'app-summary'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LegalNoticeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n    \n        Description\n    \n    \n        LoginComponent handles user authentication by managing login credentials,\nvisibility of the password, and error messages. It also allows guest login and\nredirects upon successful login.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n\n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                isPasswordWrong\n                            \n                            \n                                isUsernameWrong\n                            \n                            \n                                password\n                            \n                            \n                                passwordVisible\n                            \n                            \n                                rememberMe\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                displayErrorMessage\n                            \n                            \n                                goToLogIn\n                            \n                            \n                                goToSignUp\n                            \n                            \n                                guestLogin\n                            \n                            \n                                login\n                            \n                            \n                                    Private\n                                resetFields\n                            \n                            \n                                    Private\n                                storeToken\n                            \n                            \n                                togglePasswordVisibility\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loginService: LoginService, router: Router, userService: UserService, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:36\n                            \n                        \n\n                \n                    \n                            Constructor to inject necessary services for login, user management, and navigation.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        loginService\n                                                  \n                                                        \n                                                                        LoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService for handling login requests.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nRouter for navigation.\n\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService for managing user data.\n\n\n                                                        \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nHttpClient for making HTTP requests.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        displayErrorMessage\n                        \n                    \n                \n            \n            \n                \ndisplayErrorMessage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:96\n                        \n                    \n\n\n            \n                \n                        Displays an error message indicating incorrect username or password.\nResets the input fields to blank.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToLogIn\n                        \n                    \n                \n            \n            \n                \ngoToLogIn()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:141\n                        \n                    \n\n\n            \n                \n                        Navigates directly to the Summary page after logging in.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToSignUp\n                        \n                    \n                \n            \n            \n                \ngoToSignUp()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:114\n                        \n                    \n\n\n            \n                \n                        Navigates to the sign-up page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        guestLogin\n                        \n                    \n                \n            \n            \n                \nguestLogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:106\n                        \n                    \n\n\n            \n                \n                        Logs in as a guest user by setting predefined credentials.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:64\n                        \n                    \n\n\n            \n                \n                        Attempts to log the user in using the provided credentials.\nUpon successful login, stores the token and navigates to the Summary page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resetFields\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetFields()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:134\n                        \n                    \n\n\n            \n                \n                        Clears the email and password fields.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        storeToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    storeToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:124\n                        \n                    \n\n\n            \n                \n                        Stores the authentication token in either localStorage or sessionStorage,\nbased on the \"Remember Me\" selection.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe authentication token to store.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        togglePasswordVisibility\n                        \n                    \n                \n            \n            \n                \ntogglePasswordVisibility()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:55\n                        \n                    \n\n\n            \n                \n                        Toggles the visibility of the password field.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:21\n                        \n                    \n\n            \n                \n                    Stores the entered email address for login.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isPasswordWrong\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:30\n                        \n                    \n\n            \n                \n                    Tracks if an incorrect password error is displayed.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUsernameWrong\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:33\n                        \n                    \n\n            \n                \n                    Tracks if an incorrect username error is displayed.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:24\n                        \n                    \n\n            \n                \n                    Stores the entered password for login.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordVisible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:27\n                        \n                    \n\n            \n                \n                    Controls visibility of the password field.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rememberMe\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:36\n                        \n                    \n\n            \n                \n                    Determines if the authentication token should be stored persistently.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { LoginService } from 'src/app/auth/login.service';\nimport { UserService } from 'src/app/services/user.service';\n\n\n/**\n * LoginComponent handles user authentication by managing login credentials,\n * visibility of the password, and error messages. It also allows guest login and\n * redirects upon successful login.\n */\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent {\n\n  /** Stores the entered email address for login. */\n  email: string = '';\n\n  /** Stores the entered password for login. */\n  password: string = '';\n\n  /** Controls visibility of the password field. */\n  passwordVisible: boolean = false;\n\n  /** Tracks if an incorrect password error is displayed. */\n  isPasswordWrong: boolean = false;\n\n  /** Tracks if an incorrect username error is displayed. */\n  isUsernameWrong: boolean = false;\n\n  /** Determines if the authentication token should be stored persistently. */\n  rememberMe: boolean = false;\n\n\n    /**\n   * Constructor to inject necessary services for login, user management, and navigation.\n   * @param loginService - Service for handling login requests.\n   * @param router - Router for navigation.\n   * @param userService - Service for managing user data.\n   * @param http - HttpClient for making HTTP requests.\n   */\n  constructor(\n    private loginService: LoginService,\n    private router: Router,\n    private userService: UserService,\n    private http: HttpClient,\n  ) {}\n\n\n    /** Toggles the visibility of the password field. */\n  togglePasswordVisibility(): void {\n    this.passwordVisible = !this.passwordVisible;\n  }\n\n\n    /**\n   * Attempts to log the user in using the provided credentials.\n   * Upon successful login, stores the token and navigates to the Summary page.\n   */\n  login(): void {\n    this.loginService.login(this.email, this.password).subscribe({\n      next: response => {\n        if (response && response.token) {\n          this.storeToken(response.token);\n\n          if (response.user) {\n            this.userService.setCurrentUser(response.user); \n          } else {\n            console.log('No user details in response'); \n          }\n\n          this.router.navigate(['/summary']);\n          this.isPasswordWrong = false;\n          this.isUsernameWrong = false;\n        } else {\n          console.error('Invalid response structure', response);\n          this.displayErrorMessage(); \n        }\n      },\n      error: error => {\n        console.error('Login failed:', error);\n        this.displayErrorMessage(); \n      },\n    });\n  }\n\n\n    /**\n   * Displays an error message indicating incorrect username or password.\n   * Resets the input fields to blank.\n   */\n  displayErrorMessage(): void {\n    this.isPasswordWrong = true;\n    this.isUsernameWrong = true;\n    this.resetFields(); \n  }\n\n\n    /**\n   * Logs in as a guest user by setting predefined credentials.\n   */\n  guestLogin(): void {\n    this.email = 'guest@guest.com';\n    this.password = 'L!9NbQY.3V';\n    this.login();\n  }\n\n\n    /** Navigates to the sign-up page. */\n  goToSignUp(): void {\n    this.router.navigate(['/signup']);\n  }\n\n\n    /**\n   * Stores the authentication token in either localStorage or sessionStorage,\n   * based on the \"Remember Me\" selection.\n   * @param token - The authentication token to store.\n   */\n  private storeToken(token: string): void {\n    if (this.rememberMe) {\n      localStorage.setItem('auth_token', token);\n    } else {\n      sessionStorage.setItem('auth_token', token);\n    }\n  }\n\n\n    /** Clears the email and password fields. */\n  private resetFields(): void {\n    this.email = '';\n    this.password = '';\n  }\n\n\n    /** Navigates directly to the Summary page after logging in. */\n  goToLogIn(): void {\n    this.router.navigate(['/summary']);\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n    \n    \n    \n    \n  \n\n\n\n  \n    \n      \n      \n      \n      \n      \n      \n    \n  \n  \n    \n      Log in\n      \n    \n\n    \n      \n        \n        \n        \n        \n        \n        \n      \n    \n    \n      \n        \n        Email address\n      \n\n      Username or password is wrong! Try again.\n\n      \n        \n        Password\n        \n          \n        \n      \n\n      \n        \n         Remember me \n      \n\n      Log in\n      \n        Guest Log in\n      \n    \n  \n\n  \n    \n      \n        Not a Join user?\n      \n      \n        Sign up\n      \n    \n\n    \n      Privacy Policy\n      Legal notice\n    \n  \n\n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                h1 {\n  display: flex;\n  justify-content: center;\n  margin: 16px;\n}\n\n.headlineContainer {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 16px;\n}\n\n.underline {\n  border-bottom: 3px solid;\n  border-color: #29abe2;\n  width: 60%;\n}\n\n.inputField {\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n}\n\n.inputContainer {\n  width: 90%;\n  display: flex;\n  align-items: center;\n  position: relative;\n}\n\n.h58 {\n  height: 56px;\n}\n\n.borderNone {\n  border: none !important;\n}\n\n.formContainer {\n  width: 100%;\n  height: 80%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n}\n\n.formInput {\n  background-image: url('/assets/img/mail.png');\n  background-repeat: no-repeat;\n  background-position: calc(100% - 18px);\n}\n\n.formInputPassword {\n  background-repeat: no-repeat;\n  background-position: right 10px center;\n  padding-right: 40px;\n}\n\n.loginContainer {\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  height: 100vh;\n}\n\n.logoContainer {\n  height: 20vh;\n  position: relative;\n  top: 16px;\n  width: calc(100% - 32px);\n}\n\n.logoContainerMobile {\n  display: none;\n}\n\n.mainContainer {\n  height: 80vh;\n  background-color: #ffffff;\n  width: min(652px, 90%);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n  border-radius: 30px;\n}\n\n.footerContainer {\n  height: 20vh;\n  width: 90vw;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  flex-direction: column;\n}\n\n.SignupFootercontainer {\n  flex-direction: row;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  width: 90vw;\n}\n\n.btn-toggle-visibility {\n  position: absolute;\n  height: 100%;\n  right: 0px;\n  border: none;\n  background: transparent;\n  cursor: pointer;\n}\n\n.checkboxContainer {\n  width: 80%;\n}\n\n.checkboxInput {\n  border-color: #2a3647;\n  border-width: 2px;\n  box-shadow: none;\n}\n\n.notJoin {\n  font-weight: 400;\n  font-size: 1.5rem;\n}\n\n.linkContainer {\n  flex-direction: row;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  width: 90vw;\n}\n\n.link {\n  cursor: pointer;\n}\n\n@media screen and (orientation: landscape) and (max-width: 1024px) {\n  .logoContainer {\n    display: none;\n  }\n\n  .logoContainerMobile {\n    display: block;\n    position: absolute;\n    top: 16px;\n    left: 16px;\n  }\n\n  .mainContainer {\n    height: 100vh;\n    width: 100vw;\n  }\n}\n\n.overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: white;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 9999; \n  animation: overlayFadeOut 2s ease-in-out forwards;\n}\n\n\n.logo {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%) scale(2); \n  animation: logoMove 2s ease-in-out forwards;\n  transform-origin: center center; \n}\n\n\n@keyframes logoMove {\n  0% {\n    transform: scale(2) translate(-50%, -50%); \n    opacity: 1;\n  }\n  100% {\n    transform: scale(1) translate(0, 0); \n    opacity: 0; \n    top: 16px;\n    left: 16px;\n  }\n}\n\n\n@keyframes overlayFadeOut {\n  0% {\n    opacity: 1;\n  }\n  100% {\n    opacity: 0;\n    visibility: hidden; \n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                        Log in                                                                                                        Email address            Username or password is wrong! Try again.                      Password                                                       Remember me             Log in              Guest Log in                                Not a Join user?                    Sign up                    Privacy Policy      Legal notice      '\n    var COMPONENTS = [{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'BoardTaskOverlayComponent', 'selector': 'app-board-task-overlay'},{'name': 'ContactsAddComponent', 'selector': 'app-contacts-add'},{'name': 'ContactsEditComponent', 'selector': 'app-contacts-edit'},{'name': 'ContactsOverviewComponent', 'selector': 'app-contacts-overview'},{'name': 'ContactsViewComponent', 'selector': 'app-contacts-view'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'FooterBarComponent', 'selector': 'app-footer-bar'},{'name': 'HeaderBarMobileComponent', 'selector': 'app-header-bar-mobile'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'SummaryComponent', 'selector': 'app-summary'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoginService.html":{"url":"injectables/LoginService.html","title":"injectable - LoginService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/login.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service responsible for handling user login, logout, and access to protected data.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loginUrl\n                            \n                            \n                                    Private\n                                protectedUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getProtectedData\n                            \n                            \n                                isLoggedIn\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/login.service.ts:18\n                            \n                        \n\n                \n                    \n                            Constructor that injects HttpClient for making HTTP requests.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAngular's HttpClient for HTTP communication.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getProtectedData\n                        \n                    \n                \n            \n            \n                \ngetProtectedData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/login.service.ts:62\n                        \n                    \n\n\n            \n                \n                        Retrieves protected data from the server, including an authorization token in the request headers.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable - Observable with the server's protected data or null in case of error.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedIn\n                        \n                    \n                \n            \n            \n                \nisLoggedIn()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/login.service.ts:79\n                        \n                    \n\n\n            \n                \n                        Checks if the user is currently logged in by verifying the presence of an auth token.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                boolean - True if the user is logged in, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/login.service.ts:35\n                        \n                    \n\n\n            \n                \n                        Logs in a user with the provided email and password.\nStores the authentication token in local storage upon successful login.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nUser's email address.\n\n\n                                            \n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nUser's password.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable - Observable with the server response or null in case of error.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/auth/login.service.ts:52\n                        \n                    \n\n\n            \n                \n                        Logs out the user by removing the authentication token from local storage.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loginUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://join.server.fabianduerr.com/login/'\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/login.service.ts:15\n                        \n                    \n\n            \n                \n                    URL for the login endpoint\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        protectedUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://join.server.fabianduerr.com/protected/'\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/login.service.ts:18\n                        \n                    \n\n            \n                \n                    URL for accessing protected resources\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\n\n/**\n * Service responsible for handling user login, logout, and access to protected data.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoginService {\n\n    /** URL for the login endpoint */\n  private loginUrl = 'https://join.server.fabianduerr.com/login/';\n\n  /** URL for accessing protected resources */\n  private protectedUrl = 'https://join.server.fabianduerr.com/protected/';\n\n\n    /**\n   * Constructor that injects HttpClient for making HTTP requests.\n   * @param http - Angular's HttpClient for HTTP communication.\n   */\n  constructor(private http: HttpClient) {}\n\n\n    /**\n   * Logs in a user with the provided email and password.\n   * Stores the authentication token in local storage upon successful login.\n   * @param email - User's email address.\n   * @param password - User's password.\n   * @returns Observable - Observable with the server response or null in case of error.\n   */\n  login(email: string, password: string): Observable {\n    return this.http.post(this.loginUrl, { email, password }).pipe(\n      tap(response => {\n        localStorage.setItem('auth_token', response.token);\n        sessionStorage.setItem('showOverlaySummary', 'true');\n      }),\n      catchError(error => {\n        console.error('Login error:', error);\n        return of(null); \n      }),\n    );\n  }\n\n\n    /**\n   * Logs out the user by removing the authentication token from local storage.\n   */\n  logout(): void {\n    localStorage.removeItem('auth_token');\n    sessionStorage.removeItem('showOverlay');\n  }\n\n\n    /**\n   * Retrieves protected data from the server, including an authorization token in the request headers.\n   * @returns Observable - Observable with the server's protected data or null in case of error.\n   */\n  getProtectedData(): Observable {\n    const headers = new HttpHeaders({\n      Authorization: `Token ${localStorage.getItem('auth_token')}`,\n    });\n    return this.http.get(this.protectedUrl, { headers }).pipe(\n      catchError(error => {\n        console.error('Error fetching protected data:', error);\n        return of(null); \n      }),\n    );\n  }\n\n\n    /**\n   * Checks if the user is currently logged in by verifying the presence of an auth token.\n   * @returns boolean - True if the user is logged in, false otherwise.\n   */\n  isLoggedIn(): boolean {\n    return !!localStorage.getItem('auth_token');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PrivacyPolicyComponent.html":{"url":"components/PrivacyPolicyComponent.html","title":"component - PrivacyPolicyComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PrivacyPolicyComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/imprint/privacy-policy/privacy-policy.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-privacy-policy\n            \n\n\n\n            \n                styleUrls\n                ./privacy-policy.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./privacy-policy.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-privacy-policy',\n  templateUrl: './privacy-policy.component.html',\n  styleUrls: ['./privacy-policy.component.scss'],\n})\nexport class PrivacyPolicyComponent {}\n\n    \n\n    \n        \n  \n    \n      \n        \n        \n        \n        \n        \n        \n      \n    \n    Kanban Project Management Tool\n  \n  \n    \n      \n        \n          \n          \n          \n          \n          \n          \n        \n        \n          \n            \n          \n        \n      \n    \n  \n  \n    Datenschutz&shy;erkl&auml;rung\n    1. Datenschutz auf einen Blick\n    Allgemeine Hinweise\n    \n      Die folgenden Hinweise geben einen einfachen &Uuml;berblick dar&uuml;ber, was mit Ihren\n      personenbezogenen Daten passiert, wenn Sie diese Website besuchen. Personenbezogene Daten sind\n      alle Daten, mit denen Sie pers&ouml;nlich identifiziert werden k&ouml;nnen. Ausf&uuml;hrliche\n      Informationen zum Thema Datenschutz entnehmen Sie unserer unter diesem Text aufgef&uuml;hrten\n      Datenschutzerkl&auml;rung.\n    \n    Datenerfassung auf dieser Website\n    Wer ist verantwortlich f&uuml;r die Datenerfassung auf dieser Website?\n    \n      Die Datenverarbeitung auf dieser Website erfolgt durch den Websitebetreiber. Dessen\n      Kontaktdaten k&ouml;nnen Sie dem Abschnitt &bdquo;Hinweis zur Verantwortlichen Stelle&ldquo;\n      in dieser Datenschutzerkl&auml;rung entnehmen.\n    \n    Wie erfassen wir Ihre Daten?\n    \n      Ihre Daten werden zum einen dadurch erhoben, dass Sie uns diese mitteilen. Hierbei kann es\n      sich z.&nbsp;B. um Daten handeln, die Sie in ein Kontaktformular eingeben.\n    \n    \n      Andere Daten werden automatisch oder nach Ihrer Einwilligung beim Besuch der Website durch\n      unsere IT-Systeme erfasst. Das sind vor allem technische Daten (z.&nbsp;B. Internetbrowser,\n      Betriebssystem oder Uhrzeit des Seitenaufrufs). Die Erfassung dieser Daten erfolgt\n      automatisch, sobald Sie diese Website betreten.\n    \n    Wof&uuml;r nutzen wir Ihre Daten?\n    \n      Ein Teil der Daten wird erhoben, um eine fehlerfreie Bereitstellung der Website zu\n      gew&auml;hrleisten. Andere Daten k&ouml;nnen zur Analyse Ihres Nutzerverhaltens verwendet\n      werden.\n    \n    Welche Rechte haben Sie bez&uuml;glich Ihrer Daten?\n    \n      Sie haben jederzeit das Recht, unentgeltlich Auskunft &uuml;ber Herkunft, Empf&auml;nger und\n      Zweck Ihrer gespeicherten personenbezogenen Daten zu erhalten. Sie haben au&szlig;erdem ein\n      Recht, die Berichtigung oder L&ouml;schung dieser Daten zu verlangen. Wenn Sie eine\n      Einwilligung zur Datenverarbeitung erteilt haben, k&ouml;nnen Sie diese Einwilligung jederzeit\n      f&uuml;r die Zukunft widerrufen. Au&szlig;erdem haben Sie das Recht, unter bestimmten\n      Umst&auml;nden die Einschr&auml;nkung der Verarbeitung Ihrer personenbezogenen Daten zu\n      verlangen. Des Weiteren steht Ihnen ein Beschwerderecht bei der zust&auml;ndigen\n      Aufsichtsbeh&ouml;rde zu.\n    \n    \n      Hierzu sowie zu weiteren Fragen zum Thema Datenschutz k&ouml;nnen Sie sich jederzeit an uns\n      wenden.\n    \n    2. Hosting\n    Wir hosten die Inhalte unserer Website bei folgendem Anbieter:\n    All-Inkl\n    \n      Anbieter ist die ALL-INKL.COM - Neue Medien M&uuml;nnich, Inh. Ren&eacute; M&uuml;nnich,\n      Hauptstra&szlig;e 68, 02742 Friedersdorf (nachfolgend All-Inkl). Details entnehmen Sie der\n      Datenschutzerkl&auml;rung von All-Inkl:\n      https://all-inkl.com/datenschutzinformationen/.\n    \n    \n      Die Verwendung von All-Inkl erfolgt auf Grundlage von Art. 6 Abs. 1 lit. f DSGVO. Wir haben\n      ein berechtigtes Interesse an einer m&ouml;glichst zuverl&auml;ssigen Darstellung unserer\n      Website. Sofern eine entsprechende Einwilligung abgefragt wurde, erfolgt die Verarbeitung\n      ausschlie&szlig;lich auf Grundlage von Art. 6 Abs. 1 lit. a DSGVO und &sect; 25 Abs. 1 TTDSG,\n      soweit die Einwilligung die Speicherung von Cookies oder den Zugriff auf Informationen im\n      Endger&auml;t des Nutzers (z.&nbsp;B. Device-Fingerprinting) im Sinne des TTDSG umfasst. Die\n      Einwilligung ist jederzeit widerrufbar.\n    \n\n    3. Allgemeine Hinweise und Pflicht&shy;informationen\n    Datenschutz\n    \n      Die Betreiber dieser Seiten nehmen den Schutz Ihrer pers&ouml;nlichen Daten sehr ernst. Wir\n      behandeln Ihre personenbezogenen Daten vertraulich und entsprechend den gesetzlichen\n      Datenschutzvorschriften sowie dieser Datenschutzerkl&auml;rung.\n    \n    \n      Wenn Sie diese Website benutzen, werden verschiedene personenbezogene Daten erhoben.\n      Personenbezogene Daten sind Daten, mit denen Sie pers&ouml;nlich identifiziert werden\n      k&ouml;nnen. Die vorliegende Datenschutzerkl&auml;rung erl&auml;utert, welche Daten wir\n      erheben und wof&uuml;r wir sie nutzen. Sie erl&auml;utert auch, wie und zu welchem Zweck das\n      geschieht.\n    \n    \n      Wir weisen darauf hin, dass die Daten&uuml;bertragung im Internet (z.&nbsp;B. bei der\n      Kommunikation per E-Mail) Sicherheitsl&uuml;cken aufweisen kann. Ein l&uuml;ckenloser Schutz\n      der Daten vor dem Zugriff durch Dritte ist nicht m&ouml;glich.\n    \n    Hinweis zur verantwortlichen Stelle\n    Die verantwortliche Stelle f&uuml;r die Datenverarbeitung auf dieser Website ist:\n    \n      Fabian Dürr\n      Haubenschloßstr. 13\n      87435 Kempten\n    \n\n    \n      Telefon: +49 (0) 15172536808\n      E-Mail: fabianduerr&#64;web.de\n    \n    \n      Verantwortliche Stelle ist die nat&uuml;rliche oder juristische Person, die allein oder\n      gemeinsam mit anderen &uuml;ber die Zwecke und Mittel der Verarbeitung von personenbezogenen\n      Daten (z.&nbsp;B. Namen, E-Mail-Adressen o. &Auml;.) entscheidet.\n    \n\n    Speicherdauer\n    \n      Soweit innerhalb dieser Datenschutzerkl&auml;rung keine speziellere Speicherdauer genannt\n      wurde, verbleiben Ihre personenbezogenen Daten bei uns, bis der Zweck f&uuml;r die\n      Datenverarbeitung entf&auml;llt. Wenn Sie ein berechtigtes L&ouml;schersuchen geltend machen\n      oder eine Einwilligung zur Datenverarbeitung widerrufen, werden Ihre Daten gel&ouml;scht,\n      sofern wir keine anderen rechtlich zul&auml;ssigen Gr&uuml;nde f&uuml;r die Speicherung Ihrer\n      personenbezogenen Daten haben (z.&nbsp;B. steuer- oder handelsrechtliche\n      Aufbewahrungsfristen); im letztgenannten Fall erfolgt die L&ouml;schung nach Fortfall dieser\n      Gr&uuml;nde.\n    \n    Allgemeine Hinweise zu den Rechtsgrundlagen der Datenverarbeitung auf dieser Website\n    \n      Sofern Sie in die Datenverarbeitung eingewilligt haben, verarbeiten wir Ihre personenbezogenen\n      Daten auf Grundlage von Art. 6 Abs. 1 lit. a DSGVO bzw. Art. 9 Abs. 2 lit. a DSGVO, sofern\n      besondere Datenkategorien nach Art. 9 Abs. 1 DSGVO verarbeitet werden. Im Falle einer\n      ausdr&uuml;cklichen Einwilligung in die &Uuml;bertragung personenbezogener Daten in\n      Drittstaaten erfolgt die Datenverarbeitung au&szlig;erdem auf Grundlage von Art. 49 Abs. 1\n      lit. a DSGVO. Sofern Sie in die Speicherung von Cookies oder in den Zugriff auf Informationen\n      in Ihr Endger&auml;t (z.&nbsp;B. via Device-Fingerprinting) eingewilligt haben, erfolgt die\n      Datenverarbeitung zus&auml;tzlich auf Grundlage von &sect; 25 Abs. 1 TTDSG. Die Einwilligung\n      ist jederzeit widerrufbar. Sind Ihre Daten zur Vertragserf&uuml;llung oder zur\n      Durchf&uuml;hrung vorvertraglicher Ma&szlig;nahmen erforderlich, verarbeiten wir Ihre Daten\n      auf Grundlage des Art. 6 Abs. 1 lit. b DSGVO. Des Weiteren verarbeiten wir Ihre Daten, sofern\n      diese zur Erf&uuml;llung einer rechtlichen Verpflichtung erforderlich sind auf Grundlage von\n      Art. 6 Abs. 1 lit. c DSGVO. Die Datenverarbeitung kann ferner auf Grundlage unseres\n      berechtigten Interesses nach Art. 6 Abs. 1 lit. f DSGVO erfolgen. &Uuml;ber die jeweils im\n      Einzelfall einschl&auml;gigen Rechtsgrundlagen wird in den folgenden Abs&auml;tzen dieser\n      Datenschutzerkl&auml;rung informiert.\n    \n    Empfänger von personenbezogenen Daten\n    \n      Im Rahmen unserer Gesch&auml;ftst&auml;tigkeit arbeiten wir mit verschiedenen externen Stellen\n      zusammen. Dabei ist teilweise auch eine &Uuml;bermittlung von personenbezogenen Daten an diese\n      externen Stellen erforderlich. Wir geben personenbezogene Daten nur dann an externe Stellen\n      weiter, wenn dies im Rahmen einer Vertragserf&uuml;llung erforderlich ist, wenn wir gesetzlich\n      hierzu verpflichtet sind (z.&nbsp;B. Weitergabe von Daten an Steuerbeh&ouml;rden), wenn wir\n      ein berechtigtes Interesse nach Art. 6 Abs. 1 lit. f DSGVO an der Weitergabe haben oder wenn\n      eine sonstige Rechtsgrundlage die Datenweitergabe erlaubt. Beim Einsatz von\n      Auftragsverarbeitern geben wir personenbezogene Daten unserer Kunden nur auf Grundlage eines\n      g&uuml;ltigen Vertrags &uuml;ber Auftragsverarbeitung weiter. Im Falle einer gemeinsamen\n      Verarbeitung wird ein Vertrag &uuml;ber gemeinsame Verarbeitung geschlossen.\n    \n\n    Widerruf Ihrer Einwilligung zur Datenverarbeitung\n    \n      Viele Datenverarbeitungsvorg&auml;nge sind nur mit Ihrer ausdr&uuml;cklichen Einwilligung\n      m&ouml;glich. Sie k&ouml;nnen eine bereits erteilte Einwilligung jederzeit widerrufen. Die\n      Rechtm&auml;&szlig;igkeit der bis zum Widerruf erfolgten Datenverarbeitung bleibt vom Widerruf\n      unber&uuml;hrt.\n    \n    \n      Widerspruchsrecht gegen die Datenerhebung in besonderen F&auml;llen sowie gegen Direktwerbung\n      (Art. 21 DSGVO)\n    \n    \n      WENN DIE DATENVERARBEITUNG AUF GRUNDLAGE VON ART. 6 ABS. 1 LIT. E ODER F DSGVO ERFOLGT, HABEN\n      SIE JEDERZEIT DAS RECHT, AUS GR&Uuml;NDEN, DIE SICH AUS IHRER BESONDEREN SITUATION ERGEBEN,\n      GEGEN DIE VERARBEITUNG IHRER PERSONENBEZOGENEN DATEN WIDERSPRUCH EINZULEGEN; DIES GILT AUCH\n      F&Uuml;R EIN AUF DIESE BESTIMMUNGEN GEST&Uuml;TZTES PROFILING. DIE JEWEILIGE RECHTSGRUNDLAGE,\n      AUF DENEN EINE VERARBEITUNG BERUHT, ENTNEHMEN SIE DIESER DATENSCHUTZERKL&Auml;RUNG. WENN SIE\n      WIDERSPRUCH EINLEGEN, WERDEN WIR IHRE BETROFFENEN PERSONENBEZOGENEN DATEN NICHT MEHR\n      VERARBEITEN, ES SEI DENN, WIR K&Ouml;NNEN ZWINGENDE SCHUTZW&Uuml;RDIGE GR&Uuml;NDE F&Uuml;R\n      DIE VERARBEITUNG NACHWEISEN, DIE IHRE INTERESSEN, RECHTE UND FREIHEITEN &Uuml;BERWIEGEN ODER\n      DIE VERARBEITUNG DIENT DER GELTENDMACHUNG, AUS&Uuml;BUNG ODER VERTEIDIGUNG VON\n      RECHTSANSPR&Uuml;CHEN (WIDERSPRUCH NACH ART. 21 ABS. 1 DSGVO).\n    \n    \n      WERDEN IHRE PERSONENBEZOGENEN DATEN VERARBEITET, UM DIREKTWERBUNG ZU BETREIBEN, SO HABEN SIE\n      DAS RECHT, JEDERZEIT WIDERSPRUCH GEGEN DIE VERARBEITUNG SIE BETREFFENDER PERSONENBEZOGENER\n      DATEN ZUM ZWECKE DERARTIGER WERBUNG EINZULEGEN; DIES GILT AUCH F&Uuml;R DAS PROFILING, SOWEIT\n      ES MIT SOLCHER DIREKTWERBUNG IN VERBINDUNG STEHT. WENN SIE WIDERSPRECHEN, WERDEN IHRE\n      PERSONENBEZOGENEN DATEN ANSCHLIESSEND NICHT MEHR ZUM ZWECKE DER DIREKTWERBUNG VERWENDET\n      (WIDERSPRUCH NACH ART. 21 ABS. 2 DSGVO).\n    \n    Beschwerde&shy;recht bei der zust&auml;ndigen Aufsichts&shy;beh&ouml;rde\n    \n      Im Falle von Verst&ouml;&szlig;en gegen die DSGVO steht den Betroffenen ein Beschwerderecht\n      bei einer Aufsichtsbeh&ouml;rde, insbesondere in dem Mitgliedstaat ihres gew&ouml;hnlichen\n      Aufenthalts, ihres Arbeitsplatzes oder des Orts des mutma&szlig;lichen Versto&szlig;es zu. Das\n      Beschwerderecht besteht unbeschadet anderweitiger verwaltungsrechtlicher oder gerichtlicher\n      Rechtsbehelfe.\n    \n    Recht auf Daten&shy;&uuml;bertrag&shy;barkeit\n    \n      Sie haben das Recht, Daten, die wir auf Grundlage Ihrer Einwilligung oder in Erf&uuml;llung\n      eines Vertrags automatisiert verarbeiten, an sich oder an einen Dritten in einem\n      g&auml;ngigen, maschinenlesbaren Format aush&auml;ndigen zu lassen. Sofern Sie die direkte\n      &Uuml;bertragung der Daten an einen anderen Verantwortlichen verlangen, erfolgt dies nur,\n      soweit es technisch machbar ist.\n    \n    Auskunft, Berichtigung und L&ouml;schung\n    \n      Sie haben im Rahmen der geltenden gesetzlichen Bestimmungen jederzeit das Recht auf\n      unentgeltliche Auskunft &uuml;ber Ihre gespeicherten personenbezogenen Daten, deren Herkunft\n      und Empf&auml;nger und den Zweck der Datenverarbeitung und ggf. ein Recht auf Berichtigung\n      oder L&ouml;schung dieser Daten. Hierzu sowie zu weiteren Fragen zum Thema personenbezogene\n      Daten k&ouml;nnen Sie sich jederzeit an uns wenden.\n    \n    Recht auf Einschr&auml;nkung der Verarbeitung\n    \n      Sie haben das Recht, die Einschr&auml;nkung der Verarbeitung Ihrer personenbezogenen Daten zu\n      verlangen. Hierzu k&ouml;nnen Sie sich jederzeit an uns wenden. Das Recht auf\n      Einschr&auml;nkung der Verarbeitung besteht in folgenden F&auml;llen:\n    \n    \n      \n        Wenn Sie die Richtigkeit Ihrer bei uns gespeicherten personenbezogenen Daten bestreiten,\n        ben&ouml;tigen wir in der Regel Zeit, um dies zu &uuml;berpr&uuml;fen. F&uuml;r die Dauer\n        der Pr&uuml;fung haben Sie das Recht, die Einschr&auml;nkung der Verarbeitung Ihrer\n        personenbezogenen Daten zu verlangen.\n      \n      \n        Wenn die Verarbeitung Ihrer personenbezogenen Daten unrechtm&auml;&szlig;ig\n        geschah/geschieht, k&ouml;nnen Sie statt der L&ouml;schung die Einschr&auml;nkung der\n        Datenverarbeitung verlangen.\n      \n      \n        Wenn wir Ihre personenbezogenen Daten nicht mehr ben&ouml;tigen, Sie sie jedoch zur\n        Aus&uuml;bung, Verteidigung oder Geltendmachung von Rechtsanspr&uuml;chen ben&ouml;tigen,\n        haben Sie das Recht, statt der L&ouml;schung die Einschr&auml;nkung der Verarbeitung Ihrer\n        personenbezogenen Daten zu verlangen.\n      \n      \n        Wenn Sie einen Widerspruch nach Art. 21 Abs. 1 DSGVO eingelegt haben, muss eine\n        Abw&auml;gung zwischen Ihren und unseren Interessen vorgenommen werden. Solange noch nicht\n        feststeht, wessen Interessen &uuml;berwiegen, haben Sie das Recht, die Einschr&auml;nkung\n        der Verarbeitung Ihrer personenbezogenen Daten zu verlangen.\n      \n    \n    \n      Wenn Sie die Verarbeitung Ihrer personenbezogenen Daten eingeschr&auml;nkt haben, d&uuml;rfen\n      diese Daten &ndash; von ihrer Speicherung abgesehen &ndash; nur mit Ihrer Einwilligung oder\n      zur Geltendmachung, Aus&uuml;bung oder Verteidigung von Rechtsanspr&uuml;chen oder zum Schutz\n      der Rechte einer anderen nat&uuml;rlichen oder juristischen Person oder aus Gr&uuml;nden eines\n      wichtigen &ouml;ffentlichen Interesses der Europ&auml;ischen Union oder eines Mitgliedstaats\n      verarbeitet werden.\n    \n    SSL- bzw. TLS-Verschl&uuml;sselung\n    \n      Diese Seite nutzt aus Sicherheitsgr&uuml;nden und zum Schutz der &Uuml;bertragung\n      vertraulicher Inhalte, wie zum Beispiel Bestellungen oder Anfragen, die Sie an uns als\n      Seitenbetreiber senden, eine SSL- bzw. TLS-Verschl&uuml;sselung. Eine verschl&uuml;sselte\n      Verbindung erkennen Sie daran, dass die Adresszeile des Browsers von &bdquo;http://&ldquo; auf\n      &bdquo;https://&ldquo; wechselt und an dem Schloss-Symbol in Ihrer Browserzeile.\n    \n    \n      Wenn die SSL- bzw. TLS-Verschl&uuml;sselung aktiviert ist, k&ouml;nnen die Daten, die Sie an\n      uns &uuml;bermitteln, nicht von Dritten mitgelesen werden.\n    \n    4. Datenerfassung auf dieser Website\n    Kontaktformular\n    \n      Wenn Sie uns per Kontaktformular Anfragen zukommen lassen, werden Ihre Angaben aus dem\n      Anfrageformular inklusive der von Ihnen dort angegebenen Kontaktdaten zwecks Bearbeitung der\n      Anfrage und f&uuml;r den Fall von Anschlussfragen bei uns gespeichert. Diese Daten geben wir\n      nicht ohne Ihre Einwilligung weiter.\n    \n    \n      Die Verarbeitung dieser Daten erfolgt auf Grundlage von Art. 6 Abs. 1 lit. b DSGVO, sofern\n      Ihre Anfrage mit der Erf&uuml;llung eines Vertrags zusammenh&auml;ngt oder zur\n      Durchf&uuml;hrung vorvertraglicher Ma&szlig;nahmen erforderlich ist. In allen &uuml;brigen\n      F&auml;llen beruht die Verarbeitung auf unserem berechtigten Interesse an der effektiven\n      Bearbeitung der an uns gerichteten Anfragen (Art. 6 Abs. 1 lit. f DSGVO) oder auf Ihrer\n      Einwilligung (Art. 6 Abs. 1 lit. a DSGVO) sofern diese abgefragt wurde; die Einwilligung ist\n      jederzeit widerrufbar.\n    \n    \n      Die von Ihnen im Kontaktformular eingegebenen Daten verbleiben bei uns, bis Sie uns zur\n      L&ouml;schung auffordern, Ihre Einwilligung zur Speicherung widerrufen oder der Zweck f&uuml;r\n      die Datenspeicherung entf&auml;llt (z.&nbsp;B. nach abgeschlossener Bearbeitung Ihrer\n      Anfrage). Zwingende gesetzliche Bestimmungen &ndash; insbesondere Aufbewahrungsfristen &ndash;\n      bleiben unber&uuml;hrt.\n    \n    Quelle: https://www.e-recht24.de\n  \n\n\n    \n\n    \n                \n                    ./privacy-policy.component.scss\n                \n                .privacyPolicyContainer {\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n}\n\n.sidebarContnentContainer {\n  display: none;\n}\n\n.privacyPolicyContent {\n  background-color: #f6f7f8;\n  width: 100vw;\n  font-weight: bold;\n  padding: 32px;\n  overflow-y: auto;\n  margin-top: 10vh;\n}\n\n.headerContainer {\n  box-shadow: 0px 5px 5px rgba(0, 0, 0, 0.1);\n  height: 10vh;\n  width: 100%;\n  position: absolute;\n  top: 0;\n  background-color: #ffffff;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  z-index: 3;\n}\n\n.iconContainerHeader {\n  margin-left: 16px;\n  display: block;\n}\n\n.initialsContainer {\n  width: 40px;\n  height: 40px;\n  border: 2px solid #2a3647;\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-right: 16px;\n}\n\n.initials {\n  font-weight: bold;\n  color: #29abe2;\n  text-decoration: none;\n}\n\n.linkContainer {\n  background-color: #2a3647;\n  inset: 56px 4px auto auto !important;\n  border-top-left-radius: 20px;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  transform: none !important;\n}\n\n.link {\n  color: #ffffff;\n}\n\n.link:hover {\n  background-color: #091931;\n  border-radius: 10px;\n}\n\n.headerText {\n  display: none;\n}\n\n@media (min-width: 1025px) {\n  .sidebarContnentContainer {\n    background-color: #2a3647;\n    height: 100%;\n    width: 15vw;\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n  }\n\n  .iconContainerSidebar {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding-top: 8px;\n    padding-bottom: 8px;\n    margin-top: 40px;\n    width: 15vw;\n  }\n\n  .privacyPolicyContent {\n    width: 85vw;\n  }\n\n  .boardIcon {\n    padding-right: 16px;\n  }\n\n  .iconText {\n    color: white;\n    font-weight: 500;\n    margin-left: 10px;\n  }\n\n  .hoverSidebarIcons:hover {\n    background-color: #091931;\n    cursor: pointer;\n  }\n\n  .activeRouteIconSidebar {\n    background-color: #091931 !important;\n  }\n\n  .logoContainer {\n    height: 30vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .allIconsContainer {\n    height: 55vh;\n    display: flex;\n    flex-direction: column;\n    width: 15vw;\n  }\n\n  .imprintContainer {\n    height: 10vh;\n    color: #ffffff;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-evenly;\n  }\n\n  .imprintLink {\n    cursor: pointer;\n  }\n\n  .imprintLink:hover {\n    color: #29abe2;\n  }\n\n  .headerContainer {\n    width: 85vw;\n    right: 0;\n  }\n\n  .iconContainerHeader {\n    display: none;\n  }\n\n  .headerText {\n    display: block;\n    font-weight: 500;\n    margin-left: 48px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                          Kanban Project Management Tool                                                                                                                                                            Datenschutz­erklärung    1. Datenschutz auf einen Blick    Allgemeine Hinweise          Die folgenden Hinweise geben einen einfachen Überblick darüber, was mit Ihren      personenbezogenen Daten passiert, wenn Sie diese Website besuchen. Personenbezogene Daten sind      alle Daten, mit denen Sie persönlich identifiziert werden können. Ausführliche      Informationen zum Thema Datenschutz entnehmen Sie unserer unter diesem Text aufgeführten      Datenschutzerklärung.        Datenerfassung auf dieser Website    Wer ist verantwortlich für die Datenerfassung auf dieser Website?          Die Datenverarbeitung auf dieser Website erfolgt durch den Websitebetreiber. Dessen      Kontaktdaten können Sie dem Abschnitt „Hinweis zur Verantwortlichen Stelle“      in dieser Datenschutzerklärung entnehmen.        Wie erfassen wir Ihre Daten?          Ihre Daten werden zum einen dadurch erhoben, dass Sie uns diese mitteilen. Hierbei kann es      sich z. B. um Daten handeln, die Sie in ein Kontaktformular eingeben.              Andere Daten werden automatisch oder nach Ihrer Einwilligung beim Besuch der Website durch      unsere IT-Systeme erfasst. Das sind vor allem technische Daten (z. B. Internetbrowser,      Betriebssystem oder Uhrzeit des Seitenaufrufs). Die Erfassung dieser Daten erfolgt      automatisch, sobald Sie diese Website betreten.        Wofür nutzen wir Ihre Daten?          Ein Teil der Daten wird erhoben, um eine fehlerfreie Bereitstellung der Website zu      gewährleisten. Andere Daten können zur Analyse Ihres Nutzerverhaltens verwendet      werden.        Welche Rechte haben Sie bezüglich Ihrer Daten?          Sie haben jederzeit das Recht, unentgeltlich Auskunft über Herkunft, Empfänger und      Zweck Ihrer gespeicherten personenbezogenen Daten zu erhalten. Sie haben außerdem ein      Recht, die Berichtigung oder Löschung dieser Daten zu verlangen. Wenn Sie eine      Einwilligung zur Datenverarbeitung erteilt haben, können Sie diese Einwilligung jederzeit      für die Zukunft widerrufen. Außerdem haben Sie das Recht, unter bestimmten      Umständen die Einschränkung der Verarbeitung Ihrer personenbezogenen Daten zu      verlangen. Des Weiteren steht Ihnen ein Beschwerderecht bei der zuständigen      Aufsichtsbehörde zu.              Hierzu sowie zu weiteren Fragen zum Thema Datenschutz können Sie sich jederzeit an uns      wenden.        2. Hosting    Wir hosten die Inhalte unserer Website bei folgendem Anbieter:    All-Inkl          Anbieter ist die ALL-INKL.COM - Neue Medien Münnich, Inh. René Münnich,      Hauptstraße 68, 02742 Friedersdorf (nachfolgend All-Inkl). Details entnehmen Sie der      Datenschutzerklärung von All-Inkl:      https://all-inkl.com/datenschutzinformationen/.              Die Verwendung von All-Inkl erfolgt auf Grundlage von Art. 6 Abs. 1 lit. f DSGVO. Wir haben      ein berechtigtes Interesse an einer möglichst zuverlässigen Darstellung unserer      Website. Sofern eine entsprechende Einwilligung abgefragt wurde, erfolgt die Verarbeitung      ausschließlich auf Grundlage von Art. 6 Abs. 1 lit. a DSGVO und § 25 Abs. 1 TTDSG,      soweit die Einwilligung die Speicherung von Cookies oder den Zugriff auf Informationen im      Endgerät des Nutzers (z. B. Device-Fingerprinting) im Sinne des TTDSG umfasst. Die      Einwilligung ist jederzeit widerrufbar.        3. Allgemeine Hinweise und Pflicht­informationen    Datenschutz          Die Betreiber dieser Seiten nehmen den Schutz Ihrer persönlichen Daten sehr ernst. Wir      behandeln Ihre personenbezogenen Daten vertraulich und entsprechend den gesetzlichen      Datenschutzvorschriften sowie dieser Datenschutzerklärung.              Wenn Sie diese Website benutzen, werden verschiedene personenbezogene Daten erhoben.      Personenbezogene Daten sind Daten, mit denen Sie persönlich identifiziert werden      können. Die vorliegende Datenschutzerklärung erläutert, welche Daten wir      erheben und wofür wir sie nutzen. Sie erläutert auch, wie und zu welchem Zweck das      geschieht.              Wir weisen darauf hin, dass die Datenübertragung im Internet (z. B. bei der      Kommunikation per E-Mail) Sicherheitslücken aufweisen kann. Ein lückenloser Schutz      der Daten vor dem Zugriff durch Dritte ist nicht möglich.        Hinweis zur verantwortlichen Stelle    Die verantwortliche Stelle für die Datenverarbeitung auf dieser Website ist:          Fabian Dürr      Haubenschloßstr. 13      87435 Kempten              Telefon: +49 (0) 15172536808      E-Mail: fabianduerr@web.de              Verantwortliche Stelle ist die natürliche oder juristische Person, die allein oder      gemeinsam mit anderen über die Zwecke und Mittel der Verarbeitung von personenbezogenen      Daten (z. B. Namen, E-Mail-Adressen o. Ä.) entscheidet.        Speicherdauer          Soweit innerhalb dieser Datenschutzerklärung keine speziellere Speicherdauer genannt      wurde, verbleiben Ihre personenbezogenen Daten bei uns, bis der Zweck für die      Datenverarbeitung entfällt. Wenn Sie ein berechtigtes Löschersuchen geltend machen      oder eine Einwilligung zur Datenverarbeitung widerrufen, werden Ihre Daten gelöscht,      sofern wir keine anderen rechtlich zulässigen Gründe für die Speicherung Ihrer      personenbezogenen Daten haben (z. B. steuer- oder handelsrechtliche      Aufbewahrungsfristen); im letztgenannten Fall erfolgt die Löschung nach Fortfall dieser      Gründe.        Allgemeine Hinweise zu den Rechtsgrundlagen der Datenverarbeitung auf dieser Website          Sofern Sie in die Datenverarbeitung eingewilligt haben, verarbeiten wir Ihre personenbezogenen      Daten auf Grundlage von Art. 6 Abs. 1 lit. a DSGVO bzw. Art. 9 Abs. 2 lit. a DSGVO, sofern      besondere Datenkategorien nach Art. 9 Abs. 1 DSGVO verarbeitet werden. Im Falle einer      ausdrücklichen Einwilligung in die Übertragung personenbezogener Daten in      Drittstaaten erfolgt die Datenverarbeitung außerdem auf Grundlage von Art. 49 Abs. 1      lit. a DSGVO. Sofern Sie in die Speicherung von Cookies oder in den Zugriff auf Informationen      in Ihr Endgerät (z. B. via Device-Fingerprinting) eingewilligt haben, erfolgt die      Datenverarbeitung zusätzlich auf Grundlage von § 25 Abs. 1 TTDSG. Die Einwilligung      ist jederzeit widerrufbar. Sind Ihre Daten zur Vertragserfüllung oder zur      Durchführung vorvertraglicher Maßnahmen erforderlich, verarbeiten wir Ihre Daten      auf Grundlage des Art. 6 Abs. 1 lit. b DSGVO. Des Weiteren verarbeiten wir Ihre Daten, sofern      diese zur Erfüllung einer rechtlichen Verpflichtung erforderlich sind auf Grundlage von      Art. 6 Abs. 1 lit. c DSGVO. Die Datenverarbeitung kann ferner auf Grundlage unseres      berechtigten Interesses nach Art. 6 Abs. 1 lit. f DSGVO erfolgen. Über die jeweils im      Einzelfall einschlägigen Rechtsgrundlagen wird in den folgenden Absätzen dieser      Datenschutzerklärung informiert.        Empfänger von personenbezogenen Daten          Im Rahmen unserer Geschäftstätigkeit arbeiten wir mit verschiedenen externen Stellen      zusammen. Dabei ist teilweise auch eine Übermittlung von personenbezogenen Daten an diese      externen Stellen erforderlich. Wir geben personenbezogene Daten nur dann an externe Stellen      weiter, wenn dies im Rahmen einer Vertragserfüllung erforderlich ist, wenn wir gesetzlich      hierzu verpflichtet sind (z. B. Weitergabe von Daten an Steuerbehörden), wenn wir      ein berechtigtes Interesse nach Art. 6 Abs. 1 lit. f DSGVO an der Weitergabe haben oder wenn      eine sonstige Rechtsgrundlage die Datenweitergabe erlaubt. Beim Einsatz von      Auftragsverarbeitern geben wir personenbezogene Daten unserer Kunden nur auf Grundlage eines      gültigen Vertrags über Auftragsverarbeitung weiter. Im Falle einer gemeinsamen      Verarbeitung wird ein Vertrag über gemeinsame Verarbeitung geschlossen.        Widerruf Ihrer Einwilligung zur Datenverarbeitung          Viele Datenverarbeitungsvorgänge sind nur mit Ihrer ausdrücklichen Einwilligung      möglich. Sie können eine bereits erteilte Einwilligung jederzeit widerrufen. Die      Rechtmäßigkeit der bis zum Widerruf erfolgten Datenverarbeitung bleibt vom Widerruf      unberührt.              Widerspruchsrecht gegen die Datenerhebung in besonderen Fällen sowie gegen Direktwerbung      (Art. 21 DSGVO)              WENN DIE DATENVERARBEITUNG AUF GRUNDLAGE VON ART. 6 ABS. 1 LIT. E ODER F DSGVO ERFOLGT, HABEN      SIE JEDERZEIT DAS RECHT, AUS GRÜNDEN, DIE SICH AUS IHRER BESONDEREN SITUATION ERGEBEN,      GEGEN DIE VERARBEITUNG IHRER PERSONENBEZOGENEN DATEN WIDERSPRUCH EINZULEGEN; DIES GILT AUCH      FÜR EIN AUF DIESE BESTIMMUNGEN GESTÜTZTES PROFILING. DIE JEWEILIGE RECHTSGRUNDLAGE,      AUF DENEN EINE VERARBEITUNG BERUHT, ENTNEHMEN SIE DIESER DATENSCHUTZERKLÄRUNG. WENN SIE      WIDERSPRUCH EINLEGEN, WERDEN WIR IHRE BETROFFENEN PERSONENBEZOGENEN DATEN NICHT MEHR      VERARBEITEN, ES SEI DENN, WIR KÖNNEN ZWINGENDE SCHUTZWÜRDIGE GRÜNDE FÜR      DIE VERARBEITUNG NACHWEISEN, DIE IHRE INTERESSEN, RECHTE UND FREIHEITEN ÜBERWIEGEN ODER      DIE VERARBEITUNG DIENT DER GELTENDMACHUNG, AUSÜBUNG ODER VERTEIDIGUNG VON      RECHTSANSPRÜCHEN (WIDERSPRUCH NACH ART. 21 ABS. 1 DSGVO).              WERDEN IHRE PERSONENBEZOGENEN DATEN VERARBEITET, UM DIREKTWERBUNG ZU BETREIBEN, SO HABEN SIE      DAS RECHT, JEDERZEIT WIDERSPRUCH GEGEN DIE VERARBEITUNG SIE BETREFFENDER PERSONENBEZOGENER      DATEN ZUM ZWECKE DERARTIGER WERBUNG EINZULEGEN; DIES GILT AUCH FÜR DAS PROFILING, SOWEIT      ES MIT SOLCHER DIREKTWERBUNG IN VERBINDUNG STEHT. WENN SIE WIDERSPRECHEN, WERDEN IHRE      PERSONENBEZOGENEN DATEN ANSCHLIESSEND NICHT MEHR ZUM ZWECKE DER DIREKTWERBUNG VERWENDET      (WIDERSPRUCH NACH ART. 21 ABS. 2 DSGVO).        Beschwerde­recht bei der zuständigen Aufsichts­behörde          Im Falle von Verstößen gegen die DSGVO steht den Betroffenen ein Beschwerderecht      bei einer Aufsichtsbehörde, insbesondere in dem Mitgliedstaat ihres gewöhnlichen      Aufenthalts, ihres Arbeitsplatzes oder des Orts des mutmaßlichen Verstoßes zu. Das      Beschwerderecht besteht unbeschadet anderweitiger verwaltungsrechtlicher oder gerichtlicher      Rechtsbehelfe.        Recht auf Daten­übertrag­barkeit          Sie haben das Recht, Daten, die wir auf Grundlage Ihrer Einwilligung oder in Erfüllung      eines Vertrags automatisiert verarbeiten, an sich oder an einen Dritten in einem      gängigen, maschinenlesbaren Format aushändigen zu lassen. Sofern Sie die direkte      Übertragung der Daten an einen anderen Verantwortlichen verlangen, erfolgt dies nur,      soweit es technisch machbar ist.        Auskunft, Berichtigung und Löschung          Sie haben im Rahmen der geltenden gesetzlichen Bestimmungen jederzeit das Recht auf      unentgeltliche Auskunft über Ihre gespeicherten personenbezogenen Daten, deren Herkunft      und Empfänger und den Zweck der Datenverarbeitung und ggf. ein Recht auf Berichtigung      oder Löschung dieser Daten. Hierzu sowie zu weiteren Fragen zum Thema personenbezogene      Daten können Sie sich jederzeit an uns wenden.        Recht auf Einschränkung der Verarbeitung          Sie haben das Recht, die Einschränkung der Verarbeitung Ihrer personenbezogenen Daten zu      verlangen. Hierzu können Sie sich jederzeit an uns wenden. Das Recht auf      Einschränkung der Verarbeitung besteht in folgenden Fällen:                      Wenn Sie die Richtigkeit Ihrer bei uns gespeicherten personenbezogenen Daten bestreiten,        benötigen wir in der Regel Zeit, um dies zu überprüfen. Für die Dauer        der Prüfung haben Sie das Recht, die Einschränkung der Verarbeitung Ihrer        personenbezogenen Daten zu verlangen.                    Wenn die Verarbeitung Ihrer personenbezogenen Daten unrechtmäßig        geschah/geschieht, können Sie statt der Löschung die Einschränkung der        Datenverarbeitung verlangen.                    Wenn wir Ihre personenbezogenen Daten nicht mehr benötigen, Sie sie jedoch zur        Ausübung, Verteidigung oder Geltendmachung von Rechtsansprüchen benötigen,        haben Sie das Recht, statt der Löschung die Einschränkung der Verarbeitung Ihrer        personenbezogenen Daten zu verlangen.                    Wenn Sie einen Widerspruch nach Art. 21 Abs. 1 DSGVO eingelegt haben, muss eine        Abwägung zwischen Ihren und unseren Interessen vorgenommen werden. Solange noch nicht        feststeht, wessen Interessen überwiegen, haben Sie das Recht, die Einschränkung        der Verarbeitung Ihrer personenbezogenen Daten zu verlangen.                    Wenn Sie die Verarbeitung Ihrer personenbezogenen Daten eingeschränkt haben, dürfen      diese Daten – von ihrer Speicherung abgesehen – nur mit Ihrer Einwilligung oder      zur Geltendmachung, Ausübung oder Verteidigung von Rechtsansprüchen oder zum Schutz      der Rechte einer anderen natürlichen oder juristischen Person oder aus Gründen eines      wichtigen öffentlichen Interesses der Europäischen Union oder eines Mitgliedstaats      verarbeitet werden.        SSL- bzw. TLS-Verschlüsselung          Diese Seite nutzt aus Sicherheitsgründen und zum Schutz der Übertragung      vertraulicher Inhalte, wie zum Beispiel Bestellungen oder Anfragen, die Sie an uns als      Seitenbetreiber senden, eine SSL- bzw. TLS-Verschlüsselung. Eine verschlüsselte      Verbindung erkennen Sie daran, dass die Adresszeile des Browsers von „http://“ auf      „https://“ wechselt und an dem Schloss-Symbol in Ihrer Browserzeile.              Wenn die SSL- bzw. TLS-Verschlüsselung aktiviert ist, können die Daten, die Sie an      uns übermitteln, nicht von Dritten mitgelesen werden.        4. Datenerfassung auf dieser Website    Kontaktformular          Wenn Sie uns per Kontaktformular Anfragen zukommen lassen, werden Ihre Angaben aus dem      Anfrageformular inklusive der von Ihnen dort angegebenen Kontaktdaten zwecks Bearbeitung der      Anfrage und für den Fall von Anschlussfragen bei uns gespeichert. Diese Daten geben wir      nicht ohne Ihre Einwilligung weiter.              Die Verarbeitung dieser Daten erfolgt auf Grundlage von Art. 6 Abs. 1 lit. b DSGVO, sofern      Ihre Anfrage mit der Erfüllung eines Vertrags zusammenhängt oder zur      Durchführung vorvertraglicher Maßnahmen erforderlich ist. In allen übrigen      Fällen beruht die Verarbeitung auf unserem berechtigten Interesse an der effektiven      Bearbeitung der an uns gerichteten Anfragen (Art. 6 Abs. 1 lit. f DSGVO) oder auf Ihrer      Einwilligung (Art. 6 Abs. 1 lit. a DSGVO) sofern diese abgefragt wurde; die Einwilligung ist      jederzeit widerrufbar.              Die von Ihnen im Kontaktformular eingegebenen Daten verbleiben bei uns, bis Sie uns zur      Löschung auffordern, Ihre Einwilligung zur Speicherung widerrufen oder der Zweck für      die Datenspeicherung entfällt (z. B. nach abgeschlossener Bearbeitung Ihrer      Anfrage). Zwingende gesetzliche Bestimmungen – insbesondere Aufbewahrungsfristen –      bleiben unberührt.        Quelle: https://www.e-recht24.de  '\n    var COMPONENTS = [{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'BoardTaskOverlayComponent', 'selector': 'app-board-task-overlay'},{'name': 'ContactsAddComponent', 'selector': 'app-contacts-add'},{'name': 'ContactsEditComponent', 'selector': 'app-contacts-edit'},{'name': 'ContactsOverviewComponent', 'selector': 'app-contacts-overview'},{'name': 'ContactsViewComponent', 'selector': 'app-contacts-view'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'FooterBarComponent', 'selector': 'app-footer-bar'},{'name': 'HeaderBarMobileComponent', 'selector': 'app-header-bar-mobile'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'SummaryComponent', 'selector': 'app-summary'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PrivacyPolicyComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetPasswordComponent.html":{"url":"components/ResetPasswordComponent.html","title":"component - ResetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ResetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/reset-password/reset-password.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reset-password\n            \n\n\n\n            \n                styleUrls\n                ./reset-password.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./reset-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.scss'],\n})\nexport class ResetPasswordComponent {}\n\n    \n\n    \n        reset-password works!\n\n    \n\n    \n                \n                    ./reset-password.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'reset-password works!'\n    var COMPONENTS = [{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'BoardTaskOverlayComponent', 'selector': 'app-board-task-overlay'},{'name': 'ContactsAddComponent', 'selector': 'app-contacts-add'},{'name': 'ContactsEditComponent', 'selector': 'app-contacts-edit'},{'name': 'ContactsOverviewComponent', 'selector': 'app-contacts-overview'},{'name': 'ContactsViewComponent', 'selector': 'app-contacts-view'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'FooterBarComponent', 'selector': 'app-footer-bar'},{'name': 'HeaderBarMobileComponent', 'selector': 'app-header-bar-mobile'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'SummaryComponent', 'selector': 'app-summary'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ScreenSizeService.html":{"url":"injectables/ScreenSizeService.html","title":"injectable - ScreenSizeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ScreenSizeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/screen-size.service.ts\n        \n\n\n            \n                Description\n            \n            \n                ScreenSizeService provides an observable to detect screen size changes,\nspecifically for identifying handset or tablet devices based on custom breakpoints.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handsetOrTabletBreakpoints\n                            \n                            \n                                isHandsetOrTablet$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(breakpointObserver: BreakpointObserver)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/screen-size.service.ts:29\n                            \n                        \n\n                \n                    \n                            Constructor to inject the BreakpointObserver, which observes screen size changes.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        breakpointObserver\n                                                  \n                                                        \n                                                                    BreakpointObserver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAngular CDK BreakpointObserver for monitoring screen size.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handsetOrTabletBreakpoints\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    Breakpoints.Handset,\n    '(max-width: 1024px)',\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/services/screen-size.service.ts:17\n                        \n                    \n\n            \n                \n                    Custom breakpoints that define handset or tablet screen sizes.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isHandsetOrTablet$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.breakpointObserver\n    .observe(this.handsetOrTabletBreakpoints)\n    .pipe(map((state: BreakpointState) => state.matches))\n                    \n                \n                    \n                        \n                                Defined in src/app/services/screen-size.service.ts:27\n                        \n                    \n\n            \n                \n                    Observable that emits a boolean indicating if the screen size matches\nthe handset or tablet breakpoints.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n/**\n * ScreenSizeService provides an observable to detect screen size changes,\n * specifically for identifying handset or tablet devices based on custom breakpoints.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ScreenSizeService {\n\n  /** Custom breakpoints that define handset or tablet screen sizes. */\n  private handsetOrTabletBreakpoints = [\n    Breakpoints.Handset,\n    '(max-width: 1024px)',\n  ];\n\n\n  /**\n   * Observable that emits a boolean indicating if the screen size matches\n   * the handset or tablet breakpoints.\n   */\n  isHandsetOrTablet$: Observable = this.breakpointObserver\n    .observe(this.handsetOrTabletBreakpoints)\n    .pipe(map((state: BreakpointState) => state.matches));\n\n\n    /**\n   * Constructor to inject the BreakpointObserver, which observes screen size changes.\n   * @param breakpointObserver - Angular CDK BreakpointObserver for monitoring screen size.\n   */\n  constructor(private breakpointObserver: BreakpointObserver) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarComponent.html":{"url":"components/SidebarComponent.html","title":"component - SidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/sidebar/sidebar.component.ts\n\n\n\n    \n        Description\n    \n    \n        SidebarComponent manages the sidebar navigation and highlights the active page.\nIt includes navigation methods to various sections and external links.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidebar\n            \n\n\n\n            \n                styleUrls\n                ./sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isAddTaskPage\n                            \n                            \n                                isBoardPage\n                            \n                            \n                                isContactsPage\n                            \n                            \n                                isSummaryPage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToAddtask\n                            \n                            \n                                goToBoard\n                            \n                            \n                                goToContacts\n                            \n                            \n                                goToLegal\n                            \n                            \n                                goToPolicy\n                            \n                            \n                                goToSummary\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                resetPageFlags\n                            \n                            \n                                    Private\n                                setPageFlag\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/sidebar/sidebar.component.ts:26\n                            \n                        \n\n                \n                    \n                            Constructor that injects the Angular Router for navigation.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nRouter for navigation and monitoring route changes.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goToAddtask\n                        \n                    \n                \n            \n            \n                \ngoToAddtask()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/sidebar/sidebar.component.ts:87\n                        \n                    \n\n\n            \n                \n                        Navigates to the Add Task page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToBoard\n                        \n                    \n                \n            \n            \n                \ngoToBoard()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/sidebar/sidebar.component.ts:93\n                        \n                    \n\n\n            \n                \n                        Navigates to the Board page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToContacts\n                        \n                    \n                \n            \n            \n                \ngoToContacts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/sidebar/sidebar.component.ts:75\n                        \n                    \n\n\n            \n                \n                        Navigates to the Contacts page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToLegal\n                        \n                    \n                \n            \n            \n                \ngoToLegal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/sidebar/sidebar.component.ts:105\n                        \n                    \n\n\n            \n                \n                        Opens the Legal Notice page in a new tab.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToPolicy\n                        \n                    \n                \n            \n            \n                \ngoToPolicy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/sidebar/sidebar.component.ts:99\n                        \n                    \n\n\n            \n                \n                        Opens the Privacy Policy page in a new tab.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToSummary\n                        \n                    \n                \n            \n            \n                \ngoToSummary()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/sidebar/sidebar.component.ts:81\n                        \n                    \n\n\n            \n                \n                        Navigates to the Summary page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/sidebar/sidebar.component.ts:40\n                        \n                    \n\n\n            \n                \n                        Initializes the component by subscribing to router events\nto set the active page and update page flags.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resetPageFlags\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetPageFlags()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/sidebar/sidebar.component.ts:54\n                        \n                    \n\n\n            \n                \n                        Resets all page flags to false, called before setting the active page flag.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setPageFlag\n                        \n                    \n                \n            \n            \n                \n                        \n                    setPageFlag(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/sidebar/sidebar.component.ts:66\n                        \n                    \n\n\n            \n                \n                        Sets the appropriate page flag to true based on the current URL.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe current URL to determine the active page.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isAddTaskPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/sidebar/sidebar.component.ts:23\n                        \n                    \n\n            \n                \n                    Indicates if the Add Task page is currently active.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isBoardPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/sidebar/sidebar.component.ts:20\n                        \n                    \n\n            \n                \n                    Indicates if the Board page is currently active.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isContactsPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/sidebar/sidebar.component.ts:26\n                        \n                    \n\n            \n                \n                    Indicates if the Contacts page is currently active.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSummaryPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/sidebar/sidebar.component.ts:17\n                        \n                    \n\n            \n                \n                    Indicates if the Summary page is currently active.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router, NavigationEnd, Event as RouterEvent } from '@angular/router';\n\n\n/**\n * SidebarComponent manages the sidebar navigation and highlights the active page.\n * It includes navigation methods to various sections and external links.\n */\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss'],\n})\nexport class SidebarComponent implements OnInit {\n\n  /** Indicates if the Summary page is currently active. */\n  isSummaryPage: boolean = false;\n\n  /** Indicates if the Board page is currently active. */\n  isBoardPage: boolean = false;\n\n  /** Indicates if the Add Task page is currently active. */\n  isAddTaskPage: boolean = false;\n\n  /** Indicates if the Contacts page is currently active. */\n  isContactsPage: boolean = false;\n\n\n    /**\n   * Constructor that injects the Angular Router for navigation.\n   * @param router - Router for navigation and monitoring route changes.\n   */\n  constructor(private router: Router) {}\n\n\n    /**\n   * Initializes the component by subscribing to router events\n   * to set the active page and update page flags.\n   */\n  ngOnInit() {\n    this.router.events.subscribe(event => {\n      if (event instanceof NavigationEnd) {\n        this.resetPageFlags();\n        this.setPageFlag(event.urlAfterRedirects);\n      }\n    });\n    this.setPageFlag(this.router.url);\n  }\n\n\n    /**\n   * Resets all page flags to false, called before setting the active page flag.\n   */\n  private resetPageFlags() {\n    this.isSummaryPage = false;\n    this.isBoardPage = false;\n    this.isAddTaskPage = false;\n    this.isContactsPage = false;\n  }\n\n\n    /**\n   * Sets the appropriate page flag to true based on the current URL.\n   * @param url - The current URL to determine the active page.\n   */\n  private setPageFlag(url: string) {\n    this.isSummaryPage = url.includes('/summary');\n    this.isBoardPage = url.includes('/board');\n    this.isAddTaskPage = url.includes('/addtask');\n    this.isContactsPage = url.includes('/contacts');\n  }\n\n\n    /** Navigates to the Contacts page. */\n  goToContacts() {\n    this.router.navigate(['/contacts']);\n  }\n\n\n    /** Navigates to the Summary page. */\n  goToSummary() {\n    this.router.navigate(['/summary']);\n  }\n\n\n    /** Navigates to the Add Task page. */\n  goToAddtask() {\n    this.router.navigate(['/addtask']);\n  }\n\n\n    /** Navigates to the Board page. */\n  goToBoard() {\n    this.router.navigate(['/board']);\n  }\n\n\n    /** Opens the Privacy Policy page in a new tab. */\n  goToPolicy() {\n    window.open('/privacy-policy', '_blank');\n  }\n\n\n    /** Opens the Legal Notice page in a new tab. */\n  goToLegal() {\n    window.open('/legal-notice', '_blank');\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        \n        \n        \n        \n        \n      \n      \n        \n          \n        \n      \n    \n  \n  \n    \n      \n        \n          \n        \n      \n      Summary\n    \n    \n      \n        \n          \n          \n        \n      \n      Board\n    \n    \n      \n        \n          \n            \n          \n          \n            \n          \n        \n      \n      Add Task\n    \n    \n      \n        \n          \n            \n          \n          \n            \n          \n        \n      \n      Contacts\n    \n  \n  \n    Privacy Policy\n    Legal Notice\n  \n\n\n    \n\n    \n                \n                    ./sidebar.component.scss\n                \n                .sidebarContnentContainer {\n  background-color: #2a3647;\n  height: 100vh;\n  width: 15vw;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n}\n\n.iconContainerSidebar {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  margin-top: 40px;\n  width: 15vw;\n}\n\n.boardIcon {\n  padding-right: 16px;\n}\n\n.iconText {\n  color: white;\n  font-weight: 500;\n  margin-left: 10px;\n}\n\n.hoverSidebarIcons:hover {\n  background-color: #091931;\n  cursor: pointer;\n}\n\n.activeRouteIconSidebar {\n  background-color: #091931 !important;\n}\n\n.logoContainer {\n  height: 30vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.logo {\n  cursor: pointer;\n}\n\n.allIconsContainer {\n  height: 55vh;\n  display: flex;\n  flex-direction: column;\n  width: 15vw;\n}\n\n.imprintContainer {\n  height: 10vh;\n  color: #ffffff;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n}\n\n.imprintLink {\n  cursor: pointer;\n}\n\n.imprintLink:hover {\n  color: #29abe2;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                Summary                                                              Board                                                                                                          Add Task                                                                                                          Contacts            Privacy Policy    Legal Notice  '\n    var COMPONENTS = [{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'BoardTaskOverlayComponent', 'selector': 'app-board-task-overlay'},{'name': 'ContactsAddComponent', 'selector': 'app-contacts-add'},{'name': 'ContactsEditComponent', 'selector': 'app-contacts-edit'},{'name': 'ContactsOverviewComponent', 'selector': 'app-contacts-overview'},{'name': 'ContactsViewComponent', 'selector': 'app-contacts-view'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'FooterBarComponent', 'selector': 'app-footer-bar'},{'name': 'HeaderBarMobileComponent', 'selector': 'app-header-bar-mobile'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'SummaryComponent', 'selector': 'app-summary'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignUpComponent.html":{"url":"components/SignUpComponent.html","title":"component - SignUpComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SignUpComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/sign-up/sign-up.component.ts\n\n\n\n    \n        Description\n    \n    \n        SignUpComponent handles user registration, including form validation,\npassword visibility toggling, and submission to the server.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sign-up\n            \n\n\n\n            \n                styleUrls\n                ./sign-up.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sign-up.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                passwordVisible\n                            \n                            \n                                signupSuccess\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToLogIn\n                            \n                            \n                                onSubmit\n                            \n                            \n                                passwordsMatch\n                            \n                            \n                                togglePasswordVisibility\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userRegistrationService: UserRegistrationService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/sign-up/sign-up.component.ts:32\n                            \n                        \n\n                \n                    \n                            Constructor to inject the UserRegistrationService and Router for navigation.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userRegistrationService\n                                                  \n                                                        \n                                                                        UserRegistrationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService to handle user registration.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nRouter to navigate after registration.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goToLogIn\n                        \n                    \n                \n            \n            \n                \ngoToLogIn()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/sign-up/sign-up.component.ts:94\n                        \n                    \n\n\n            \n                \n                        Navigates to the Summary page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/sign-up/sign-up.component.ts:50\n                        \n                    \n\n\n            \n                \n                        Submits the signup form if the privacy policy is accepted.\nOn successful registration, navigates to the login page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordsMatch\n                        \n                    \n                \n            \n            \n                \npasswordsMatch()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/sign-up/sign-up.component.ts:88\n                        \n                    \n\n\n            \n                \n                        Checks if the password and confirm password fields match.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                Boolean indicating if passwords match.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        togglePasswordVisibility\n                        \n                    \n                \n            \n            \n                \ntogglePasswordVisibility()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/sign-up/sign-up.component.ts:79\n                        \n                    \n\n\n            \n                \n                        Toggles the visibility of the password field.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        passwordVisible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/sign-up/sign-up.component.ts:32\n                        \n                    \n\n            \n                \n                    Controls the visibility of the password field.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signupSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/sign-up/sign-up.component.ts:20\n                        \n                    \n\n            \n                \n                    Indicates if the signup was successful, used to show success message.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    name: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n    acceptsPrivacyPolicy: false,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/sign-up/sign-up.component.ts:23\n                        \n                    \n\n            \n                \n                    Object to hold user registration data.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { UserRegistrationService } from 'src/app/services/auth.service';\nimport { Router } from '@angular/router';\n\n\n/**\n * SignUpComponent handles user registration, including form validation,\n * password visibility toggling, and submission to the server.\n */\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.scss'],\n})\nexport class SignUpComponent {\n\n\n    /** Indicates if the signup was successful, used to show success message. */\n  signupSuccess = false;\n\n  /** Object to hold user registration data. */\n  user = {\n    name: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n    acceptsPrivacyPolicy: false,\n  };\n\n    /** Controls the visibility of the password field. */\n  passwordVisible: boolean = false;\n\n\n    /**\n   * Constructor to inject the UserRegistrationService and Router for navigation.\n   * @param userRegistrationService - Service to handle user registration.\n   * @param router - Router to navigate after registration.\n   */\n  constructor(\n    private userRegistrationService: UserRegistrationService,\n    private router: Router,\n  ) {}\n\n\n    /**\n   * Submits the signup form if the privacy policy is accepted.\n   * On successful registration, navigates to the login page.\n   */\n  onSubmit(): void {\n    if (this.user.acceptsPrivacyPolicy) {\n      const userDataToSend = {\n        name: this.user.name, \n        email: this.user.email,\n        password: this.user.password,\n        confirmPassword: this.user.confirmPassword,\n      };\n\n      this.userRegistrationService.registerUser(userDataToSend).subscribe({\n        next: response => {\n          this.signupSuccess = true;\n          setTimeout(() => {\n            this.router.navigate(['/login']);\n          }, 3000);\n        },\n        error: error => {\n          console.error('There was an error!', error);\n          console.error('Error response body:', error.error);\n          console.error(`Error status: ${error.status}, Message: ${error.message}`);\n        },\n      });\n    } else {\n      console.error('Privacy policy not accepted');\n    }\n  }\n\n\n  /** Toggles the visibility of the password field. */\n  togglePasswordVisibility(): void {\n    this.passwordVisible = !this.passwordVisible;\n  }\n\n\n  /**\n   * Checks if the password and confirm password fields match.\n   * @returns Boolean indicating if passwords match.\n   */\n  passwordsMatch(): boolean {\n    return this.user.password === this.user.confirmPassword;\n  }\n\n\n    /** Navigates to the Summary page. */\n  goToLogIn(): void {\n    this.router.navigate(['/summary']);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n      \n      \n      \n      \n    \n  \n  \n    \n      Sign up\n      \n    \n\n    \n      \n        \n        \n        \n        \n        \n        \n      \n    \n\n    \n      \n        \n        Name\n      \n\n      \n        \n        Email\n      \n\n      \n        \n        Password\n        \n          \n        \n      \n\n      \n        \n        Confirm Password\n        \n          \n        \n        Wrong password! Try again.\n      \n\n      \n        \n        \n          I accept the Privacy policy\n        \n      \n\n      \n        You must accept the privacy policy to proceed.\n      \n\n      \n        Sign up\n      \n    \n\n    You Signed Up successfully\n  \n\n  \n    \n      Privacy Policy\n      Legal notice\n    \n  \n\n\n    \n\n    \n                \n                    ./sign-up.component.scss\n                \n                h1 {\n  display: flex;\n  justify-content: center;\n  margin: 16px;\n}\n\n.headlineContainer {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 16px;\n}\n\n.underline {\n  border-bottom: 3px solid;\n  border-color: #29abe2;\n  width: 60%;\n}\n\n.inputField {\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n}\n\n.inputContainer {\n  width: 90%;\n  display: flex;\n  align-items: center;\n  position: relative;\n}\n\n.h58 {\n  height: 56px;\n}\n\n.borderNone {\n  border: none !important;\n}\n\n.formContainer {\n  width: 100%;\n  height: 80%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n}\n\n.formInput {\n  background-image: url('/assets/img/mail.png');\n  background-repeat: no-repeat;\n  background-position: calc(100% - 18px);\n}\n\n.formInputName {\n  background-image: url('/assets/img/person.png');\n  background-repeat: no-repeat;\n  background-position: calc(100% - 18px);\n}\n\n.formInputPassword {\n  background-repeat: no-repeat;\n  background-position: right 10px center;\n  padding-right: 40px;\n}\n\n.loginContainer {\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  height: 100vh;\n}\n\n.logoContainer {\n  height: 20vh;\n  position: relative;\n  top: 16px;\n  width: calc(100% - 32px);\n}\n\n.logoContainerMobile {\n  display: none;\n}\n\n.mainContainer {\n  height: 80vh;\n  background-color: #ffffff;\n  width: min(652px, 90%);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n  border-radius: 30px;\n}\n\n.footerContainer {\n  height: 20vh;\n  width: 90vw;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  flex-direction: column;\n}\n\n.SignupFootercontainer {\n  flex-direction: row;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  width: 90vw;\n}\n\n.btn-toggle-visibility {\n  position: absolute;\n  height: 100%;\n  right: 0px;\n  border: none;\n  background: transparent;\n  cursor: pointer;\n}\n\n.checkboxContainer {\n  width: 80%;\n}\n\n.checkboxInput {\n  border-color: #2a3647;\n  border-width: 2px;\n  box-shadow: none;\n}\n\n.signedSuccessContainer {\n  position: fixed;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  background-color: #2a3647;\n  border-radius: 20px;\n  height: 72px;\n  width: min(652px, 80%);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  font-size: 1.25rem;\n  z-index: 3;\n  animation: slideInFromBottom 0.5s ease forwards;\n}\n\n.notJoin {\n  font-weight: 400;\n  font-size: 1.5rem;\n}\n\n.privacyLink {\n  color: #29abe2;\n  cursor: pointer;\n}\n\n.linkContainer {\n  flex-direction: row;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  width: 90vw;\n}\n\n.link {\n  cursor: pointer;\n}\n\n@media screen and (orientation: landscape) and (max-width: 1024px) {\n  .logoContainer {\n    display: none;\n  }\n\n  .logoContainerMobile {\n    display: block;\n    position: absolute;\n    top: 16px;\n    left: 16px;\n  }\n\n  .mainContainer {\n    height: 100vh;\n    width: 100vw;\n  }\n}\n\n@keyframes slideInFromBottom {\n  0% {\n    transform: translateY(100vh);\n    opacity: 0;\n  }\n  100% {\n    transform: translateY(0);\n    opacity: 1;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            Sign up                                                                                                        Name                            Email                            Password                                                      Confirm Password                                  Wrong password! Try again.                                      I accept the Privacy policy                            You must accept the privacy policy to proceed.                    Sign up              You Signed Up successfully              Privacy Policy      Legal notice      '\n    var COMPONENTS = [{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'BoardTaskOverlayComponent', 'selector': 'app-board-task-overlay'},{'name': 'ContactsAddComponent', 'selector': 'app-contacts-add'},{'name': 'ContactsEditComponent', 'selector': 'app-contacts-edit'},{'name': 'ContactsOverviewComponent', 'selector': 'app-contacts-overview'},{'name': 'ContactsViewComponent', 'selector': 'app-contacts-view'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'FooterBarComponent', 'selector': 'app-footer-bar'},{'name': 'HeaderBarMobileComponent', 'selector': 'app-header-bar-mobile'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'SummaryComponent', 'selector': 'app-summary'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignUpComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Subtask.html":{"url":"interfaces/Subtask.html","title":"interface - Subtask","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Subtask\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/subtask.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a subtask with optional ID, text, and completion status.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            completed\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        completed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        completed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Boolean indicating if the subtask is completed.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Unique identifier for the subtask.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Text description of the subtask.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\n\n\n/**\n * Interface representing a subtask with optional ID, text, and completion status.\n */\nexport interface Subtask {\n\n  /** Unique identifier for the subtask. */\n  id?: number; \n\n  /** Text description of the subtask. */\n  text: string;\n\n  /** Boolean indicating if the subtask is completed. */\n  completed: boolean;\n}\n\n\n/**\n * SubtaskService provides methods to create, retrieve, update, and delete subtasks.\n * It communicates with the server API and handles any HTTP errors that occur during requests.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class SubtaskService {\n\n  /** Base URL for the subtasks API. */\n  private apiUrl = `${environment.apiUrl}/subtasks/`;\n\n\n  /**\n   * Constructor to inject HttpClient for making HTTP requests.\n   * @param http - HttpClient instance for handling HTTP requests.\n   */\n  constructor(private http: HttpClient) {}\n\n\n    /**\n   * Retrieves the list of all subtasks from the server.\n   * @returns An Observable that emits an array of Subtask objects.\n   */\n  getSubtasks(): Observable {\n    return this.http.get(this.apiUrl).pipe(catchError(this.handleError));\n  }\n\n\n  /**\n   * Retrieves a specific subtask by ID.\n   * @param id - The ID of the subtask to retrieve.\n   * @returns An Observable that emits the requested Subtask.\n   */\n  getSubtask(id: number): Observable {\n    return this.http.get(`${this.apiUrl}/${id}`).pipe(catchError(this.handleError));\n  }\n\n\n    /**\n   * Creates a new subtask on the server.\n   * @param subtask - The Subtask object to create.\n   * @returns An Observable that emits the created Subtask.\n   */\n  createSubtask(subtask: Subtask): Observable {\n    return this.http.post(this.apiUrl, subtask).pipe(\n      catchError(error => {\n        console.error('Error creating subtask:', error);\n        return throwError(() => new Error('Error creating subtask'));\n      }),\n    );\n  }\n\n\n    /**\n   * Updates an existing subtask by its ID.\n   * @param id - The ID of the subtask to update.\n   * @param subtask - The updated Subtask object.\n   * @returns An Observable that emits the updated Subtask.\n   */\n  updateSubtask(id: number, subtask: Subtask): Observable {\n    const url = `${this.apiUrl.replace(/\\/+$/, '')}/${id}/`; // Ensure trailing slash\n\n    return this.http.put(url, subtask).pipe(catchError(this.handleError));\n  }\n\n\n    /**\n   * Deletes a subtask by its ID.\n   * @param id - The ID of the subtask to delete.\n   * @returns An Observable that completes when the subtask is deleted.\n   */\n  deleteSubtask(id: number): Observable {\n    return this.http.delete(`${this.apiUrl}/${id}`).pipe(catchError(this.handleError));\n  }\n\n\n    /**\n   * Handles HTTP errors that occur during requests, logging error details to the console.\n   * @param error - The error response received.\n   * @returns An Observable that emits an error message.\n   */\n  private handleError(error: any) {\n    let errorMessage = 'An unknown error occurred!';\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = `Error: ${error.error.message}`;\n    } else {\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    console.error(errorMessage);\n    return throwError(errorMessage);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Subtask-1.html":{"url":"interfaces/Subtask-1.html","title":"interface - Subtask-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Subtask\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/task.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a subtask, with optional ID, text description, and completion status.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            completed\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        completed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        completed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Boolean indicating if the subtask is completed.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Unique identifier for the subtask.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Text description of the subtask.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\n\n\n/**\n * Interface representing a subtask, with optional ID, text description, and completion status.\n */\nexport interface Subtask {\n\n  /** Unique identifier for the subtask. */\n  id?: number;\n\n/** Text description of the subtask. */\n  text: string;\n\n  /** Boolean indicating if the subtask is completed. */\n  completed: boolean;\n}\n\n\n/**\n * Interface representing a task, with optional ID, title, priority, due date, category, and more.\n * Includes subtasks and contacts associated with the task.\n */\nexport interface Task {\n\n  /** Unique identifier for the task. */\n  id?: number;\n\n  /** Title of the task. */\n  title: string;\n\n  /** Optional description of the task. */\n  description?: string;\n\n  /** Priority level of the task (e.g., high, medium, low). */\n  priority: string;\n\n  /** Optional due date for the task, represented as a string. */\n  due_date?: string;\n\n  /** Optional ID of the category associated with the task. */\n  category?: number;\n\n  /** Array of user IDs assigned to the task. */\n  assigned_to: number[];\n\n  /** Array of subtasks associated with the task. */\n  subtasks: Subtask[];\n\n  /** Optional status of the task (e.g., todo, in progress, done). */\n  status?: string; \n\n  /** Array of contact IDs associated with the task. */\n  contacts: number[]; \n\n  /** Optional ID of the user who created the task. */\n  creator?: number; \n\n  /** Optional boolean to toggle the visibility of the status dropdown. */\n  showStatusDropdown?: boolean;\n}\n\n\n/**\n * TaskService manages tasks by providing methods to create, retrieve, update, and delete tasks.\n * It also includes error handling for HTTP requests.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class TaskService {\n\n  /** Base URL for task-related API endpoints. */\n  private baseUrl = environment.apiUrl; \n\n\n    /**\n   * Constructor to inject HttpClient for making HTTP requests.\n   * @param http - HttpClient instance for sending requests to the server.\n   */\n  constructor(private http: HttpClient) {}\n\n\n    /**\n   * Handles errors from HTTP requests, logging the error and providing a generic error message.\n   * @param error - The error response from the HTTP request.\n   * @returns An observable that emits an error message.\n   */\n  private handleError(error: HttpErrorResponse) {\n    if (error.status === 0) {\n      console.error('An error occurred:', error.error); \n    } else {\n      console.error(`Backend returned code ${error.status}, body was: `, error.error); \n    }\n    return throwError('Something bad happened; please try again later.'); \n  }\n\n\n    /**\n   * Retrieves all tasks from the server.\n   * @returns An Observable that emits an array of Task objects.\n   */\n  getTasks(): Observable {\n    return this.http.get(`${this.baseUrl}/tasks/`).pipe(\n      retry(3), \n      catchError(this.handleError), \n    );\n  }\n\n\n    /**\n   * Retrieves a specific task by its ID.\n   * @param id - The ID of the task to retrieve.\n   * @returns An Observable that emits the requested Task object.\n   */\n  getTask(id: number): Observable {\n    return this.http.get(`${this.baseUrl}/tasks/${id}/`).pipe(catchError(this.handleError));\n  }\n\n\n    /**\n   * Adds a new task with a default status of 'todo'.\n   * @param task - The Task object to be added.\n   * @returns An Observable that emits the created Task object.\n   */\n  addTask(task: Task): Observable {\n    task.status = 'todo'; \n    return this.http.post(`${this.baseUrl}/tasks/`, task).pipe(catchError(this.handleError));\n  }\n\n\n    /**\n   * Updates an existing task by its ID, ensuring unique subtasks.\n   * @param id - The ID of the task to update.\n   * @param task - The updated Task object.\n   * @returns An Observable that emits the updated Task object.\n   */\n  updateTask(id: number, task: Task): Observable {\n    const uniqueSubtasks = task.subtasks.filter(\n      (subtask, index, self) =>\n        index === self.findIndex(t => t.id === subtask.id && t.text === subtask.text),\n    );\n\n    const updatedTask = { ...task, subtasks: uniqueSubtasks };\n\n    return this.http\n      .put(`${this.baseUrl}/tasks/${id}/`, updatedTask)\n      .pipe(catchError(this.handleError));\n  }\n\n\n    /**\n   * Deletes a task by its ID.\n   * @param id - The ID of the task to delete.\n   * @returns An Observable that completes when the task is deleted.\n   */\n  deleteTask(id: number): Observable {\n    return this.http.delete(`${this.baseUrl}/tasks/${id}/`).pipe(catchError(this.handleError));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SubtaskService.html":{"url":"injectables/SubtaskService.html","title":"injectable - SubtaskService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SubtaskService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/subtask.service.ts\n        \n\n\n            \n                Description\n            \n            \n                SubtaskService provides methods to create, retrieve, update, and delete subtasks.\nIt communicates with the server API and handles any HTTP errors that occur during requests.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createSubtask\n                            \n                            \n                                deleteSubtask\n                            \n                            \n                                getSubtask\n                            \n                            \n                                getSubtasks\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                updateSubtask\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/subtask.service.ts:34\n                            \n                        \n\n                \n                    \n                            Constructor to inject HttpClient for making HTTP requests.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nHttpClient instance for handling HTTP requests.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createSubtask\n                        \n                    \n                \n            \n            \n                \ncreateSubtask(subtask: Subtask)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/subtask.service.ts:68\n                        \n                    \n\n\n            \n                \n                        Creates a new subtask on the server.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                subtask\n                                            \n                                                            Subtask\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe Subtask object to create.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that emits the created Subtask.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteSubtask\n                        \n                    \n                \n            \n            \n                \ndeleteSubtask(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/subtask.service.ts:96\n                        \n                    \n\n\n            \n                \n                        Deletes a subtask by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the subtask to delete.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that completes when the subtask is deleted.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSubtask\n                        \n                    \n                \n            \n            \n                \ngetSubtask(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/subtask.service.ts:58\n                        \n                    \n\n\n            \n                \n                        Retrieves a specific subtask by ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the subtask to retrieve.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that emits the requested Subtask.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSubtasks\n                        \n                    \n                \n            \n            \n                \ngetSubtasks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/subtask.service.ts:48\n                        \n                    \n\n\n            \n                \n                        Retrieves the list of all subtasks from the server.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that emits an array of Subtask objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleError(error: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/subtask.service.ts:106\n                        \n                    \n\n\n            \n                \n                        Handles HTTP errors that occur during requests, logging error details to the console.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe error response received.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                An Observable that emits an error message.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateSubtask\n                        \n                    \n                \n            \n            \n                \nupdateSubtask(id: number, subtask: Subtask)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/subtask.service.ts:84\n                        \n                    \n\n\n            \n                \n                        Updates an existing subtask by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the subtask to update.\n\n\n                                            \n                                        \n                                        \n                                                subtask\n                                            \n                                                            Subtask\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe updated Subtask object.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that emits the updated Subtask.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${environment.apiUrl}/subtasks/`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/subtask.service.ts:34\n                        \n                    \n\n            \n                \n                    Base URL for the subtasks API.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\n\n\n/**\n * Interface representing a subtask with optional ID, text, and completion status.\n */\nexport interface Subtask {\n\n  /** Unique identifier for the subtask. */\n  id?: number; \n\n  /** Text description of the subtask. */\n  text: string;\n\n  /** Boolean indicating if the subtask is completed. */\n  completed: boolean;\n}\n\n\n/**\n * SubtaskService provides methods to create, retrieve, update, and delete subtasks.\n * It communicates with the server API and handles any HTTP errors that occur during requests.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class SubtaskService {\n\n  /** Base URL for the subtasks API. */\n  private apiUrl = `${environment.apiUrl}/subtasks/`;\n\n\n  /**\n   * Constructor to inject HttpClient for making HTTP requests.\n   * @param http - HttpClient instance for handling HTTP requests.\n   */\n  constructor(private http: HttpClient) {}\n\n\n    /**\n   * Retrieves the list of all subtasks from the server.\n   * @returns An Observable that emits an array of Subtask objects.\n   */\n  getSubtasks(): Observable {\n    return this.http.get(this.apiUrl).pipe(catchError(this.handleError));\n  }\n\n\n  /**\n   * Retrieves a specific subtask by ID.\n   * @param id - The ID of the subtask to retrieve.\n   * @returns An Observable that emits the requested Subtask.\n   */\n  getSubtask(id: number): Observable {\n    return this.http.get(`${this.apiUrl}/${id}`).pipe(catchError(this.handleError));\n  }\n\n\n    /**\n   * Creates a new subtask on the server.\n   * @param subtask - The Subtask object to create.\n   * @returns An Observable that emits the created Subtask.\n   */\n  createSubtask(subtask: Subtask): Observable {\n    return this.http.post(this.apiUrl, subtask).pipe(\n      catchError(error => {\n        console.error('Error creating subtask:', error);\n        return throwError(() => new Error('Error creating subtask'));\n      }),\n    );\n  }\n\n\n    /**\n   * Updates an existing subtask by its ID.\n   * @param id - The ID of the subtask to update.\n   * @param subtask - The updated Subtask object.\n   * @returns An Observable that emits the updated Subtask.\n   */\n  updateSubtask(id: number, subtask: Subtask): Observable {\n    const url = `${this.apiUrl.replace(/\\/+$/, '')}/${id}/`; // Ensure trailing slash\n\n    return this.http.put(url, subtask).pipe(catchError(this.handleError));\n  }\n\n\n    /**\n   * Deletes a subtask by its ID.\n   * @param id - The ID of the subtask to delete.\n   * @returns An Observable that completes when the subtask is deleted.\n   */\n  deleteSubtask(id: number): Observable {\n    return this.http.delete(`${this.apiUrl}/${id}`).pipe(catchError(this.handleError));\n  }\n\n\n    /**\n   * Handles HTTP errors that occur during requests, logging error details to the console.\n   * @param error - The error response received.\n   * @returns An Observable that emits an error message.\n   */\n  private handleError(error: any) {\n    let errorMessage = 'An unknown error occurred!';\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = `Error: ${error.error.message}`;\n    } else {\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    console.error(errorMessage);\n    return throwError(errorMessage);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SummaryComponent.html":{"url":"components/SummaryComponent.html","title":"component - SummaryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SummaryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/summary/summary.component.ts\n\n\n\n    \n        Description\n    \n    \n        SummaryComponent displays a summary view for the user, including\na greeting, tasks overview, and nearest task due date.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-summary\n            \n\n\n\n            \n                styleUrls\n                ./summary.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./summary.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentDate\n                            \n                            \n                                currentUser\n                            \n                            \n                                greeting$\n                            \n                            \n                                nearestDueDate\n                            \n                            \n                                showOverlaySummary\n                            \n                            \n                                tasks\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                countTasksByPriority\n                            \n                            \n                                countTasksByStatus\n                            \n                            \n                                findNearestDueDate\n                            \n                            \n                                    Private\n                                generateGreeting\n                            \n                            \n                                goToBoardSummary\n                            \n                            \n                                loadTasks\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, taskService: TaskService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/summary/summary.component.ts:37\n                            \n                        \n\n                \n                    \n                            Constructor to inject necessary services, including UserService, TaskService, and Router.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService to manage user data.\n\n\n                                                        \n                                                \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService to manage tasks data.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nRouter for navigation within the app.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        countTasksByPriority\n                        \n                    \n                \n            \n            \n                \ncountTasksByPriority(priority: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/summary/summary.component.ts:136\n                        \n                    \n\n\n            \n                \n                        Counts tasks by their priority level (e.g., \"high\", \"medium\").\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                priority\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe priority level of tasks to filter by.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                The count of tasks with the specified priority.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        countTasksByStatus\n                        \n                    \n                \n            \n            \n                \ncountTasksByStatus(status: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/summary/summary.component.ts:125\n                        \n                    \n\n\n            \n                \n                        Counts tasks by their status (e.g., \"todo\", \"done\").\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                status\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe status of tasks to filter by.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                The count of tasks with the specified status.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findNearestDueDate\n                        \n                    \n                \n            \n            \n                \nfindNearestDueDate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/summary/summary.component.ts:146\n                        \n                    \n\n\n            \n                \n                        Finds the nearest due date among the tasks and sets it as nearestDueDate.\nIf no tasks are available, sets nearestDueDate to null.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generateGreeting\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateGreeting(user: User | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/summary/summary.component.ts:86\n                        \n                    \n\n\n            \n                \n                        Generates a greeting message based on the current time of day.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                        User | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe current user to personalize the greeting.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                A greeting string (e.g., \"Good morning,\").\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToBoardSummary\n                        \n                    \n                \n            \n            \n                \ngoToBoardSummary()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/summary/summary.component.ts:169\n                        \n                    \n\n\n            \n                \n                        Navigates to the Board page when the summary button is clicked.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadTasks\n                        \n                    \n                \n            \n            \n                \nloadTasks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/summary/summary.component.ts:107\n                        \n                    \n\n\n            \n                \n                        Loads tasks from the server and calculates the nearest due date.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/summary/summary.component.ts:56\n                        \n                    \n\n\n            \n                \n                        Initializes the component, loads tasks, sets up greeting, and manages the overlay.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentDate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                    \n                        \n                                Defined in src/app/summary/summary.component.ts:22\n                        \n                    \n\n            \n                \n                    Current date displayed in the summary view.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :     User | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/summary/summary.component.ts:28\n                        \n                    \n\n            \n                \n                    The currently logged-in user, retrieved from the UserService.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        greeting$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/summary/summary.component.ts:25\n                        \n                    \n\n            \n                \n                    Observable to dynamically display a greeting based on the time of day.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nearestDueDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/summary/summary.component.ts:34\n                        \n                    \n\n            \n                \n                    Nearest task due date among all tasks, calculated after loading tasks.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showOverlaySummary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/summary/summary.component.ts:37\n                        \n                    \n\n            \n                \n                    Boolean to control the display of an introductory overlay in the summary.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tasks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Task[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/summary/summary.component.ts:31\n                        \n                    \n\n            \n                \n                    List of tasks retrieved from the TaskService.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport { User } from 'src/assets/models/user.model';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { TaskService, Task } from 'src/app/services/task.service';\nimport { Router, NavigationEnd, Event as RouterEvent } from '@angular/router';\n\n\n/**\n * SummaryComponent displays a summary view for the user, including\n * a greeting, tasks overview, and nearest task due date.\n */\n@Component({\n  selector: 'app-summary',\n  templateUrl: './summary.component.html',\n  styleUrls: ['./summary.component.scss'],\n})\nexport class SummaryComponent implements OnInit {\n\n    /** Current date displayed in the summary view. */\n  currentDate = new Date();\n\n    /** Observable to dynamically display a greeting based on the time of day. */\n  greeting$: Observable | undefined;\n\n    /** The currently logged-in user, retrieved from the UserService. */\n  currentUser: User | null = null;\n\n    /** List of tasks retrieved from the TaskService. */\n  tasks: Task[] = [];\n\n    /** Nearest task due date among all tasks, calculated after loading tasks. */\n  nearestDueDate: Date | null = null;\n\n    /** Boolean to control the display of an introductory overlay in the summary. */\n  showOverlaySummary: boolean = true;\n\n\n    /**\n   * Constructor to inject necessary services, including UserService, TaskService, and Router.\n   * @param userService - Service to manage user data.\n   * @param taskService - Service to manage tasks data.\n   * @param router - Router for navigation within the app.\n   */\n  constructor(\n    private userService: UserService,\n    private taskService: TaskService,\n    private router: Router,\n  ) {}\n\n\n    /**\n   * Initializes the component, loads tasks, sets up greeting, and manages the overlay.\n   */\n  ngOnInit(): void {\n    const showOverlayStored = sessionStorage.getItem('showOverlaySummary');\n    console.log(this.showOverlaySummary);\n    this.loadTasks();\n    this.greeting$ = this.userService\n      .getCurrentUser()\n      .pipe(map(user => this.generateGreeting(user)));\n\n    this.userService.getCurrentUser().subscribe(user => {\n      this.currentUser = user;\n    });\n\n    if (showOverlayStored === 'true') {\n      this.showOverlaySummary = true;\n\n      setTimeout(() => {\n        sessionStorage.setItem('showOverlaySummary', 'false');\n        this.showOverlaySummary = false;\n      }, 5000);\n    } else {\n      this.showOverlaySummary = false;\n    }\n  }\n\n\n    /**\n   * Generates a greeting message based on the current time of day.\n   * @param user - The current user to personalize the greeting.\n   * @returns A greeting string (e.g., \"Good morning,\").\n   */\n  private generateGreeting(user: User | null): string {\n    const now = new Date();\n    const hour = now.getHours();\n\n    let greeting = 'Hello,';\n\n    if (hour >= 5 && hour = 12 && hour  {\n        this.tasks = tasks;\n        this.findNearestDueDate();\n      },\n      error => {\n        console.error('Error loading tasks:', error);\n      },\n    );\n  }\n\n\n    /**\n   * Counts tasks by their status (e.g., \"todo\", \"done\").\n   * @param status - The status of tasks to filter by.\n   * @returns The count of tasks with the specified status.\n   */\n  countTasksByStatus(status: string): number {\n    const filteredTasks = this.tasks.filter(task => task.status === status);\n    return filteredTasks.length;\n  }\n\n\n    /**\n   * Counts tasks by their priority level (e.g., \"high\", \"medium\").\n   * @param priority - The priority level of tasks to filter by.\n   * @returns The count of tasks with the specified priority.\n   */\n  countTasksByPriority(priority: string): number {\n    const filteredTasks = this.tasks.filter(task => task.priority === priority);\n    return filteredTasks.length;\n  }\n\n\n    /**\n   * Finds the nearest due date among the tasks and sets it as nearestDueDate.\n   * If no tasks are available, sets nearestDueDate to null.\n   */\n  findNearestDueDate(): void {\n    if (this.tasks.length === 0) {\n      this.nearestDueDate = null;\n      return;\n    }\n\n    const now = new Date().getTime();\n    let nearestTask = this.tasks[0];\n    let minDifference = Math.abs(new Date(nearestTask.due_date!).getTime() - now);\n\n    this.tasks.forEach(task => {\n      const difference = Math.abs(new Date(task.due_date!).getTime() - now);\n      if (difference \n    \n\n    \n        \n  \n    {{ greeting$ | async }}\n    {{ currentUser?.name }}\n  \n\n\n\n  \n    \n  \n\n  \n    \n    \n      \n        Join\n        \n        Key Metrics at a Glance\n        \n      \n\n      \n        \n          \n            \n              \n                \n                \n                  \n                \n                \n                  \n                \n              \n            \n            \n              {{ countTasksByStatus('todo') }}\n              To-do\n            \n          \n\n          \n            \n              \n                \n                \n              \n            \n            \n              {{ countTasksByStatus('done') }}\n              Done\n            \n          \n        \n\n        \n          \n            \n              \n                \n                  \n                  \n                    \n                    \n                  \n                  \n                    \n                      \n                    \n                  \n                \n              \n              \n                {{ countTasksByPriority('Urgent') }}\n                Urgent\n              \n            \n            \n            \n              {{ nearestDueDate | date: 'longDate' }}\n              Upcoming Deadline\n            \n          \n        \n\n        \n          \n            {{ tasks.length }}\n            Tasks in Board\n          \n          \n            {{ countTasksByStatus('inProgress') }}\n            Tasks in Progress\n          \n          \n            {{ countTasksByStatus('awaitFeedback') }}\n            Awaiting Feedback\n          \n        \n      \n    \n    \n      \n        {{ greeting$ | async }}\n        {{ currentUser?.name }}\n      \n    \n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./summary.component.scss\n                \n                .summaryContainer {\n  width: 100vw;\n  height: 100vh;\n  background-color: #f6f7f8;\n  display: flex;\n  flex-direction: column;\n}\n\n.summaryContent {\n  height: 80vh;\n  position: absolute;\n  top: 10vh;\n}\n\n.headlinesContainer {\n  height: 15vh;\n  margin-left: 16px;\n}\n\n.smallHeadline {\n  font-size: calc(1.175rem + 0.5vw) !important;\n}\n\n.summaryUnderline {\n  display: block;\n  border-bottom: 3px solid;\n  border-color: #29abe2;\n  width: min(120px, 50%);\n}\n\n.footerComponent {\n  bottom: 0;\n  left: 0;\n}\n\n.cardContainer {\n  height: 65vh;\n  width: min(1024px, 100vw);\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n  flex-direction: column;\n}\n\n.cardsStyle {\n  background-color: #ffffff;\n  border-radius: 20px;\n  height: 110px;\n  box-shadow: 0px 0px 4px 0px rgba(0, 0, 0, 0.2);\n}\n\n.firstRow {\n  width: min(264px, 47vw);\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n  flex-direction: row;\n}\n\n.secondRow {\n  width: min(560px, 96vw);\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n  flex-direction: row;\n}\n\n.cardsFirstRow {\n  display: flex;\n  justify-content: space-between;\n  width: min(560px, 96vw);\n}\n\n.thirdRow {\n  width: min(168px, 31vw);\n  display: flex;\n  align-items: center;\n}\n\n.cardsThirdRow {\n  display: flex;\n  justify-content: space-between;\n  width: min(560px, 96vw);\n}\n\n.numberTextContainer {\n  height: 110px;\n}\n\n.numberStyle {\n  font-weight: bold;\n  font-size: 2.5rem;\n}\n\n.hoverDone {\n  transition: transform 0.2s ease-in-out;\n}\n\n.textCenter {\n  text-align: center;\n}\n\n.hoverDone:hover {\n  color: white;\n  background-color: #2a3647;\n  cursor: pointer;\n  transform: scale(1.05);\n\n  .tickIcon circle {\n    fill: white;\n  }\n\n  .tickIcon path {\n    stroke: #2a3647;\n  }\n}\n\n.hoverTodo {\n  transition: transform 0.2s ease-in-out;\n}\n\n.hoverTodo:hover {\n  color: white;\n  background-color: #2a3647;\n  cursor: pointer;\n  transform: scale(1.05);\n\n  .pencilIcon circle {\n    fill: white;\n  }\n\n  .pencilIcon path {\n    fill: #2a3647;\n  }\n}\n\n.hoverUrgent {\n  transition: transform 0.2s ease-in-out;\n}\n\n.hoverUrgent:hover {\n  color: white;\n  background-color: #2a3647;\n  cursor: pointer;\n  transform: scale(1.02);\n\n  .urgentShadow {\n    border-color: white;\n  }\n}\n\n.hoverthirdRow {\n  transition: transform 0.2s ease-in-out;\n}\n\n.hoverthirdRow:hover {\n  color: white;\n  background-color: #2a3647;\n  cursor: pointer;\n  transform: scale(1.05);\n}\n\n.urgentIconTextContainer {\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n  flex-direction: row;\n  width: 150px;\n}\n\n.urgentShadow {\n  border: 2px solid;\n  width: 2px;\n  height: 80px;\n  border-color: #d1d1d1;\n}\n\n.urgentDate {\n  font-weight: bold;\n}\n\n@media screen and (orientation: landscape) and (max-width: 1024px) {\n  .cardsStyle {\n    height: 15vh;\n  }\n\n  .headlinesContainer {\n    display: flex;\n    align-items: center;\n  }\n\n  .summaryUnderline {\n    display: none;\n  }\n\n  .summaryDividingLine {\n    display: block;\n    border-right: 3px solid;\n    border-color: #29abe2;\n    height: 32px;\n    padding-bottom: 8px;\n    margin-right: 16px;\n    margin-left: 16px;\n  }\n\n  .summaryContent {\n    top: 15vh;\n  }\n\n  .numberTextContainer {\n    height: 15vh;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n  }\n\n  .numberStyle {\n    font-size: 1rem;\n  }\n\n  .cardContainer {\n    height: 50vh;\n    width: 100vw;\n    display: flex;\n    justify-content: space-between;\n    flex-direction: column;\n    align-items: center;\n  }\n\n  .urgentShadow {\n    height: 12vh;\n  }\n\n  .iconLandscape {\n    width: 48px;\n    height: 48px;\n  }\n}\n\n@media (min-width: 1025px) {\n  .summaryDesktopContainer {\n    display: flex;\n  }\n\n  .summaryContent {\n    width: 55vw;\n    position: relative;\n    margin-left: 48px;\n  }\n\n  .headlinesContainer {\n    display: flex;\n    align-items: center;\n  }\n\n  .smallHeadline {\n    display: flex;\n    align-items: center;\n  }\n\n  .summaryUnderline {\n    display: none;\n  }\n\n  .summaryDividingLine {\n    display: block;\n    border-right: 3px solid;\n    border-color: #29abe2;\n    height: 48px;\n    padding-bottom: 8px;\n    margin-right: 16px;\n    margin-left: 16px;\n  }\n\n  .cardContainer {\n    width: 560px;\n  }\n\n  .greetingContainer {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: calc(1.475rem + 0.5vw);\n    height: 90vh;\n    margin-top: 10vh;\n  }\n\n  .greetingNameContainer {\n    display: flex;\n    flex-direction: column;\n  }\n\n  .greetingContainerGreeting {\n    font-weight: 500;\n  }\n\n  .greetingContainerName {\n    color: #29abe2;\n    font-weight: 700;\n  }\n}\n\n.overlaySummary {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: white;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 9999; \n  animation: overlayFadeOut 3s ease-in-out forwards;\n  animation-delay: 2s;\n}\n\n.greetingContainerGreetingOverlay {\n  font-size: 2rem;\n  font-weight: 500;\n}\n\n.greetingContainerNameOverlay {\n  color: #29abe2;\n  font-weight: 700;\n  font-size: 2rem;\n}\n\n.greetingNameContainerOverlay {\n  animation: overlayFadeOutGreeting 1.5s ease-in-out forwards;\n  animation-delay: 1s;\n  display: flex;\n  flex-direction: column;\n}\n\n@keyframes overlayFadeOutGreeting {\n  0% {\n    opacity: 1;\n  }\n  100% {\n    opacity: 0;\n    visibility: hidden; \n  }\n}\n\n@keyframes overlayFadeOut {\n  0% {\n    opacity: 1;\n  }\n  100% {\n    opacity: 0;\n    visibility: hidden;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ greeting$ | async }}    {{ currentUser?.name }}                                  Join                Key Metrics at a Glance                                                                                                                                                                                                                                        {{ countTasksByStatus(\\'todo\\') }}              To-do                                                                                                                                              {{ countTasksByStatus(\\'done\\') }}              Done                                                                                                                                                                                                                                                                                                                                                      {{ countTasksByPriority(\\'Urgent\\') }}                Urgent                                                                {{ nearestDueDate | date: \\'longDate\\' }}              Upcoming Deadline                                                            {{ tasks.length }}            Tasks in Board                                {{ countTasksByStatus(\\'inProgress\\') }}            Tasks in Progress                                {{ countTasksByStatus(\\'awaitFeedback\\') }}            Awaiting Feedback                                              {{ greeting$ | async }}        {{ currentUser?.name }}                    '\n    var COMPONENTS = [{'name': 'AddTaskComponent', 'selector': 'app-add-task'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BoardComponent', 'selector': 'app-board'},{'name': 'BoardTaskOverlayComponent', 'selector': 'app-board-task-overlay'},{'name': 'ContactsAddComponent', 'selector': 'app-contacts-add'},{'name': 'ContactsEditComponent', 'selector': 'app-contacts-edit'},{'name': 'ContactsOverviewComponent', 'selector': 'app-contacts-overview'},{'name': 'ContactsViewComponent', 'selector': 'app-contacts-view'},{'name': 'EditTaskComponent', 'selector': 'app-edit-task'},{'name': 'FooterBarComponent', 'selector': 'app-footer-bar'},{'name': 'HeaderBarMobileComponent', 'selector': 'app-header-bar-mobile'},{'name': 'LegalNoticeComponent', 'selector': 'app-legal-notice'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'},{'name': 'SummaryComponent', 'selector': 'app-summary'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SummaryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Task.html":{"url":"interfaces/Task.html","title":"interface - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/task.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a task, with optional ID, title, priority, due date, category, and more.\nIncludes subtasks and contacts associated with the task.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            assigned_to\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            category\n                                        \n                                \n                                \n                                        \n                                            contacts\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            creator\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            due_date\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            priority\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            showStatusDropdown\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            subtasks\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        assigned_to\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        assigned_to:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Array of user IDs assigned to the task.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional ID of the category associated with the task.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contacts\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contacts:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Array of contact IDs associated with the task.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creator:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional ID of the user who created the task.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional description of the task.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        due_date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        due_date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional due date for the task, represented as a string.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Unique identifier for the task.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        priority\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        priority:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Priority level of the task (e.g., high, medium, low).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showStatusDropdown\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showStatusDropdown:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional boolean to toggle the visibility of the status dropdown.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional status of the task (e.g., todo, in progress, done).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subtasks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subtasks:     Subtask[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Subtask[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Array of subtasks associated with the task.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Title of the task.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\n\n\n/**\n * Interface representing a subtask, with optional ID, text description, and completion status.\n */\nexport interface Subtask {\n\n  /** Unique identifier for the subtask. */\n  id?: number;\n\n/** Text description of the subtask. */\n  text: string;\n\n  /** Boolean indicating if the subtask is completed. */\n  completed: boolean;\n}\n\n\n/**\n * Interface representing a task, with optional ID, title, priority, due date, category, and more.\n * Includes subtasks and contacts associated with the task.\n */\nexport interface Task {\n\n  /** Unique identifier for the task. */\n  id?: number;\n\n  /** Title of the task. */\n  title: string;\n\n  /** Optional description of the task. */\n  description?: string;\n\n  /** Priority level of the task (e.g., high, medium, low). */\n  priority: string;\n\n  /** Optional due date for the task, represented as a string. */\n  due_date?: string;\n\n  /** Optional ID of the category associated with the task. */\n  category?: number;\n\n  /** Array of user IDs assigned to the task. */\n  assigned_to: number[];\n\n  /** Array of subtasks associated with the task. */\n  subtasks: Subtask[];\n\n  /** Optional status of the task (e.g., todo, in progress, done). */\n  status?: string; \n\n  /** Array of contact IDs associated with the task. */\n  contacts: number[]; \n\n  /** Optional ID of the user who created the task. */\n  creator?: number; \n\n  /** Optional boolean to toggle the visibility of the status dropdown. */\n  showStatusDropdown?: boolean;\n}\n\n\n/**\n * TaskService manages tasks by providing methods to create, retrieve, update, and delete tasks.\n * It also includes error handling for HTTP requests.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class TaskService {\n\n  /** Base URL for task-related API endpoints. */\n  private baseUrl = environment.apiUrl; \n\n\n    /**\n   * Constructor to inject HttpClient for making HTTP requests.\n   * @param http - HttpClient instance for sending requests to the server.\n   */\n  constructor(private http: HttpClient) {}\n\n\n    /**\n   * Handles errors from HTTP requests, logging the error and providing a generic error message.\n   * @param error - The error response from the HTTP request.\n   * @returns An observable that emits an error message.\n   */\n  private handleError(error: HttpErrorResponse) {\n    if (error.status === 0) {\n      console.error('An error occurred:', error.error); \n    } else {\n      console.error(`Backend returned code ${error.status}, body was: `, error.error); \n    }\n    return throwError('Something bad happened; please try again later.'); \n  }\n\n\n    /**\n   * Retrieves all tasks from the server.\n   * @returns An Observable that emits an array of Task objects.\n   */\n  getTasks(): Observable {\n    return this.http.get(`${this.baseUrl}/tasks/`).pipe(\n      retry(3), \n      catchError(this.handleError), \n    );\n  }\n\n\n    /**\n   * Retrieves a specific task by its ID.\n   * @param id - The ID of the task to retrieve.\n   * @returns An Observable that emits the requested Task object.\n   */\n  getTask(id: number): Observable {\n    return this.http.get(`${this.baseUrl}/tasks/${id}/`).pipe(catchError(this.handleError));\n  }\n\n\n    /**\n   * Adds a new task with a default status of 'todo'.\n   * @param task - The Task object to be added.\n   * @returns An Observable that emits the created Task object.\n   */\n  addTask(task: Task): Observable {\n    task.status = 'todo'; \n    return this.http.post(`${this.baseUrl}/tasks/`, task).pipe(catchError(this.handleError));\n  }\n\n\n    /**\n   * Updates an existing task by its ID, ensuring unique subtasks.\n   * @param id - The ID of the task to update.\n   * @param task - The updated Task object.\n   * @returns An Observable that emits the updated Task object.\n   */\n  updateTask(id: number, task: Task): Observable {\n    const uniqueSubtasks = task.subtasks.filter(\n      (subtask, index, self) =>\n        index === self.findIndex(t => t.id === subtask.id && t.text === subtask.text),\n    );\n\n    const updatedTask = { ...task, subtasks: uniqueSubtasks };\n\n    return this.http\n      .put(`${this.baseUrl}/tasks/${id}/`, updatedTask)\n      .pipe(catchError(this.handleError));\n  }\n\n\n    /**\n   * Deletes a task by its ID.\n   * @param id - The ID of the task to delete.\n   * @returns An Observable that completes when the task is deleted.\n   */\n  deleteTask(id: number): Observable {\n    return this.http.delete(`${this.baseUrl}/tasks/${id}/`).pipe(catchError(this.handleError));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskService.html":{"url":"injectables/TaskService.html","title":"injectable - TaskService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TaskService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/task.service.ts\n        \n\n\n            \n                Description\n            \n            \n                TaskService manages tasks by providing methods to create, retrieve, update, and delete tasks.\nIt also includes error handling for HTTP requests.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTask\n                            \n                            \n                                deleteTask\n                            \n                            \n                                getTask\n                            \n                            \n                                getTasks\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                updateTask\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/task.service.ts:78\n                            \n                        \n\n                \n                    \n                            Constructor to inject HttpClient for making HTTP requests.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nHttpClient instance for sending requests to the server.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addTask\n                        \n                    \n                \n            \n            \n                \naddTask(task: Task)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/task.service.ts:130\n                        \n                    \n\n\n            \n                \n                        Adds a new task with a default status of 'todo'.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                task\n                                            \n                                                            Task\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe Task object to be added.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits the created Task object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTask\n                        \n                    \n                \n            \n            \n                \ndeleteTask(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/task.service.ts:161\n                        \n                    \n\n\n            \n                \n                        Deletes a task by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the task to delete.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that completes when the task is deleted.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTask\n                        \n                    \n                \n            \n            \n                \ngetTask(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/task.service.ts:120\n                        \n                    \n\n\n            \n                \n                        Retrieves a specific task by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the task to retrieve.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits the requested Task object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTasks\n                        \n                    \n                \n            \n            \n                \ngetTasks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/task.service.ts:107\n                        \n                    \n\n\n            \n                \n                        Retrieves all tasks from the server.\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits an array of Task objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/task.service.ts:93\n                        \n                    \n\n\n            \n                \n                        Handles errors from HTTP requests, logging the error and providing a generic error message.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        HttpErrorResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe error response from the HTTP request.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                An observable that emits an error message.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateTask\n                        \n                    \n                \n            \n            \n                \nupdateTask(id: number, task: Task)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/task.service.ts:142\n                        \n                    \n\n\n            \n                \n                        Updates an existing task by its ID, ensuring unique subtasks.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the task to update.\n\n\n                                            \n                                        \n                                        \n                                                task\n                                            \n                                                            Task\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe updated Task object.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits the updated Task object.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.apiUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/services/task.service.ts:78\n                        \n                    \n\n            \n                \n                    Base URL for task-related API endpoints.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\n\n\n/**\n * Interface representing a subtask, with optional ID, text description, and completion status.\n */\nexport interface Subtask {\n\n  /** Unique identifier for the subtask. */\n  id?: number;\n\n/** Text description of the subtask. */\n  text: string;\n\n  /** Boolean indicating if the subtask is completed. */\n  completed: boolean;\n}\n\n\n/**\n * Interface representing a task, with optional ID, title, priority, due date, category, and more.\n * Includes subtasks and contacts associated with the task.\n */\nexport interface Task {\n\n  /** Unique identifier for the task. */\n  id?: number;\n\n  /** Title of the task. */\n  title: string;\n\n  /** Optional description of the task. */\n  description?: string;\n\n  /** Priority level of the task (e.g., high, medium, low). */\n  priority: string;\n\n  /** Optional due date for the task, represented as a string. */\n  due_date?: string;\n\n  /** Optional ID of the category associated with the task. */\n  category?: number;\n\n  /** Array of user IDs assigned to the task. */\n  assigned_to: number[];\n\n  /** Array of subtasks associated with the task. */\n  subtasks: Subtask[];\n\n  /** Optional status of the task (e.g., todo, in progress, done). */\n  status?: string; \n\n  /** Array of contact IDs associated with the task. */\n  contacts: number[]; \n\n  /** Optional ID of the user who created the task. */\n  creator?: number; \n\n  /** Optional boolean to toggle the visibility of the status dropdown. */\n  showStatusDropdown?: boolean;\n}\n\n\n/**\n * TaskService manages tasks by providing methods to create, retrieve, update, and delete tasks.\n * It also includes error handling for HTTP requests.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class TaskService {\n\n  /** Base URL for task-related API endpoints. */\n  private baseUrl = environment.apiUrl; \n\n\n    /**\n   * Constructor to inject HttpClient for making HTTP requests.\n   * @param http - HttpClient instance for sending requests to the server.\n   */\n  constructor(private http: HttpClient) {}\n\n\n    /**\n   * Handles errors from HTTP requests, logging the error and providing a generic error message.\n   * @param error - The error response from the HTTP request.\n   * @returns An observable that emits an error message.\n   */\n  private handleError(error: HttpErrorResponse) {\n    if (error.status === 0) {\n      console.error('An error occurred:', error.error); \n    } else {\n      console.error(`Backend returned code ${error.status}, body was: `, error.error); \n    }\n    return throwError('Something bad happened; please try again later.'); \n  }\n\n\n    /**\n   * Retrieves all tasks from the server.\n   * @returns An Observable that emits an array of Task objects.\n   */\n  getTasks(): Observable {\n    return this.http.get(`${this.baseUrl}/tasks/`).pipe(\n      retry(3), \n      catchError(this.handleError), \n    );\n  }\n\n\n    /**\n   * Retrieves a specific task by its ID.\n   * @param id - The ID of the task to retrieve.\n   * @returns An Observable that emits the requested Task object.\n   */\n  getTask(id: number): Observable {\n    return this.http.get(`${this.baseUrl}/tasks/${id}/`).pipe(catchError(this.handleError));\n  }\n\n\n    /**\n   * Adds a new task with a default status of 'todo'.\n   * @param task - The Task object to be added.\n   * @returns An Observable that emits the created Task object.\n   */\n  addTask(task: Task): Observable {\n    task.status = 'todo'; \n    return this.http.post(`${this.baseUrl}/tasks/`, task).pipe(catchError(this.handleError));\n  }\n\n\n    /**\n   * Updates an existing task by its ID, ensuring unique subtasks.\n   * @param id - The ID of the task to update.\n   * @param task - The updated Task object.\n   * @returns An Observable that emits the updated Task object.\n   */\n  updateTask(id: number, task: Task): Observable {\n    const uniqueSubtasks = task.subtasks.filter(\n      (subtask, index, self) =>\n        index === self.findIndex(t => t.id === subtask.id && t.text === subtask.text),\n    );\n\n    const updatedTask = { ...task, subtasks: uniqueSubtasks };\n\n    return this.http\n      .put(`${this.baseUrl}/tasks/${id}/`, updatedTask)\n      .pipe(catchError(this.handleError));\n  }\n\n\n    /**\n   * Deletes a task by its ID.\n   * @param id - The ID of the task to delete.\n   * @returns An Observable that completes when the task is deleted.\n   */\n  deleteTask(id: number): Observable {\n    return this.http.delete(`${this.baseUrl}/tasks/${id}/`).pipe(catchError(this.handleError));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/assets/models/user.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  id: number;\n  name: string;\n  email: string;\n  // Add other relevant user properties as needed\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User-1.html":{"url":"interfaces/User-1.html","title":"interface - User-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            dist/join2.0_angular/assets/models/user.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  id: number;\n  name: string;\n  email: string;\n  // Add other relevant user properties as needed\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserRegistrationService.html":{"url":"injectables/UserRegistrationService.html","title":"injectable - UserRegistrationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserRegistrationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n\n            \n                Description\n            \n            \n                UserRegistrationService handles user registration requests to the server.\nIt sends user data to the API and manages error handling during the registration process.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                registrationUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                registerUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.service.ts:17\n                            \n                        \n\n                \n                    \n                            Constructor to inject HttpClient for making HTTP requests.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe HttpClient instance for sending registration data.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleError(error: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:51\n                        \n                    \n\n\n            \n                \n                        Handles errors that occur during the registration process.\nLogs the error to the console and rethrows it for further handling.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe error response object.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                An Observable that emits an error notification.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerUser\n                        \n                    \n                \n            \n            \n                \nregisterUser(userData: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:32\n                        \n                    \n\n\n            \n                \n                        Registers a new user by sending user data to the registration API.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userData\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nObject containing user details: name, email, password, and confirmPassword.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that emits the server's response or an error if the registration fails.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registrationUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://join.server.fabianduerr.com/signup/'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:17\n                        \n                    \n\n            \n                \n                    URL endpoint for user registration.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n\n/**\n * UserRegistrationService handles user registration requests to the server.\n * It sends user data to the API and manages error handling during the registration process.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserRegistrationService {\n\n    /** URL endpoint for user registration. */\n  private registrationUrl = 'https://join.server.fabianduerr.com/signup/';\n\n\n    /**\n   * Constructor to inject HttpClient for making HTTP requests.\n   * @param http - The HttpClient instance for sending registration data.\n   */\n  constructor(private http: HttpClient) {}\n\n\n    /**\n   * Registers a new user by sending user data to the registration API.\n   * @param userData - Object containing user details: name, email, password, and confirmPassword.\n   * @returns An Observable that emits the server's response or an error if the registration fails.\n   */\n  registerUser(userData: {\n    name: string;\n    email: string;\n    password: string;\n    confirmPassword: string;\n  }): Observable {\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    return this.http\n      .post(this.registrationUrl, userData, { headers: headers })\n      .pipe(catchError(this.handleError));\n  }\n\n\n    /**\n   * Handles errors that occur during the registration process.\n   * Logs the error to the console and rethrows it for further handling.\n   * @param error - The error response object.\n   * @returns An Observable that emits an error notification.\n   */\n  private handleError(error: any) {\n    console.error('There was an error in Service!', error);\n    return throwError(error);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user.service.ts\n        \n\n\n            \n                Description\n            \n            \n                UserService manages user data, including fetching and setting the current user.\nIt uses local storage to persist user information and a BehaviorSubject to provide the current user as an observable.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                currentUserSubject\n                            \n                            \n                                    Private\n                                userDetailsUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchCurrentUser\n                            \n                            \n                                getCurrentUser\n                            \n                            \n                                setCurrentUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user.service.ts:21\n                            \n                        \n\n                \n                    \n                            Initializes the service by checking local storage for existing user details.\nIf found, sets them as the current user.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nHttpClient for making HTTP requests.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        fetchCurrentUser\n                        \n                    \n                \n            \n            \n                \nfetchCurrentUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:42\n                        \n                    \n\n\n            \n                \n                        Fetches the current user details from the server using the stored authentication token.\nUpdates the current user in the service if successful.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable emitting the User object or null if the request fails.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentUser\n                        \n                    \n                \n            \n            \n                \ngetCurrentUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:65\n                        \n                    \n\n\n            \n                \n                        Retrieves the current user as an observable.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable emitting the current User object or null if no user is set.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCurrentUser\n                        \n                    \n                \n            \n            \n                \nsetCurrentUser(user: User | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:75\n                        \n                    \n\n\n            \n                \n                        Sets the current user both in the BehaviorSubject and in local storage.\nIf the user is null, it clears the user details from local storage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                        User | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe User object to set as the current user or null to clear.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentUserSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user.service.ts:21\n                        \n                    \n\n            \n                \n                    BehaviorSubject to hold the current user details.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userDetailsUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://join.server.fabianduerr.com/user/details'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user.service.ts:18\n                        \n                    \n\n            \n                \n                    URL to retrieve user details from the server.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of, BehaviorSubject } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { User } from 'src/assets/models/user.model';\n\n\n/**\n * UserService manages user data, including fetching and setting the current user.\n * It uses local storage to persist user information and a BehaviorSubject to provide the current user as an observable.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n\n  /** URL to retrieve user details from the server. */\n  private userDetailsUrl = 'https://join.server.fabianduerr.com/user/details';\n\n  /** BehaviorSubject to hold the current user details. */\n  private currentUserSubject = new BehaviorSubject(null);\n\n\n  /**\n   * Initializes the service by checking local storage for existing user details.\n   * If found, sets them as the current user.\n   * @param http - HttpClient for making HTTP requests.\n   */\n  constructor(private http: HttpClient) {\n    const storedUser = localStorage.getItem('user_details')\n      ? JSON.parse(localStorage.getItem('user_details') || '{}')\n      : null;\n    this.currentUserSubject = new BehaviorSubject(storedUser);\n  }\n\n\n  /**\n   * Fetches the current user details from the server using the stored authentication token.\n   * Updates the current user in the service if successful.\n   * @returns An Observable emitting the User object or null if the request fails.\n   */\n  fetchCurrentUser(): Observable {\n    const token = localStorage.getItem('auth_token') || sessionStorage.getItem('auth_token');\n    if (!token) {\n      console.error('No token found');\n      return of(null); \n    }\n    const headers = new HttpHeaders({ Authorization: `Token ${token}` });\n    return this.http.get(this.userDetailsUrl, { headers: headers }).pipe(\n      tap(user => {\n        this.setCurrentUser(user); \n      }),\n      catchError(error => {\n        console.error('Error fetching user details:', error);\n        return of(null); \n      }),\n    );\n  }\n\n\n  /**\n   * Retrieves the current user as an observable.\n   * @returns An Observable emitting the current User object or null if no user is set.\n   */\n  getCurrentUser(): Observable {\n    return this.currentUserSubject.asObservable();\n  }\n\n\n  /**\n   * Sets the current user both in the BehaviorSubject and in local storage.\n   * If the user is null, it clears the user details from local storage.\n   * @param user - The User object to set as the current user or null to clear.\n   */\n  setCurrentUser(user: User | null): void {\n    this.currentUserSubject.next(user);\n    if (user) {\n      localStorage.setItem('user_details', JSON.stringify(user));\n    } else {\n      localStorage.removeItem('user_details');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                dist/join2.0_angular/assets/models/contact.model.ts\n            \n            interface\n            Contact\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                dist/join2.0_angular/assets/models/user.model.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/add-task/add-task.component.ts\n            \n            component\n            AddTaskComponent\n            \n                97 %\n                (43/44)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth.interceptor.ts\n            \n            interceptor\n            AuthInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/login.service.ts\n            \n            injectable\n            LoginService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/board-task-overlay/board-task-overlay.component.ts\n            \n            component\n            BoardTaskOverlayComponent\n            \n                90 %\n                (30/33)\n            \n        \n        \n            \n                \n                src/app/board/board.component.ts\n            \n            component\n            BoardComponent\n            \n                100 %\n                (47/47)\n            \n        \n        \n            \n                \n                src/app/contacts/contacts-add/contacts-add.component.ts\n            \n            component\n            ContactsAddComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/contacts/contacts-edit/contacts-edit.component.ts\n            \n            component\n            ContactsEditComponent\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                src/app/contacts/contacts-overview/contacts-overview.component.ts\n            \n            component\n            ContactsOverviewComponent\n            \n                95 %\n                (22/23)\n            \n        \n        \n            \n                \n                src/app/contacts/contacts-view/contacts-view.component.ts\n            \n            component\n            ContactsViewComponent\n            \n                100 %\n                (18/18)\n            \n        \n        \n            \n                \n                src/app/custom-date-parser-formatter.service.ts\n            \n            injectable\n            CustomDateParserFormatter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/custom-dateparser-formatter.ts\n            \n            injectable\n            CustomDateParserFormatter\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/edit-task/edit-task.component.ts\n            \n            component\n            EditTaskComponent\n            \n                100 %\n                (53/53)\n            \n        \n        \n            \n                \n                src/app/footer-bar/footer-bar.component.ts\n            \n            component\n            FooterBarComponent\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/app/header-bar-mobile/header-bar-mobile.component.ts\n            \n            component\n            HeaderBarMobileComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/imprint/legal-notice/legal-notice.component.ts\n            \n            component\n            LegalNoticeComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/imprint/privacy-policy/privacy-policy.component.ts\n            \n            component\n            PrivacyPolicyComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                100 %\n                (16/16)\n            \n        \n        \n            \n                \n                src/app/reset-password/reset-password.component.ts\n            \n            component\n            ResetPasswordComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/add-contact.service.ts\n            \n            injectable\n            AddContactService\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/services/auth-interceptor.service.ts\n            \n            interceptor\n            AuthInterceptorService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            injectable\n            UserRegistrationService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/services/category.service.ts\n            \n            injectable\n            CategoryService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/services/category.service.ts\n            \n            interface\n            Category\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/services/contact.service.ts\n            \n            injectable\n            ContactService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/services/contacts-overlay-service.service.ts\n            \n            injectable\n            ContactsOverlayService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/services/screen-size.service.ts\n            \n            injectable\n            ScreenSizeService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/services/subtask.service.ts\n            \n            injectable\n            SubtaskService\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/services/subtask.service.ts\n            \n            interface\n            Subtask\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/services/task.service.ts\n            \n            injectable\n            TaskService\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/services/task.service.ts\n            \n            interface\n            Subtask\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/services/task.service.ts\n            \n            interface\n            Task\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/app/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/sidebar/sidebar.component.ts\n            \n            component\n            SidebarComponent\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                src/app/sign-up/sign-up.component.ts\n            \n            component\n            SignUpComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/summary/summary.component.ts\n            \n            component\n            SummaryComponent\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                src/assets/models/contact.model.ts\n            \n            interface\n            Contact\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/assets/models/user.model.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/environments/environment.development.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^16.1.0\n        \n            @angular/cdk : ^16.2.0\n        \n            @angular/common : ^16.1.0\n        \n            @angular/compiler : ^16.1.0\n        \n            @angular/core : ^16.1.0\n        \n            @angular/forms : ^16.1.0\n        \n            @angular/platform-browser : ^16.1.0\n        \n            @angular/platform-browser-dynamic : ^16.1.0\n        \n            @angular/router : ^16.1.0\n        \n            @fortawesome/fontawesome-free : ^6.5.1\n        \n            @ng-bootstrap/ng-bootstrap : ^15.1.2\n        \n            @popperjs/core : ^2.11.6\n        \n            bootstrap : ^5.3.3\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.13.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nJoin20Angular\nThis project was generated with Angular CLI version 16.1.2.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://http://127.0.0.1:4200//. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAddTaskComponent\n\nAddTaskComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddTaskComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBoardComponent\n\nBoardComponent\n\nAppModule -->\n\nBoardComponent->AppModule\n\n\n\n\n\nBoardTaskOverlayComponent\n\nBoardTaskOverlayComponent\n\nAppModule -->\n\nBoardTaskOverlayComponent->AppModule\n\n\n\n\n\nContactsAddComponent\n\nContactsAddComponent\n\nAppModule -->\n\nContactsAddComponent->AppModule\n\n\n\n\n\nContactsEditComponent\n\nContactsEditComponent\n\nAppModule -->\n\nContactsEditComponent->AppModule\n\n\n\n\n\nContactsOverviewComponent\n\nContactsOverviewComponent\n\nAppModule -->\n\nContactsOverviewComponent->AppModule\n\n\n\n\n\nContactsViewComponent\n\nContactsViewComponent\n\nAppModule -->\n\nContactsViewComponent->AppModule\n\n\n\n\n\nEditTaskComponent\n\nEditTaskComponent\n\nAppModule -->\n\nEditTaskComponent->AppModule\n\n\n\n\n\nFooterBarComponent\n\nFooterBarComponent\n\nAppModule -->\n\nFooterBarComponent->AppModule\n\n\n\n\n\nHeaderBarMobileComponent\n\nHeaderBarMobileComponent\n\nAppModule -->\n\nHeaderBarMobileComponent->AppModule\n\n\n\n\n\nLegalNoticeComponent\n\nLegalNoticeComponent\n\nAppModule -->\n\nLegalNoticeComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nPrivacyPolicyComponent\n\nPrivacyPolicyComponent\n\nAppModule -->\n\nPrivacyPolicyComponent->AppModule\n\n\n\n\n\nResetPasswordComponent\n\nResetPasswordComponent\n\nAppModule -->\n\nResetPasswordComponent->AppModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nAppModule -->\n\nSidebarComponent->AppModule\n\n\n\n\n\nSignUpComponent\n\nSignUpComponent\n\nAppModule -->\n\nSignUpComponent->AppModule\n\n\n\n\n\nSummaryComponent\n\nSummaryComponent\n\nAppModule -->\n\nSummaryComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\n\n\nUserRegistrationService\n\nUserRegistrationService\n\nAppModule -->\n\nUserRegistrationService->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nAppModule -->\n\nUserService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    18 Components\n                \n            \n        \n        \n            \n                \n                    \n                    12 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    8 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        10 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.development.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.development.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  apiUrl: 'https://join.server.fabianduerr.com',\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  apiUrl: 'https://join.server.fabianduerr.com',\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
